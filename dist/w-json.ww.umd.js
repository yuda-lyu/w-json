!function(l,Z){"object"==typeof exports&&"undefined"!=typeof module?module.exports=Z():"function"==typeof define&&define.amd?define(Z):(l="undefined"!=typeof globalThis?globalThis:l||self)["w-json"]=Z()}(this,(function(){"use strict";function l(l,Z){(null==Z||Z>l.length)&&(Z=l.length);for(var d=0,m=new Array(Z);d<Z;d++)m[d]=l[d];return m}function Z(Z){return function(Z){if(Array.isArray(Z))return l(Z)}(Z)||function(l){if("undefined"!=typeof Symbol&&null!=l[Symbol.iterator]||null!=l["@@iterator"])return Array.from(l)}(Z)||function(Z,d){if(Z){if("string"==typeof Z)return l(Z,d);var m=Object.prototype.toString.call(Z).slice(8,-1);return"Object"===m&&Z.constructor&&(m=Z.constructor.name),"Map"===m||"Set"===m?Array.from(Z):"Arguments"===m||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(m)?l(Z,d):void 0}}(Z)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(l,Z,d,m,G,b,c){try{var X=l[b](c),W=X.value}catch(l){return void d(l)}X.done?Z(W):Promise.resolve(W).then(m,G)}function m(l){return function(){var Z=this,m=arguments;return new Promise((function(G,b){var c=l.apply(Z,m);function X(l){d(c,G,b,X,W,"next",l)}function W(l){d(c,G,b,X,W,"throw",l)}X(void 0)}))}}function G(l){return(G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(l){return typeof l}:function(l){return l&&"function"==typeof Symbol&&l.constructor===Symbol&&l!==Symbol.prototype?"symbol":typeof l})(l)}function b(l){var Z={exports:{}};return l(Z,Z.exports),Z.exports}var c=b((function(l){var Z=function(l){var Z,d=Object.prototype,m=d.hasOwnProperty,b="function"==typeof Symbol?Symbol:{},c=b.iterator||"@@iterator",X=b.asyncIterator||"@@asyncIterator",W=b.toStringTag||"@@toStringTag";function i(l,Z,d){return Object.defineProperty(l,Z,{value:d,enumerable:!0,configurable:!0,writable:!0}),l[Z]}try{i({},"")}catch(l){i=function(l,Z,d){return l[Z]=d}}function u(l,Z,d,m){var G=Z&&Z.prototype instanceof R?Z:R,b=Object.create(G.prototype),c=new t(m||[]);return b._invoke=function(l,Z,d){var m=y;return function(G,b){if(m===h)throw new Error("Generator is already running");if(m===I){if("throw"===G)throw b;return N()}for(d.method=G,d.arg=b;;){var c=d.delegate;if(c){var X=S(c,d);if(X){if(X===a)continue;return X}}if("next"===d.method)d.sent=d._sent=d.arg;else if("throw"===d.method){if(m===y)throw m=I,d.arg;d.dispatchException(d.arg)}else"return"===d.method&&d.abrupt("return",d.arg);m=h;var W=V(l,Z,d);if("normal"===W.type){if(m=d.done?I:p,W.arg===a)continue;return{value:W.arg,done:d.done}}"throw"===W.type&&(m=I,d.method="throw",d.arg=W.arg)}}}(l,d,c),b}function V(l,Z,d){try{return{type:"normal",arg:l.call(Z,d)}}catch(l){return{type:"throw",arg:l}}}l.wrap=u;var y="suspendedStart",p="suspendedYield",h="executing",I="completed",a={};function R(){}function Y(){}function L(){}var K={};K[c]=function(){return this};var o=Object.getPrototypeOf,n=o&&o(o(T([])));n&&n!==d&&m.call(n,c)&&(K=n);var J=L.prototype=R.prototype=Object.create(K);function s(l){["next","throw","return"].forEach((function(Z){i(l,Z,(function(l){return this._invoke(Z,l)}))}))}function H(l,Z){function d(b,c,X,W){var i=V(l[b],l,c);if("throw"!==i.type){var u=i.arg,y=u.value;return y&&"object"===G(y)&&m.call(y,"__await")?Z.resolve(y.__await).then((function(l){d("next",l,X,W)}),(function(l){d("throw",l,X,W)})):Z.resolve(y).then((function(l){u.value=l,X(u)}),(function(l){return d("throw",l,X,W)}))}W(i.arg)}var b;this._invoke=function(l,m){function G(){return new Z((function(Z,G){d(l,m,Z,G)}))}return b=b?b.then(G,G):G()}}function S(l,d){var m=l.iterator[d.method];if(m===Z){if(d.delegate=null,"throw"===d.method){if(l.iterator.return&&(d.method="return",d.arg=Z,S(l,d),"throw"===d.method))return a;d.method="throw",d.arg=new TypeError("The iterator does not provide a 'throw' method")}return a}var G=V(m,l.iterator,d.arg);if("throw"===G.type)return d.method="throw",d.arg=G.arg,d.delegate=null,a;var b=G.arg;return b?b.done?(d[l.resultName]=b.value,d.next=l.nextLoc,"return"!==d.method&&(d.method="next",d.arg=Z),d.delegate=null,a):b:(d.method="throw",d.arg=new TypeError("iterator result is not an object"),d.delegate=null,a)}function x(l){var Z={tryLoc:l[0]};1 in l&&(Z.catchLoc=l[1]),2 in l&&(Z.finallyLoc=l[2],Z.afterLoc=l[3]),this.tryEntries.push(Z)}function C(l){var Z=l.completion||{};Z.type="normal",delete Z.arg,l.completion=Z}function t(l){this.tryEntries=[{tryLoc:"root"}],l.forEach(x,this),this.reset(!0)}function T(l){if(l){var d=l[c];if(d)return d.call(l);if("function"==typeof l.next)return l;if(!isNaN(l.length)){var G=-1,b=function d(){for(;++G<l.length;)if(m.call(l,G))return d.value=l[G],d.done=!1,d;return d.value=Z,d.done=!0,d};return b.next=b}}return{next:N}}function N(){return{value:Z,done:!0}}return Y.prototype=J.constructor=L,L.constructor=Y,Y.displayName=i(L,W,"GeneratorFunction"),l.isGeneratorFunction=function(l){var Z="function"==typeof l&&l.constructor;return!!Z&&(Z===Y||"GeneratorFunction"===(Z.displayName||Z.name))},l.mark=function(l){return Object.setPrototypeOf?Object.setPrototypeOf(l,L):(l.__proto__=L,i(l,W,"GeneratorFunction")),l.prototype=Object.create(J),l},l.awrap=function(l){return{__await:l}},s(H.prototype),H.prototype[X]=function(){return this},l.AsyncIterator=H,l.async=function(Z,d,m,G,b){void 0===b&&(b=Promise);var c=new H(u(Z,d,m,G),b);return l.isGeneratorFunction(d)?c:c.next().then((function(l){return l.done?l.value:c.next()}))},s(J),i(J,W,"Generator"),J[c]=function(){return this},J.toString=function(){return"[object Generator]"},l.keys=function(l){var Z=[];for(var d in l)Z.push(d);return Z.reverse(),function d(){for(;Z.length;){var m=Z.pop();if(m in l)return d.value=m,d.done=!1,d}return d.done=!0,d}},l.values=T,t.prototype={constructor:t,reset:function(l){if(this.prev=0,this.next=0,this.sent=this._sent=Z,this.done=!1,this.delegate=null,this.method="next",this.arg=Z,this.tryEntries.forEach(C),!l)for(var d in this)"t"===d.charAt(0)&&m.call(this,d)&&!isNaN(+d.slice(1))&&(this[d]=Z)},stop:function(){this.done=!0;var l=this.tryEntries[0].completion;if("throw"===l.type)throw l.arg;return this.rval},dispatchException:function(l){if(this.done)throw l;var d=this;function G(m,G){return X.type="throw",X.arg=l,d.next=m,G&&(d.method="next",d.arg=Z),!!G}for(var b=this.tryEntries.length-1;b>=0;--b){var c=this.tryEntries[b],X=c.completion;if("root"===c.tryLoc)return G("end");if(c.tryLoc<=this.prev){var W=m.call(c,"catchLoc"),i=m.call(c,"finallyLoc");if(W&&i){if(this.prev<c.catchLoc)return G(c.catchLoc,!0);if(this.prev<c.finallyLoc)return G(c.finallyLoc)}else if(W){if(this.prev<c.catchLoc)return G(c.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<c.finallyLoc)return G(c.finallyLoc)}}}},abrupt:function(l,Z){for(var d=this.tryEntries.length-1;d>=0;--d){var G=this.tryEntries[d];if(G.tryLoc<=this.prev&&m.call(G,"finallyLoc")&&this.prev<G.finallyLoc){var b=G;break}}b&&("break"===l||"continue"===l)&&b.tryLoc<=Z&&Z<=b.finallyLoc&&(b=null);var c=b?b.completion:{};return c.type=l,c.arg=Z,b?(this.method="next",this.next=b.finallyLoc,a):this.complete(c)},complete:function(l,Z){if("throw"===l.type)throw l.arg;return"break"===l.type||"continue"===l.type?this.next=l.arg:"return"===l.type?(this.rval=this.arg=l.arg,this.method="return",this.next="end"):"normal"===l.type&&Z&&(this.next=Z),a},finish:function(l){for(var Z=this.tryEntries.length-1;Z>=0;--Z){var d=this.tryEntries[Z];if(d.finallyLoc===l)return this.complete(d.completion,d.afterLoc),C(d),a}},catch:function(l){for(var Z=this.tryEntries.length-1;Z>=0;--Z){var d=this.tryEntries[Z];if(d.tryLoc===l){var m=d.completion;if("throw"===m.type){var G=m.arg;C(d)}return G}}throw new Error("illegal catch attempt")},delegateYield:function(l,d,m){return this.delegate={iterator:T(l),resultName:d,nextLoc:m},"next"===this.method&&(this.arg=Z),a}},l}(l.exports);try{regeneratorRuntime=Z}catch(l){Function("r","regeneratorRuntime = r")(Z)}})),X=b((function(l){var Z=Object.prototype.hasOwnProperty,d="~";function m(){}function G(l,Z,d){this.fn=l,this.context=Z,this.once=d||!1}function b(l,Z,m,b,c){if("function"!=typeof m)throw new TypeError("The listener must be a function");var X=new G(m,b||l,c),W=d?d+Z:Z;return l._events[W]?l._events[W].fn?l._events[W]=[l._events[W],X]:l._events[W].push(X):(l._events[W]=X,l._eventsCount++),l}function c(l,Z){0==--l._eventsCount?l._events=new m:delete l._events[Z]}function X(){this._events=new m,this._eventsCount=0}Object.create&&(m.prototype=Object.create(null),(new m).__proto__||(d=!1)),X.prototype.eventNames=function(){var l,m,G=[];if(0===this._eventsCount)return G;for(m in l=this._events)Z.call(l,m)&&G.push(d?m.slice(1):m);return Object.getOwnPropertySymbols?G.concat(Object.getOwnPropertySymbols(l)):G},X.prototype.listeners=function(l){var Z=d?d+l:l,m=this._events[Z];if(!m)return[];if(m.fn)return[m.fn];for(var G=0,b=m.length,c=new Array(b);G<b;G++)c[G]=m[G].fn;return c},X.prototype.listenerCount=function(l){var Z=d?d+l:l,m=this._events[Z];return m?m.fn?1:m.length:0},X.prototype.emit=function(l,Z,m,G,b,c){var X=d?d+l:l;if(!this._events[X])return!1;var W,i,u=this._events[X],V=arguments.length;if(u.fn){switch(u.once&&this.removeListener(l,u.fn,void 0,!0),V){case 1:return u.fn.call(u.context),!0;case 2:return u.fn.call(u.context,Z),!0;case 3:return u.fn.call(u.context,Z,m),!0;case 4:return u.fn.call(u.context,Z,m,G),!0;case 5:return u.fn.call(u.context,Z,m,G,b),!0;case 6:return u.fn.call(u.context,Z,m,G,b,c),!0}for(i=1,W=new Array(V-1);i<V;i++)W[i-1]=arguments[i];u.fn.apply(u.context,W)}else{var y,p=u.length;for(i=0;i<p;i++)switch(u[i].once&&this.removeListener(l,u[i].fn,void 0,!0),V){case 1:u[i].fn.call(u[i].context);break;case 2:u[i].fn.call(u[i].context,Z);break;case 3:u[i].fn.call(u[i].context,Z,m);break;case 4:u[i].fn.call(u[i].context,Z,m,G);break;default:if(!W)for(y=1,W=new Array(V-1);y<V;y++)W[y-1]=arguments[y];u[i].fn.apply(u[i].context,W)}}return!0},X.prototype.on=function(l,Z,d){return b(this,l,Z,d,!1)},X.prototype.once=function(l,Z,d){return b(this,l,Z,d,!0)},X.prototype.removeListener=function(l,Z,m,G){var b=d?d+l:l;if(!this._events[b])return this;if(!Z)return c(this,b),this;var X=this._events[b];if(X.fn)X.fn!==Z||G&&!X.once||m&&X.context!==m||c(this,b);else{for(var W=0,i=[],u=X.length;W<u;W++)(X[W].fn!==Z||G&&!X[W].once||m&&X[W].context!==m)&&i.push(X[W]);i.length?this._events[b]=1===i.length?i[0]:i:c(this,b)}return this},X.prototype.removeAllListeners=function(l){var Z;return l?(Z=d?d+l:l,this._events[Z]&&c(this,Z)):(this._events=new m,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=d,X.EventEmitter=X,l.exports=X}));function W(){return new X}function i(){var l,Z,d=new Promise((function(){l=arguments[0],Z=arguments[1]}));return d.resolve=l,d.reject=Z,d}function u(){for(var l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,Z=[],d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),m=d.length,G=0;G<l;G++)Z[G]=d[0|Math.random()*m];var b=Z.join("");return b}var V=atob("");function y(){function l(l){var Z,d=window.URL||window.webkitURL;try{return Z=new Blob([l]),new Worker(d.createObjectURL(Z))}catch(l){console.log(l)}}var Z=l(V);if(null===Z)return console.log("invalid webworker"),null;function d(){Z.terminate(),Z=void 0}var m=W();function G(){var l={mode:"init",type:"object",input:Array.prototype.slice.call(arguments)};Z.postMessage(l)}function b(){var l=i(),d=u(),G={mode:"call",id:d,fun:"stringify",input:Array.prototype.slice.call(arguments)};return Z.postMessage(G),m.once(d,(function(Z){"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l}function c(){var l=i(),d=u(),G={mode:"call",id:d,fun:"parse",input:Array.prototype.slice.call(arguments)};return Z.postMessage(G),m.once(d,(function(Z){"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l}return Z.onmessage=function(l){var Z=l.data,d=Z.mode;"emit"!==d&&"return"!==d||("emit"===d&&m.emit(Z.evName,Z.msg),"return"===d&&m.emit(Z.id,Z))},G(Array.prototype.slice.call(arguments)),m.stringify=b,m.parse=c,m.terminate=d,m}var p,h,I=null,a={stringify:(h=m(c.mark((function l(){var d,m,G,b=arguments;return c.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return d=Array.prototype.slice.call(b),m=y(),l.next=4,m.stringify.apply(m,Z(d)).finally((function(){m.terminate()}));case 4:return G=l.sent,l.abrupt("return",G);case 6:case"end":return l.stop()}}),l)}))),function(){return h.apply(this,arguments)}),parse:(p=m(c.mark((function l(){var d,m,G,b=arguments;return c.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return d=Array.prototype.slice.call(b),m=y(),l.next=4,m.parse.apply(m,Z(d)).finally((function(){m.terminate()}));case 4:return G=l.sent,l.abrupt("return",G);case 6:case"end":return l.stop()}}),l)}))),function(){return p.apply(this,arguments)})};for(var R in I=W(),a){var Y=a[R];I[R]=Y}return I}));
