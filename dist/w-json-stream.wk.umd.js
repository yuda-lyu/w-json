!function(l,Z){"object"==typeof exports&&"undefined"!=typeof module?module.exports=Z(require("worker_threads")):"function"==typeof define&&define.amd?define(["worker_threads"],Z):(l="undefined"!=typeof globalThis?globalThis:l||self)["w-json-stream"]=Z(l.worker_threads)}(this,(function(l){"use strict";function Z(l){return l&&"object"==typeof l&&"default"in l?l:{default:l}}var d=Z(l);function m(l){return(m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(l){return typeof l}:function(l){return l&&"function"==typeof Symbol&&l.constructor===Symbol&&l!==Symbol.prototype?"symbol":typeof l})(l)}"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function b(l){var Z={exports:{}};return l(Z,Z.exports),Z.exports}var c=b((function(l,Z){l.exports=function(l){function Z(l,Z){(null==Z||Z>l.length)&&(Z=l.length);for(var d=0,m=new Array(Z);d<Z;d++)m[d]=l[d];return m}function d(l){return function(l){if(Array.isArray(l))return Z(l)}(l)||function(l){if("undefined"!=typeof Symbol&&null!=l[Symbol.iterator]||null!=l["@@iterator"])return Array.from(l)}(l)||function(l,d){if(l){if("string"==typeof l)return Z(l,d);var m=Object.prototype.toString.call(l).slice(8,-1);return"Object"===m&&l.constructor&&(m=l.constructor.name),"Map"===m||"Set"===m?Array.from(l):"Arguments"===m||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(m)?Z(l,d):void 0}}(l)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(l,Z,d,m,b,c,G){try{var X=l[c](G),W=X.value}catch(l){return void d(l)}X.done?Z(W):Promise.resolve(W).then(m,b)}function c(l){return function(){var Z=this,d=arguments;return new Promise((function(m,c){var G=l.apply(Z,d);function X(l){b(G,m,c,X,W,"next",l)}function W(l){b(G,m,c,X,W,"throw",l)}X(void 0)}))}}function G(l){return(G="function"==typeof Symbol&&"symbol"==m(Symbol.iterator)?function(l){return m(l)}:function(l){return l&&"function"==typeof Symbol&&l.constructor===Symbol&&l!==Symbol.prototype?"symbol":m(l)})(l)}function X(l){var Z={exports:{}};return l(Z,Z.exports),Z.exports}var W,i=X((function(l){var Z=function(l){var Z,d=Object.prototype,m=d.hasOwnProperty,b="function"==typeof Symbol?Symbol:{},c=b.iterator||"@@iterator",X=b.asyncIterator||"@@asyncIterator",W=b.toStringTag||"@@toStringTag";function i(l,Z,d){return Object.defineProperty(l,Z,{value:d,enumerable:!0,configurable:!0,writable:!0}),l[Z]}try{i({},"")}catch(l){i=function(l,Z,d){return l[Z]=d}}function u(l,Z,d,m){var b=Z&&Z.prototype instanceof Y?Z:Y,c=Object.create(b.prototype),G=new t(m||[]);return c._invoke=function(l,Z,d){var m=y;return function(b,c){if(m===I)throw new Error("Generator is already running");if(m===h){if("throw"===b)throw c;return N()}for(d.method=b,d.arg=c;;){var G=d.delegate;if(G){var X=S(G,d);if(X){if(X===a)continue;return X}}if("next"===d.method)d.sent=d._sent=d.arg;else if("throw"===d.method){if(m===y)throw m=h,d.arg;d.dispatchException(d.arg)}else"return"===d.method&&d.abrupt("return",d.arg);m=I;var W=p(l,Z,d);if("normal"===W.type){if(m=d.done?h:V,W.arg===a)continue;return{value:W.arg,done:d.done}}"throw"===W.type&&(m=h,d.method="throw",d.arg=W.arg)}}}(l,d,G),c}function p(l,Z,d){try{return{type:"normal",arg:l.call(Z,d)}}catch(l){return{type:"throw",arg:l}}}l.wrap=u;var y="suspendedStart",V="suspendedYield",I="executing",h="completed",a={};function Y(){}function R(){}function K(){}var o={};o[c]=function(){return this};var L=Object.getPrototypeOf,J=L&&L(L(T([])));J&&J!==d&&m.call(J,c)&&(o=J);var n=K.prototype=Y.prototype=Object.create(o);function s(l){["next","throw","return"].forEach((function(Z){i(l,Z,(function(l){return this._invoke(Z,l)}))}))}function H(l,Z){function d(b,c,X,W){var i=p(l[b],l,c);if("throw"!==i.type){var u=i.arg,y=u.value;return y&&"object"===G(y)&&m.call(y,"__await")?Z.resolve(y.__await).then((function(l){d("next",l,X,W)}),(function(l){d("throw",l,X,W)})):Z.resolve(y).then((function(l){u.value=l,X(u)}),(function(l){return d("throw",l,X,W)}))}W(i.arg)}var b;this._invoke=function(l,m){function c(){return new Z((function(Z,b){d(l,m,Z,b)}))}return b=b?b.then(c,c):c()}}function S(l,d){var m=l.iterator[d.method];if(m===Z){if(d.delegate=null,"throw"===d.method){if(l.iterator.return&&(d.method="return",d.arg=Z,S(l,d),"throw"===d.method))return a;d.method="throw",d.arg=new TypeError("The iterator does not provide a 'throw' method")}return a}var b=p(m,l.iterator,d.arg);if("throw"===b.type)return d.method="throw",d.arg=b.arg,d.delegate=null,a;var c=b.arg;return c?c.done?(d[l.resultName]=c.value,d.next=l.nextLoc,"return"!==d.method&&(d.method="next",d.arg=Z),d.delegate=null,a):c:(d.method="throw",d.arg=new TypeError("iterator result is not an object"),d.delegate=null,a)}function x(l){var Z={tryLoc:l[0]};1 in l&&(Z.catchLoc=l[1]),2 in l&&(Z.finallyLoc=l[2],Z.afterLoc=l[3]),this.tryEntries.push(Z)}function C(l){var Z=l.completion||{};Z.type="normal",delete Z.arg,l.completion=Z}function t(l){this.tryEntries=[{tryLoc:"root"}],l.forEach(x,this),this.reset(!0)}function T(l){if(l){var d=l[c];if(d)return d.call(l);if("function"==typeof l.next)return l;if(!isNaN(l.length)){var b=-1,G=function d(){for(;++b<l.length;)if(m.call(l,b))return d.value=l[b],d.done=!1,d;return d.value=Z,d.done=!0,d};return G.next=G}}return{next:N}}function N(){return{value:Z,done:!0}}return R.prototype=n.constructor=K,K.constructor=R,R.displayName=i(K,W,"GeneratorFunction"),l.isGeneratorFunction=function(l){var Z="function"==typeof l&&l.constructor;return!!Z&&(Z===R||"GeneratorFunction"===(Z.displayName||Z.name))},l.mark=function(l){return Object.setPrototypeOf?Object.setPrototypeOf(l,K):(l.__proto__=K,i(l,W,"GeneratorFunction")),l.prototype=Object.create(n),l},l.awrap=function(l){return{__await:l}},s(H.prototype),H.prototype[X]=function(){return this},l.AsyncIterator=H,l.async=function(Z,d,m,b,c){void 0===c&&(c=Promise);var G=new H(u(Z,d,m,b),c);return l.isGeneratorFunction(d)?G:G.next().then((function(l){return l.done?l.value:G.next()}))},s(n),i(n,W,"Generator"),n[c]=function(){return this},n.toString=function(){return"[object Generator]"},l.keys=function(l){var Z=[];for(var d in l)Z.push(d);return Z.reverse(),function d(){for(;Z.length;){var m=Z.pop();if(m in l)return d.value=m,d.done=!1,d}return d.done=!0,d}},l.values=T,t.prototype={constructor:t,reset:function(l){if(this.prev=0,this.next=0,this.sent=this._sent=Z,this.done=!1,this.delegate=null,this.method="next",this.arg=Z,this.tryEntries.forEach(C),!l)for(var d in this)"t"===d.charAt(0)&&m.call(this,d)&&!isNaN(+d.slice(1))&&(this[d]=Z)},stop:function(){this.done=!0;var l=this.tryEntries[0].completion;if("throw"===l.type)throw l.arg;return this.rval},dispatchException:function(l){if(this.done)throw l;var d=this;function b(m,b){return X.type="throw",X.arg=l,d.next=m,b&&(d.method="next",d.arg=Z),!!b}for(var c=this.tryEntries.length-1;c>=0;--c){var G=this.tryEntries[c],X=G.completion;if("root"===G.tryLoc)return b("end");if(G.tryLoc<=this.prev){var W=m.call(G,"catchLoc"),i=m.call(G,"finallyLoc");if(W&&i){if(this.prev<G.catchLoc)return b(G.catchLoc,!0);if(this.prev<G.finallyLoc)return b(G.finallyLoc)}else if(W){if(this.prev<G.catchLoc)return b(G.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<G.finallyLoc)return b(G.finallyLoc)}}}},abrupt:function(l,Z){for(var d=this.tryEntries.length-1;d>=0;--d){var b=this.tryEntries[d];if(b.tryLoc<=this.prev&&m.call(b,"finallyLoc")&&this.prev<b.finallyLoc){var c=b;break}}c&&("break"===l||"continue"===l)&&c.tryLoc<=Z&&Z<=c.finallyLoc&&(c=null);var G=c?c.completion:{};return G.type=l,G.arg=Z,c?(this.method="next",this.next=c.finallyLoc,a):this.complete(G)},complete:function(l,Z){if("throw"===l.type)throw l.arg;return"break"===l.type||"continue"===l.type?this.next=l.arg:"return"===l.type?(this.rval=this.arg=l.arg,this.method="return",this.next="end"):"normal"===l.type&&Z&&(this.next=Z),a},finish:function(l){for(var Z=this.tryEntries.length-1;Z>=0;--Z){var d=this.tryEntries[Z];if(d.finallyLoc===l)return this.complete(d.completion,d.afterLoc),C(d),a}},catch:function(l){for(var Z=this.tryEntries.length-1;Z>=0;--Z){var d=this.tryEntries[Z];if(d.tryLoc===l){var m=d.completion;if("throw"===m.type){var b=m.arg;C(d)}return b}}throw new Error("illegal catch attempt")},delegateYield:function(l,d,m){return this.delegate={iterator:T(l),resultName:d,nextLoc:m},"next"===this.method&&(this.arg=Z),a}},l}(l.exports);try{regeneratorRuntime=Z}catch(l){Function("r","regeneratorRuntime = r")(Z)}})),u=X((function(l){var Z=Object.prototype.hasOwnProperty,d="~";function m(){}function b(l,Z,d){this.fn=l,this.context=Z,this.once=d||!1}function c(l,Z,m,c,G){if("function"!=typeof m)throw new TypeError("The listener must be a function");var X=new b(m,c||l,G),W=d?d+Z:Z;return l._events[W]?l._events[W].fn?l._events[W]=[l._events[W],X]:l._events[W].push(X):(l._events[W]=X,l._eventsCount++),l}function G(l,Z){0==--l._eventsCount?l._events=new m:delete l._events[Z]}function X(){this._events=new m,this._eventsCount=0}Object.create&&(m.prototype=Object.create(null),(new m).__proto__||(d=!1)),X.prototype.eventNames=function(){var l,m,b=[];if(0===this._eventsCount)return b;for(m in l=this._events)Z.call(l,m)&&b.push(d?m.slice(1):m);return Object.getOwnPropertySymbols?b.concat(Object.getOwnPropertySymbols(l)):b},X.prototype.listeners=function(l){var Z=d?d+l:l,m=this._events[Z];if(!m)return[];if(m.fn)return[m.fn];for(var b=0,c=m.length,G=new Array(c);b<c;b++)G[b]=m[b].fn;return G},X.prototype.listenerCount=function(l){var Z=d?d+l:l,m=this._events[Z];return m?m.fn?1:m.length:0},X.prototype.emit=function(l,Z,m,b,c,G){var X=d?d+l:l;if(!this._events[X])return!1;var W,i,u=this._events[X],p=arguments.length;if(u.fn){switch(u.once&&this.removeListener(l,u.fn,void 0,!0),p){case 1:return u.fn.call(u.context),!0;case 2:return u.fn.call(u.context,Z),!0;case 3:return u.fn.call(u.context,Z,m),!0;case 4:return u.fn.call(u.context,Z,m,b),!0;case 5:return u.fn.call(u.context,Z,m,b,c),!0;case 6:return u.fn.call(u.context,Z,m,b,c,G),!0}for(i=1,W=new Array(p-1);i<p;i++)W[i-1]=arguments[i];u.fn.apply(u.context,W)}else{var y,V=u.length;for(i=0;i<V;i++)switch(u[i].once&&this.removeListener(l,u[i].fn,void 0,!0),p){case 1:u[i].fn.call(u[i].context);break;case 2:u[i].fn.call(u[i].context,Z);break;case 3:u[i].fn.call(u[i].context,Z,m);break;case 4:u[i].fn.call(u[i].context,Z,m,b);break;default:if(!W)for(y=1,W=new Array(p-1);y<p;y++)W[y-1]=arguments[y];u[i].fn.apply(u[i].context,W)}}return!0},X.prototype.on=function(l,Z,d){return c(this,l,Z,d,!1)},X.prototype.once=function(l,Z,d){return c(this,l,Z,d,!0)},X.prototype.removeListener=function(l,Z,m,b){var c=d?d+l:l;if(!this._events[c])return this;if(!Z)return G(this,c),this;var X=this._events[c];if(X.fn)X.fn!==Z||b&&!X.once||m&&X.context!==m||G(this,c);else{for(var W=0,i=[],u=X.length;W<u;W++)(X[W].fn!==Z||b&&!X[W].once||m&&X[W].context!==m)&&i.push(X[W]);i.length?this._events[c]=1===i.length?i[0]:i:G(this,c)}return this},X.prototype.removeAllListeners=function(l){var Z;return l?(Z=d?d+l:l,this._events[Z]&&G(this,Z)):(this._events=new m,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=d,X.EventEmitter=X,l.exports=X}));return function(){if("nodejs"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function Z(){return new u}function m(){var l,Z,d=new Promise((function(){l=arguments[0],Z=arguments[1]}));return d.resolve=l,d.reject=Z,d}function b(){for(var l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,Z=[],d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),m=d.length,b=0;b<l;b++)Z[b]=d[0|Math.random()*m];return Z.join("")}var G,X=(G="",Buffer.from(G,"base64").toString("ascii"));function p(){var d=Z();function c(Z){try{return new l.Worker(Z,{eval:!0})}catch(l){V(l)}}var G=c(X);if(!G)return V("invalid worker"),null;function W(){G?(G.terminate(),G=void 0):V("worker has been terminated")}function i(){var l={mode:"init",type:"object",input:Array.prototype.slice.call(arguments)};G.postMessage(l)}function u(){var l=m(),Z=b(),c={mode:"call",id:Z,fun:"stringify",input:Array.prototype.slice.call(arguments)};return G.postMessage(c),d.once(Z,(function(Z){"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l}function p(){var l=m(),Z=b(),c={mode:"call",id:Z,fun:"parse",input:Array.prototype.slice.call(arguments)};return G.postMessage(c),d.once(Z,(function(Z){"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l}function y(l){var Z=l,m=Z.mode;"emit"!==m&&"return"!==m||("emit"===m&&d.emit(Z.evName,Z.msg),"return"===m&&d.emit(Z.id,Z))}function V(l){d.emit("error",l)}return G.on("message",y),G.on("error",V),i(Array.prototype.slice.call(arguments)),d.stringify=u,d.parse=p,d.terminate=W,d}var y,V,I={stringify:(V=c(i.mark((function l(){var Z,m,b,c=arguments;return i.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return Z=Array.prototype.slice.call(c),m=p(),l.next=4,m.stringify.apply(m,d(Z)).finally((function(){m.terminate()}));case 4:return b=l.sent,l.abrupt("return",b);case 6:case"end":return l.stop()}}),l)}))),function(){return V.apply(this,arguments)}),parse:(y=c(i.mark((function l(){var Z,m,b,c=arguments;return i.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return Z=Array.prototype.slice.call(c),m=p(),l.next=4,m.parse.apply(m,d(Z)).finally((function(){m.terminate()}));case 4:return b=l.sent,l.abrupt("return",b);case 6:case"end":return l.stop()}}),l)}))),function(){return y.apply(this,arguments)})};for(var h in W=Z(),I){var a=I[h];W[h]=a}}(),W}(d.default)})),G=b((function(l,Z){l.exports=function(){function l(l,Z){(null==Z||Z>l.length)&&(Z=l.length);for(var d=0,m=new Array(Z);d<Z;d++)m[d]=l[d];return m}function Z(Z){return function(Z){if(Array.isArray(Z))return l(Z)}(Z)||function(l){if("undefined"!=typeof Symbol&&null!=l[Symbol.iterator]||null!=l["@@iterator"])return Array.from(l)}(Z)||function(Z,d){if(Z){if("string"==typeof Z)return l(Z,d);var m=Object.prototype.toString.call(Z).slice(8,-1);return"Object"===m&&Z.constructor&&(m=Z.constructor.name),"Map"===m||"Set"===m?Array.from(Z):"Arguments"===m||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(m)?l(Z,d):void 0}}(Z)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(l,Z,d,m,b,c,G){try{var X=l[c](G),W=X.value}catch(l){return void d(l)}X.done?Z(W):Promise.resolve(W).then(m,b)}function b(l){return function(){var Z=this,m=arguments;return new Promise((function(b,c){var G=l.apply(Z,m);function X(l){d(G,b,c,X,W,"next",l)}function W(l){d(G,b,c,X,W,"throw",l)}X(void 0)}))}}function c(l){return(c="function"==typeof Symbol&&"symbol"==m(Symbol.iterator)?function(l){return m(l)}:function(l){return l&&"function"==typeof Symbol&&l.constructor===Symbol&&l!==Symbol.prototype?"symbol":m(l)})(l)}function G(l){var Z={exports:{}};return l(Z,Z.exports),Z.exports}var X,W=G((function(l){var Z=function(l){var Z,d=Object.prototype,m=d.hasOwnProperty,b="function"==typeof Symbol?Symbol:{},G=b.iterator||"@@iterator",X=b.asyncIterator||"@@asyncIterator",W=b.toStringTag||"@@toStringTag";function i(l,Z,d){return Object.defineProperty(l,Z,{value:d,enumerable:!0,configurable:!0,writable:!0}),l[Z]}try{i({},"")}catch(l){i=function(l,Z,d){return l[Z]=d}}function u(l,Z,d,m){var b=Z&&Z.prototype instanceof Y?Z:Y,c=Object.create(b.prototype),G=new t(m||[]);return c._invoke=function(l,Z,d){var m=y;return function(b,c){if(m===I)throw new Error("Generator is already running");if(m===h){if("throw"===b)throw c;return N()}for(d.method=b,d.arg=c;;){var G=d.delegate;if(G){var X=S(G,d);if(X){if(X===a)continue;return X}}if("next"===d.method)d.sent=d._sent=d.arg;else if("throw"===d.method){if(m===y)throw m=h,d.arg;d.dispatchException(d.arg)}else"return"===d.method&&d.abrupt("return",d.arg);m=I;var W=p(l,Z,d);if("normal"===W.type){if(m=d.done?h:V,W.arg===a)continue;return{value:W.arg,done:d.done}}"throw"===W.type&&(m=h,d.method="throw",d.arg=W.arg)}}}(l,d,G),c}function p(l,Z,d){try{return{type:"normal",arg:l.call(Z,d)}}catch(l){return{type:"throw",arg:l}}}l.wrap=u;var y="suspendedStart",V="suspendedYield",I="executing",h="completed",a={};function Y(){}function R(){}function K(){}var o={};o[G]=function(){return this};var L=Object.getPrototypeOf,J=L&&L(L(T([])));J&&J!==d&&m.call(J,G)&&(o=J);var n=K.prototype=Y.prototype=Object.create(o);function s(l){["next","throw","return"].forEach((function(Z){i(l,Z,(function(l){return this._invoke(Z,l)}))}))}function H(l,Z){function d(b,G,X,W){var i=p(l[b],l,G);if("throw"!==i.type){var u=i.arg,y=u.value;return y&&"object"===c(y)&&m.call(y,"__await")?Z.resolve(y.__await).then((function(l){d("next",l,X,W)}),(function(l){d("throw",l,X,W)})):Z.resolve(y).then((function(l){u.value=l,X(u)}),(function(l){return d("throw",l,X,W)}))}W(i.arg)}var b;this._invoke=function(l,m){function c(){return new Z((function(Z,b){d(l,m,Z,b)}))}return b=b?b.then(c,c):c()}}function S(l,d){var m=l.iterator[d.method];if(m===Z){if(d.delegate=null,"throw"===d.method){if(l.iterator.return&&(d.method="return",d.arg=Z,S(l,d),"throw"===d.method))return a;d.method="throw",d.arg=new TypeError("The iterator does not provide a 'throw' method")}return a}var b=p(m,l.iterator,d.arg);if("throw"===b.type)return d.method="throw",d.arg=b.arg,d.delegate=null,a;var c=b.arg;return c?c.done?(d[l.resultName]=c.value,d.next=l.nextLoc,"return"!==d.method&&(d.method="next",d.arg=Z),d.delegate=null,a):c:(d.method="throw",d.arg=new TypeError("iterator result is not an object"),d.delegate=null,a)}function x(l){var Z={tryLoc:l[0]};1 in l&&(Z.catchLoc=l[1]),2 in l&&(Z.finallyLoc=l[2],Z.afterLoc=l[3]),this.tryEntries.push(Z)}function C(l){var Z=l.completion||{};Z.type="normal",delete Z.arg,l.completion=Z}function t(l){this.tryEntries=[{tryLoc:"root"}],l.forEach(x,this),this.reset(!0)}function T(l){if(l){var d=l[G];if(d)return d.call(l);if("function"==typeof l.next)return l;if(!isNaN(l.length)){var b=-1,c=function d(){for(;++b<l.length;)if(m.call(l,b))return d.value=l[b],d.done=!1,d;return d.value=Z,d.done=!0,d};return c.next=c}}return{next:N}}function N(){return{value:Z,done:!0}}return R.prototype=n.constructor=K,K.constructor=R,R.displayName=i(K,W,"GeneratorFunction"),l.isGeneratorFunction=function(l){var Z="function"==typeof l&&l.constructor;return!!Z&&(Z===R||"GeneratorFunction"===(Z.displayName||Z.name))},l.mark=function(l){return Object.setPrototypeOf?Object.setPrototypeOf(l,K):(l.__proto__=K,i(l,W,"GeneratorFunction")),l.prototype=Object.create(n),l},l.awrap=function(l){return{__await:l}},s(H.prototype),H.prototype[X]=function(){return this},l.AsyncIterator=H,l.async=function(Z,d,m,b,c){void 0===c&&(c=Promise);var G=new H(u(Z,d,m,b),c);return l.isGeneratorFunction(d)?G:G.next().then((function(l){return l.done?l.value:G.next()}))},s(n),i(n,W,"Generator"),n[G]=function(){return this},n.toString=function(){return"[object Generator]"},l.keys=function(l){var Z=[];for(var d in l)Z.push(d);return Z.reverse(),function d(){for(;Z.length;){var m=Z.pop();if(m in l)return d.value=m,d.done=!1,d}return d.done=!0,d}},l.values=T,t.prototype={constructor:t,reset:function(l){if(this.prev=0,this.next=0,this.sent=this._sent=Z,this.done=!1,this.delegate=null,this.method="next",this.arg=Z,this.tryEntries.forEach(C),!l)for(var d in this)"t"===d.charAt(0)&&m.call(this,d)&&!isNaN(+d.slice(1))&&(this[d]=Z)},stop:function(){this.done=!0;var l=this.tryEntries[0].completion;if("throw"===l.type)throw l.arg;return this.rval},dispatchException:function(l){if(this.done)throw l;var d=this;function b(m,b){return X.type="throw",X.arg=l,d.next=m,b&&(d.method="next",d.arg=Z),!!b}for(var c=this.tryEntries.length-1;c>=0;--c){var G=this.tryEntries[c],X=G.completion;if("root"===G.tryLoc)return b("end");if(G.tryLoc<=this.prev){var W=m.call(G,"catchLoc"),i=m.call(G,"finallyLoc");if(W&&i){if(this.prev<G.catchLoc)return b(G.catchLoc,!0);if(this.prev<G.finallyLoc)return b(G.finallyLoc)}else if(W){if(this.prev<G.catchLoc)return b(G.catchLoc,!0)}else{if(!i)throw new Error("try statement without catch or finally");if(this.prev<G.finallyLoc)return b(G.finallyLoc)}}}},abrupt:function(l,Z){for(var d=this.tryEntries.length-1;d>=0;--d){var b=this.tryEntries[d];if(b.tryLoc<=this.prev&&m.call(b,"finallyLoc")&&this.prev<b.finallyLoc){var c=b;break}}c&&("break"===l||"continue"===l)&&c.tryLoc<=Z&&Z<=c.finallyLoc&&(c=null);var G=c?c.completion:{};return G.type=l,G.arg=Z,c?(this.method="next",this.next=c.finallyLoc,a):this.complete(G)},complete:function(l,Z){if("throw"===l.type)throw l.arg;return"break"===l.type||"continue"===l.type?this.next=l.arg:"return"===l.type?(this.rval=this.arg=l.arg,this.method="return",this.next="end"):"normal"===l.type&&Z&&(this.next=Z),a},finish:function(l){for(var Z=this.tryEntries.length-1;Z>=0;--Z){var d=this.tryEntries[Z];if(d.finallyLoc===l)return this.complete(d.completion,d.afterLoc),C(d),a}},catch:function(l){for(var Z=this.tryEntries.length-1;Z>=0;--Z){var d=this.tryEntries[Z];if(d.tryLoc===l){var m=d.completion;if("throw"===m.type){var b=m.arg;C(d)}return b}}throw new Error("illegal catch attempt")},delegateYield:function(l,d,m){return this.delegate={iterator:T(l),resultName:d,nextLoc:m},"next"===this.method&&(this.arg=Z),a}},l}(l.exports);try{regeneratorRuntime=Z}catch(l){Function("r","regeneratorRuntime = r")(Z)}})),i=G((function(l){var Z=Object.prototype.hasOwnProperty,d="~";function m(){}function b(l,Z,d){this.fn=l,this.context=Z,this.once=d||!1}function c(l,Z,m,c,G){if("function"!=typeof m)throw new TypeError("The listener must be a function");var X=new b(m,c||l,G),W=d?d+Z:Z;return l._events[W]?l._events[W].fn?l._events[W]=[l._events[W],X]:l._events[W].push(X):(l._events[W]=X,l._eventsCount++),l}function G(l,Z){0==--l._eventsCount?l._events=new m:delete l._events[Z]}function X(){this._events=new m,this._eventsCount=0}Object.create&&(m.prototype=Object.create(null),(new m).__proto__||(d=!1)),X.prototype.eventNames=function(){var l,m,b=[];if(0===this._eventsCount)return b;for(m in l=this._events)Z.call(l,m)&&b.push(d?m.slice(1):m);return Object.getOwnPropertySymbols?b.concat(Object.getOwnPropertySymbols(l)):b},X.prototype.listeners=function(l){var Z=d?d+l:l,m=this._events[Z];if(!m)return[];if(m.fn)return[m.fn];for(var b=0,c=m.length,G=new Array(c);b<c;b++)G[b]=m[b].fn;return G},X.prototype.listenerCount=function(l){var Z=d?d+l:l,m=this._events[Z];return m?m.fn?1:m.length:0},X.prototype.emit=function(l,Z,m,b,c,G){var X=d?d+l:l;if(!this._events[X])return!1;var W,i,u=this._events[X],p=arguments.length;if(u.fn){switch(u.once&&this.removeListener(l,u.fn,void 0,!0),p){case 1:return u.fn.call(u.context),!0;case 2:return u.fn.call(u.context,Z),!0;case 3:return u.fn.call(u.context,Z,m),!0;case 4:return u.fn.call(u.context,Z,m,b),!0;case 5:return u.fn.call(u.context,Z,m,b,c),!0;case 6:return u.fn.call(u.context,Z,m,b,c,G),!0}for(i=1,W=new Array(p-1);i<p;i++)W[i-1]=arguments[i];u.fn.apply(u.context,W)}else{var y,V=u.length;for(i=0;i<V;i++)switch(u[i].once&&this.removeListener(l,u[i].fn,void 0,!0),p){case 1:u[i].fn.call(u[i].context);break;case 2:u[i].fn.call(u[i].context,Z);break;case 3:u[i].fn.call(u[i].context,Z,m);break;case 4:u[i].fn.call(u[i].context,Z,m,b);break;default:if(!W)for(y=1,W=new Array(p-1);y<p;y++)W[y-1]=arguments[y];u[i].fn.apply(u[i].context,W)}}return!0},X.prototype.on=function(l,Z,d){return c(this,l,Z,d,!1)},X.prototype.once=function(l,Z,d){return c(this,l,Z,d,!0)},X.prototype.removeListener=function(l,Z,m,b){var c=d?d+l:l;if(!this._events[c])return this;if(!Z)return G(this,c),this;var X=this._events[c];if(X.fn)X.fn!==Z||b&&!X.once||m&&X.context!==m||G(this,c);else{for(var W=0,i=[],u=X.length;W<u;W++)(X[W].fn!==Z||b&&!X[W].once||m&&X[W].context!==m)&&i.push(X[W]);i.length?this._events[c]=1===i.length?i[0]:i:G(this,c)}return this},X.prototype.removeAllListeners=function(l){var Z;return l?(Z=d?d+l:l,this._events[Z]&&G(this,Z)):(this._events=new m,this._eventsCount=0),this},X.prototype.off=X.prototype.removeListener,X.prototype.addListener=X.prototype.on,X.prefixed=d,X.EventEmitter=X,l.exports=X}));return function(){if("browser"!=("undefined"!=typeof window&&void 0!==window.document?"browser":"nodejs"))return null;function l(){return new i}function d(){var l,Z,d=new Promise((function(){l=arguments[0],Z=arguments[1]}));return d.resolve=l,d.reject=Z,d}function m(){for(var l=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,Z=[],d="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),m=d.length,b=0;b<l;b++)Z[b]=d[0|Math.random()*m];return Z.join("")}var c,G=(c="CnVuZGVmaW5lZAoKdmFyIHQ9InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWw/Z2xvYmFsOiJ1bmRlZmluZWQiIT10eXBlb2Ygc2VsZj9zZWxmOiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93P3dpbmRvdzp7fTtmdW5jdGlvbiBlKCl7dGhyb3cgbmV3IEVycm9yKCJzZXRUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkIil9ZnVuY3Rpb24gcigpe3Rocm93IG5ldyBFcnJvcigiY2xlYXJUaW1lb3V0IGhhcyBub3QgYmVlbiBkZWZpbmVkIil9dmFyIG49ZSxpPXI7ZnVuY3Rpb24gbyh0KXtpZihuPT09c2V0VGltZW91dClyZXR1cm4gc2V0VGltZW91dCh0LDApO2lmKChuPT09ZXx8IW4pJiZzZXRUaW1lb3V0KXJldHVybiBuPXNldFRpbWVvdXQsc2V0VGltZW91dCh0LDApO3RyeXtyZXR1cm4gbih0LDApfWNhdGNoKGUpe3RyeXtyZXR1cm4gbi5jYWxsKG51bGwsdCwwKX1jYXRjaChlKXtyZXR1cm4gbi5jYWxsKHRoaXMsdCwwKX19fSJmdW5jdGlvbiI9PXR5cGVvZiB0LnNldFRpbWVvdXQmJihuPXNldFRpbWVvdXQpLCJmdW5jdGlvbiI9PXR5cGVvZiB0LmNsZWFyVGltZW91dCYmKGk9Y2xlYXJUaW1lb3V0KTt2YXIgYSxzPVtdLHU9ITEsZj0tMTtmdW5jdGlvbiBoKCl7dSYmYSYmKHU9ITEsYS5sZW5ndGg/cz1hLmNvbmNhdChzKTpmPS0xLHMubGVuZ3RoJiZsKCkpfWZ1bmN0aW9uIGwoKXtpZighdSl7dmFyIHQ9byhoKTt1PSEwO2Zvcih2YXIgZT1zLmxlbmd0aDtlOyl7Zm9yKGE9cyxzPVtdOysrZjxlOylhJiZhW2ZdLnJ1bigpO2Y9LTEsZT1zLmxlbmd0aH1hPW51bGwsdT0hMSxmdW5jdGlvbih0KXtpZihpPT09Y2xlYXJUaW1lb3V0KXJldHVybiBjbGVhclRpbWVvdXQodCk7aWYoKGk9PT1yfHwhaSkmJmNsZWFyVGltZW91dClyZXR1cm4gaT1jbGVhclRpbWVvdXQsY2xlYXJUaW1lb3V0KHQpO3RyeXtpKHQpfWNhdGNoKGUpe3RyeXtyZXR1cm4gaS5jYWxsKG51bGwsdCl9Y2F0Y2goZSl7cmV0dXJuIGkuY2FsbCh0aGlzLHQpfX19KHQpfX1mdW5jdGlvbiBjKHQpe3ZhciBlPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpO2lmKGFyZ3VtZW50cy5sZW5ndGg+MSlmb3IodmFyIHI9MTtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKWVbci0xXT1hcmd1bWVudHNbcl07cy5wdXNoKG5ldyBkKHQsZSkpLDEhPT1zLmxlbmd0aHx8dXx8byhsKX1mdW5jdGlvbiBkKHQsZSl7dGhpcy5mdW49dCx0aGlzLmFycmF5PWV9ZC5wcm90b3R5cGUucnVuPWZ1bmN0aW9uKCl7dGhpcy5mdW4uYXBwbHkobnVsbCx0aGlzLmFycmF5KX07ZnVuY3Rpb24gcCgpe312YXIgZz1wLHk9cCxiPXAsdj1wLHc9cCxtPXAsXz1wO3ZhciBTPXQucGVyZm9ybWFuY2V8fHt9LEU9Uy5ub3d8fFMubW96Tm93fHxTLm1zTm93fHxTLm9Ob3d8fFMud2Via2l0Tm93fHxmdW5jdGlvbigpe3JldHVybihuZXcgRGF0ZSkuZ2V0VGltZSgpfTt2YXIgaz1uZXcgRGF0ZTt2YXIgUj17bmV4dFRpY2s6Yyx0aXRsZToiYnJvd3NlciIsYnJvd3NlcjohMCxlbnY6e30sYXJndjpbXSx2ZXJzaW9uOiIiLHZlcnNpb25zOnt9LG9uOmcsYWRkTGlzdGVuZXI6eSxvbmNlOmIsb2ZmOnYscmVtb3ZlTGlzdGVuZXI6dyxyZW1vdmVBbGxMaXN0ZW5lcnM6bSxlbWl0Ol8sYmluZGluZzpmdW5jdGlvbih0KXt0aHJvdyBuZXcgRXJyb3IoInByb2Nlc3MuYmluZGluZyBpcyBub3Qgc3VwcG9ydGVkIil9LGN3ZDpmdW5jdGlvbigpe3JldHVybiIvIn0sY2hkaXI6ZnVuY3Rpb24odCl7dGhyb3cgbmV3IEVycm9yKCJwcm9jZXNzLmNoZGlyIGlzIG5vdCBzdXBwb3J0ZWQiKX0sdW1hc2s6ZnVuY3Rpb24oKXtyZXR1cm4gMH0saHJ0aW1lOmZ1bmN0aW9uKHQpe3ZhciBlPS4wMDEqRS5jYWxsKFMpLHI9TWF0aC5mbG9vcihlKSxuPU1hdGguZmxvb3IoZSUxKjFlOSk7cmV0dXJuIHQmJihyLT10WzBdLChuLT10WzFdKTwwJiYoci0tLG4rPTFlOSkpLFtyLG5dfSxwbGF0Zm9ybToiYnJvd3NlciIscmVsZWFzZTp7fSxjb25maWc6e30sdXB0aW1lOmZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlLWspLzFlM319LGo9InVuZGVmaW5lZCIhPXR5cGVvZiBnbG9iYWxUaGlzP2dsb2JhbFRoaXM6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93OiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDoidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGY/c2VsZjp7fTtmdW5jdGlvbiBUKHQpe2lmKHQuX19lc01vZHVsZSlyZXR1cm4gdDt2YXIgZT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sIl9fZXNNb2R1bGUiLHt2YWx1ZTohMH0pO3JldHVybiBPYmplY3Qua2V5cyh0KS5mb3JFYWNoKChmdW5jdGlvbihyKXt2YXIgbj1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQscik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGUscixuLmdldD9uOntlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB0W3JdfX0pfSkpLGV9ZnVuY3Rpb24gTyh0KXt2YXIgZT17ZXhwb3J0czp7fX07cmV0dXJuIHQoZSxlLmV4cG9ydHMpLGUuZXhwb3J0c312YXIgQT1PKChmdW5jdGlvbih0KXt2b2lkIDA9PT1SfHwhUi52ZXJzaW9ufHwwPT09Ui52ZXJzaW9uLmluZGV4T2YoInYwLiIpfHwwPT09Ui52ZXJzaW9uLmluZGV4T2YoInYxLiIpJiYwIT09Ui52ZXJzaW9uLmluZGV4T2YoInYxLjguIik/dC5leHBvcnRzPXtuZXh0VGljazpmdW5jdGlvbih0LGUscixuKXtpZigiZnVuY3Rpb24iIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCciY2FsbGJhY2siIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO3ZhciBpLG8sYT1hcmd1bWVudHMubGVuZ3RoO3N3aXRjaChhKXtjYXNlIDA6Y2FzZSAxOnJldHVybiBSLm5leHRUaWNrKHQpO2Nhc2UgMjpyZXR1cm4gUi5uZXh0VGljaygoZnVuY3Rpb24oKXt0LmNhbGwobnVsbCxlKX0pKTtjYXNlIDM6cmV0dXJuIFIubmV4dFRpY2soKGZ1bmN0aW9uKCl7dC5jYWxsKG51bGwsZSxyKX0pKTtjYXNlIDQ6cmV0dXJuIFIubmV4dFRpY2soKGZ1bmN0aW9uKCl7dC5jYWxsKG51bGwsZSxyLG4pfSkpO2RlZmF1bHQ6Zm9yKGk9bmV3IEFycmF5KGEtMSksbz0wO288aS5sZW5ndGg7KWlbbysrXT1hcmd1bWVudHNbb107cmV0dXJuIFIubmV4dFRpY2soKGZ1bmN0aW9uKCl7dC5hcHBseShudWxsLGkpfSkpfX19OnQuZXhwb3J0cz1SfSkpLEM9e30udG9TdHJpbmcsTT1BcnJheS5pc0FycmF5fHxmdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBBcnJheV0iPT1DLmNhbGwodCl9O2Z1bmN0aW9uIHgoKXt9ZnVuY3Rpb24gTCgpe0wuaW5pdC5jYWxsKHRoaXMpfWZ1bmN0aW9uIEIodCl7cmV0dXJuIHZvaWQgMD09PXQuX21heExpc3RlbmVycz9MLmRlZmF1bHRNYXhMaXN0ZW5lcnM6dC5fbWF4TGlzdGVuZXJzfWZ1bmN0aW9uIFAodCxlLHIpe2lmKGUpdC5jYWxsKHIpO2Vsc2UgZm9yKHZhciBuPXQubGVuZ3RoLGk9eih0LG4pLG89MDtvPG47KytvKWlbb10uY2FsbChyKX1mdW5jdGlvbiBVKHQsZSxyLG4pe2lmKGUpdC5jYWxsKHIsbik7ZWxzZSBmb3IodmFyIGk9dC5sZW5ndGgsbz16KHQsaSksYT0wO2E8aTsrK2Epb1thXS5jYWxsKHIsbil9ZnVuY3Rpb24gTih0LGUscixuLGkpe2lmKGUpdC5jYWxsKHIsbixpKTtlbHNlIGZvcih2YXIgbz10Lmxlbmd0aCxhPXoodCxvKSxzPTA7czxvOysrcylhW3NdLmNhbGwocixuLGkpfWZ1bmN0aW9uIEQodCxlLHIsbixpLG8pe2lmKGUpdC5jYWxsKHIsbixpLG8pO2Vsc2UgZm9yKHZhciBhPXQubGVuZ3RoLHM9eih0LGEpLHU9MDt1PGE7Kyt1KXNbdV0uY2FsbChyLG4saSxvKX1mdW5jdGlvbiBJKHQsZSxyLG4pe2lmKGUpdC5hcHBseShyLG4pO2Vsc2UgZm9yKHZhciBpPXQubGVuZ3RoLG89eih0LGkpLGE9MDthPGk7KythKW9bYV0uYXBwbHkocixuKX1mdW5jdGlvbiBxKHQsZSxyLG4pe3ZhciBpLG8sYSxzO2lmKCJmdW5jdGlvbiIhPXR5cGVvZiByKXRocm93IG5ldyBUeXBlRXJyb3IoJyJsaXN0ZW5lciIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7aWYoKG89dC5fZXZlbnRzKT8oby5uZXdMaXN0ZW5lciYmKHQuZW1pdCgibmV3TGlzdGVuZXIiLGUsci5saXN0ZW5lcj9yLmxpc3RlbmVyOnIpLG89dC5fZXZlbnRzKSxhPW9bZV0pOihvPXQuX2V2ZW50cz1uZXcgeCx0Ll9ldmVudHNDb3VudD0wKSxhKXtpZigiZnVuY3Rpb24iPT10eXBlb2YgYT9hPW9bZV09bj9bcixhXTpbYSxyXTpuP2EudW5zaGlmdChyKTphLnB1c2gociksIWEud2FybmVkJiYoaT1CKHQpKSYmaT4wJiZhLmxlbmd0aD5pKXthLndhcm5lZD0hMDt2YXIgdT1uZXcgRXJyb3IoIlBvc3NpYmxlIEV2ZW50RW1pdHRlciBtZW1vcnkgbGVhayBkZXRlY3RlZC4gIithLmxlbmd0aCsiICIrZSsiIGxpc3RlbmVycyBhZGRlZC4gVXNlIGVtaXR0ZXIuc2V0TWF4TGlzdGVuZXJzKCkgdG8gaW5jcmVhc2UgbGltaXQiKTt1Lm5hbWU9Ik1heExpc3RlbmVyc0V4Y2VlZGVkV2FybmluZyIsdS5lbWl0dGVyPXQsdS50eXBlPWUsdS5jb3VudD1hLmxlbmd0aCxzPXUsImZ1bmN0aW9uIj09dHlwZW9mIGNvbnNvbGUud2Fybj9jb25zb2xlLndhcm4ocyk6Y29uc29sZS5sb2cocyl9fWVsc2UgYT1vW2VdPXIsKyt0Ll9ldmVudHNDb3VudDtyZXR1cm4gdH1mdW5jdGlvbiBGKHQsZSxyKXt2YXIgbj0hMTtmdW5jdGlvbiBpKCl7dC5yZW1vdmVMaXN0ZW5lcihlLGkpLG58fChuPSEwLHIuYXBwbHkodCxhcmd1bWVudHMpKX1yZXR1cm4gaS5saXN0ZW5lcj1yLGl9ZnVuY3Rpb24gVyh0KXt2YXIgZT10aGlzLl9ldmVudHM7aWYoZSl7dmFyIHI9ZVt0XTtpZigiZnVuY3Rpb24iPT10eXBlb2YgcilyZXR1cm4gMTtpZihyKXJldHVybiByLmxlbmd0aH1yZXR1cm4gMH1mdW5jdGlvbiB6KHQsZSl7Zm9yKHZhciByPW5ldyBBcnJheShlKTtlLS07KXJbZV09dFtlXTtyZXR1cm4gcn14LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKG51bGwpLEwuRXZlbnRFbWl0dGVyPUwsTC51c2luZ0RvbWFpbnM9ITEsTC5wcm90b3R5cGUuZG9tYWluPXZvaWQgMCxMLnByb3RvdHlwZS5fZXZlbnRzPXZvaWQgMCxMLnByb3RvdHlwZS5fbWF4TGlzdGVuZXJzPXZvaWQgMCxMLmRlZmF1bHRNYXhMaXN0ZW5lcnM9MTAsTC5pbml0PWZ1bmN0aW9uKCl7dGhpcy5kb21haW49bnVsbCxMLnVzaW5nRG9tYWlucyYmdW5kZWZpbmVkLmFjdGl2ZSx0aGlzLl9ldmVudHMmJnRoaXMuX2V2ZW50cyE9PU9iamVjdC5nZXRQcm90b3R5cGVPZih0aGlzKS5fZXZlbnRzfHwodGhpcy5fZXZlbnRzPW5ldyB4LHRoaXMuX2V2ZW50c0NvdW50PTApLHRoaXMuX21heExpc3RlbmVycz10aGlzLl9tYXhMaXN0ZW5lcnN8fHZvaWQgMH0sTC5wcm90b3R5cGUuc2V0TWF4TGlzdGVuZXJzPWZ1bmN0aW9uKHQpe2lmKCJudW1iZXIiIT10eXBlb2YgdHx8dDwwfHxpc05hTih0KSl0aHJvdyBuZXcgVHlwZUVycm9yKCcibiIgYXJndW1lbnQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcicpO3JldHVybiB0aGlzLl9tYXhMaXN0ZW5lcnM9dCx0aGlzfSxMLnByb3RvdHlwZS5nZXRNYXhMaXN0ZW5lcnM9ZnVuY3Rpb24oKXtyZXR1cm4gQih0aGlzKX0sTC5wcm90b3R5cGUuZW1pdD1mdW5jdGlvbih0KXt2YXIgZSxyLG4saSxvLGEscyx1PSJlcnJvciI9PT10O2lmKGE9dGhpcy5fZXZlbnRzKXU9dSYmbnVsbD09YS5lcnJvcjtlbHNlIGlmKCF1KXJldHVybiExO2lmKHM9dGhpcy5kb21haW4sdSl7aWYoZT1hcmd1bWVudHNbMV0sIXMpe2lmKGUgaW5zdGFuY2VvZiBFcnJvcil0aHJvdyBlO3ZhciBmPW5ldyBFcnJvcignVW5jYXVnaHQsIHVuc3BlY2lmaWVkICJlcnJvciIgZXZlbnQuICgnK2UrIikiKTt0aHJvdyBmLmNvbnRleHQ9ZSxmfXJldHVybiBlfHwoZT1uZXcgRXJyb3IoJ1VuY2F1Z2h0LCB1bnNwZWNpZmllZCAiZXJyb3IiIGV2ZW50JykpLGUuZG9tYWluRW1pdHRlcj10aGlzLGUuZG9tYWluPXMsZS5kb21haW5UaHJvd249ITEscy5lbWl0KCJlcnJvciIsZSksITF9aWYoIShyPWFbdF0pKXJldHVybiExO3ZhciBoPSJmdW5jdGlvbiI9PXR5cGVvZiByO3N3aXRjaChuPWFyZ3VtZW50cy5sZW5ndGgpe2Nhc2UgMTpQKHIsaCx0aGlzKTticmVhaztjYXNlIDI6VShyLGgsdGhpcyxhcmd1bWVudHNbMV0pO2JyZWFrO2Nhc2UgMzpOKHIsaCx0aGlzLGFyZ3VtZW50c1sxXSxhcmd1bWVudHNbMl0pO2JyZWFrO2Nhc2UgNDpEKHIsaCx0aGlzLGFyZ3VtZW50c1sxXSxhcmd1bWVudHNbMl0sYXJndW1lbnRzWzNdKTticmVhaztkZWZhdWx0OmZvcihpPW5ldyBBcnJheShuLTEpLG89MTtvPG47bysrKWlbby0xXT1hcmd1bWVudHNbb107SShyLGgsdGhpcyxpKX1yZXR1cm4hMH0sTC5wcm90b3R5cGUuYWRkTGlzdGVuZXI9ZnVuY3Rpb24odCxlKXtyZXR1cm4gcSh0aGlzLHQsZSwhMSl9LEwucHJvdG90eXBlLm9uPUwucHJvdG90eXBlLmFkZExpc3RlbmVyLEwucHJvdG90eXBlLnByZXBlbmRMaXN0ZW5lcj1mdW5jdGlvbih0LGUpe3JldHVybiBxKHRoaXMsdCxlLCEwKX0sTC5wcm90b3R5cGUub25jZT1mdW5jdGlvbih0LGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJyJsaXN0ZW5lciIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7cmV0dXJuIHRoaXMub24odCxGKHRoaXMsdCxlKSksdGhpc30sTC5wcm90b3R5cGUucHJlcGVuZE9uY2VMaXN0ZW5lcj1mdW5jdGlvbih0LGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJyJsaXN0ZW5lciIgYXJndW1lbnQgbXVzdCBiZSBhIGZ1bmN0aW9uJyk7cmV0dXJuIHRoaXMucHJlcGVuZExpc3RlbmVyKHQsRih0aGlzLHQsZSkpLHRoaXN9LEwucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyPWZ1bmN0aW9uKHQsZSl7dmFyIHIsbixpLG8sYTtpZigiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCcibGlzdGVuZXIiIGFyZ3VtZW50IG11c3QgYmUgYSBmdW5jdGlvbicpO2lmKCEobj10aGlzLl9ldmVudHMpKXJldHVybiB0aGlzO2lmKCEocj1uW3RdKSlyZXR1cm4gdGhpcztpZihyPT09ZXx8ci5saXN0ZW5lciYmci5saXN0ZW5lcj09PWUpMD09LS10aGlzLl9ldmVudHNDb3VudD90aGlzLl9ldmVudHM9bmV3IHg6KGRlbGV0ZSBuW3RdLG4ucmVtb3ZlTGlzdGVuZXImJnRoaXMuZW1pdCgicmVtb3ZlTGlzdGVuZXIiLHQsci5saXN0ZW5lcnx8ZSkpO2Vsc2UgaWYoImZ1bmN0aW9uIiE9dHlwZW9mIHIpe2ZvcihpPS0xLG89ci5sZW5ndGg7by0tID4wOylpZihyW29dPT09ZXx8cltvXS5saXN0ZW5lciYmcltvXS5saXN0ZW5lcj09PWUpe2E9cltvXS5saXN0ZW5lcixpPW87YnJlYWt9aWYoaTwwKXJldHVybiB0aGlzO2lmKDE9PT1yLmxlbmd0aCl7aWYoclswXT12b2lkIDAsMD09LS10aGlzLl9ldmVudHNDb3VudClyZXR1cm4gdGhpcy5fZXZlbnRzPW5ldyB4LHRoaXM7ZGVsZXRlIG5bdF19ZWxzZSFmdW5jdGlvbih0LGUpe2Zvcih2YXIgcj1lLG49cisxLGk9dC5sZW5ndGg7bjxpO3IrPTEsbis9MSl0W3JdPXRbbl07dC5wb3AoKX0ocixpKTtuLnJlbW92ZUxpc3RlbmVyJiZ0aGlzLmVtaXQoInJlbW92ZUxpc3RlbmVyIix0LGF8fGUpfXJldHVybiB0aGlzfSxMLnByb3RvdHlwZS5yZW1vdmVBbGxMaXN0ZW5lcnM9ZnVuY3Rpb24odCl7dmFyIGUscjtpZighKHI9dGhpcy5fZXZlbnRzKSlyZXR1cm4gdGhpcztpZighci5yZW1vdmVMaXN0ZW5lcilyZXR1cm4gMD09PWFyZ3VtZW50cy5sZW5ndGg/KHRoaXMuX2V2ZW50cz1uZXcgeCx0aGlzLl9ldmVudHNDb3VudD0wKTpyW3RdJiYoMD09LS10aGlzLl9ldmVudHNDb3VudD90aGlzLl9ldmVudHM9bmV3IHg6ZGVsZXRlIHJbdF0pLHRoaXM7aWYoMD09PWFyZ3VtZW50cy5sZW5ndGgpe2Zvcih2YXIgbixpPU9iamVjdC5rZXlzKHIpLG89MDtvPGkubGVuZ3RoOysrbykicmVtb3ZlTGlzdGVuZXIiIT09KG49aVtvXSkmJnRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKG4pO3JldHVybiB0aGlzLnJlbW92ZUFsbExpc3RlbmVycygicmVtb3ZlTGlzdGVuZXIiKSx0aGlzLl9ldmVudHM9bmV3IHgsdGhpcy5fZXZlbnRzQ291bnQ9MCx0aGlzfWlmKCJmdW5jdGlvbiI9PXR5cGVvZihlPXJbdF0pKXRoaXMucmVtb3ZlTGlzdGVuZXIodCxlKTtlbHNlIGlmKGUpZG97dGhpcy5yZW1vdmVMaXN0ZW5lcih0LGVbZS5sZW5ndGgtMV0pfXdoaWxlKGVbMF0pO3JldHVybiB0aGlzfSxMLnByb3RvdHlwZS5saXN0ZW5lcnM9ZnVuY3Rpb24odCl7dmFyIGUscj10aGlzLl9ldmVudHM7cmV0dXJuIHImJihlPXJbdF0pPyJmdW5jdGlvbiI9PXR5cGVvZiBlP1tlLmxpc3RlbmVyfHxlXTpmdW5jdGlvbih0KXtmb3IodmFyIGU9bmV3IEFycmF5KHQubGVuZ3RoKSxyPTA7cjxlLmxlbmd0aDsrK3IpZVtyXT10W3JdLmxpc3RlbmVyfHx0W3JdO3JldHVybiBlfShlKTpbXX0sTC5saXN0ZW5lckNvdW50PWZ1bmN0aW9uKHQsZSl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHQubGlzdGVuZXJDb3VudD90Lmxpc3RlbmVyQ291bnQoZSk6Vy5jYWxsKHQsZSl9LEwucHJvdG90eXBlLmxpc3RlbmVyQ291bnQ9VyxMLnByb3RvdHlwZS5ldmVudE5hbWVzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2V2ZW50c0NvdW50PjA/UmVmbGVjdC5vd25LZXlzKHRoaXMuX2V2ZW50cyk6W119O3ZhciBZPVQoT2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZGVmYXVsdDpMLEV2ZW50RW1pdHRlcjpMfSkpLCQ9WS5FdmVudEVtaXR0ZXIsSD1bXSxKPVtdLEc9InVuZGVmaW5lZCIhPXR5cGVvZiBVaW50OEFycmF5P1VpbnQ4QXJyYXk6QXJyYXksVj0hMTtmdW5jdGlvbiBLKCl7Vj0hMDtmb3IodmFyIHQ9IkFCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaYWJjZGVmZ2hpamtsbW5vcHFyc3R1dnd4eXowMTIzNDU2Nzg5Ky8iLGU9MCxyPXQubGVuZ3RoO2U8cjsrK2UpSFtlXT10W2VdLEpbdC5jaGFyQ29kZUF0KGUpXT1lO0pbIi0iLmNoYXJDb2RlQXQoMCldPTYyLEpbIl8iLmNoYXJDb2RlQXQoMCldPTYzfWZ1bmN0aW9uIFoodCxlLHIpe2Zvcih2YXIgbixpLG89W10sYT1lO2E8cjthKz0zKW49KHRbYV08PDE2KSsodFthKzFdPDw4KSt0W2ErMl0sby5wdXNoKEhbKGk9bik+PjE4JjYzXStIW2k+PjEyJjYzXStIW2k+PjYmNjNdK0hbNjMmaV0pO3JldHVybiBvLmpvaW4oIiIpfWZ1bmN0aW9uIFgodCl7dmFyIGU7Vnx8SygpO2Zvcih2YXIgcj10Lmxlbmd0aCxuPXIlMyxpPSIiLG89W10sYT0xNjM4MyxzPTAsdT1yLW47czx1O3MrPWEpby5wdXNoKFoodCxzLHMrYT51P3U6cythKSk7cmV0dXJuIDE9PT1uPyhlPXRbci0xXSxpKz1IW2U+PjJdLGkrPUhbZTw8NCY2M10saSs9Ij09Iik6Mj09PW4mJihlPSh0W3ItMl08PDgpK3Rbci0xXSxpKz1IW2U+PjEwXSxpKz1IW2U+PjQmNjNdLGkrPUhbZTw8MiY2M10saSs9Ij0iKSxvLnB1c2goaSksby5qb2luKCIiKX1mdW5jdGlvbiBRKHQsZSxyLG4saSl7dmFyIG8sYSxzPTgqaS1uLTEsdT0oMTw8cyktMSxmPXU+PjEsaD0tNyxsPXI/aS0xOjAsYz1yPy0xOjEsZD10W2UrbF07Zm9yKGwrPWMsbz1kJigxPDwtaCktMSxkPj49LWgsaCs9cztoPjA7bz0yNTYqbyt0W2UrbF0sbCs9YyxoLT04KTtmb3IoYT1vJigxPDwtaCktMSxvPj49LWgsaCs9bjtoPjA7YT0yNTYqYSt0W2UrbF0sbCs9YyxoLT04KTtpZigwPT09bylvPTEtZjtlbHNle2lmKG89PT11KXJldHVybiBhP05hTjoxLzAqKGQ/LTE6MSk7YSs9TWF0aC5wb3coMixuKSxvLT1mfXJldHVybihkPy0xOjEpKmEqTWF0aC5wb3coMixvLW4pfWZ1bmN0aW9uIHR0KHQsZSxyLG4saSxvKXt2YXIgYSxzLHUsZj04Km8taS0xLGg9KDE8PGYpLTEsbD1oPj4xLGM9MjM9PT1pP01hdGgucG93KDIsLTI0KS1NYXRoLnBvdygyLC03Nyk6MCxkPW4/MDpvLTEscD1uPzE6LTEsZz1lPDB8fDA9PT1lJiYxL2U8MD8xOjA7Zm9yKGU9TWF0aC5hYnMoZSksaXNOYU4oZSl8fGU9PT0xLzA/KHM9aXNOYU4oZSk/MTowLGE9aCk6KGE9TWF0aC5mbG9vcihNYXRoLmxvZyhlKS9NYXRoLkxOMiksZSoodT1NYXRoLnBvdygyLC1hKSk8MSYmKGEtLSx1Kj0yKSwoZSs9YStsPj0xP2MvdTpjKk1hdGgucG93KDIsMS1sKSkqdT49MiYmKGErKyx1Lz0yKSxhK2w+PWg/KHM9MCxhPWgpOmErbD49MT8ocz0oZSp1LTEpKk1hdGgucG93KDIsaSksYSs9bCk6KHM9ZSpNYXRoLnBvdygyLGwtMSkqTWF0aC5wb3coMixpKSxhPTApKTtpPj04O3RbcitkXT0yNTUmcyxkKz1wLHMvPTI1NixpLT04KTtmb3IoYT1hPDxpfHMsZis9aTtmPjA7dFtyK2RdPTI1NSZhLGQrPXAsYS89MjU2LGYtPTgpO3RbcitkLXBdfD0xMjgqZ312YXIgZXQ9e30udG9TdHJpbmcscnQ9QXJyYXkuaXNBcnJheXx8ZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgQXJyYXldIj09ZXQuY2FsbCh0KX07YXQuVFlQRURfQVJSQVlfU1VQUE9SVD12b2lkIDA9PT10LlRZUEVEX0FSUkFZX1NVUFBPUlR8fHQuVFlQRURfQVJSQVlfU1VQUE9SVDt2YXIgbnQ9aXQoKTtmdW5jdGlvbiBpdCgpe3JldHVybiBhdC5UWVBFRF9BUlJBWV9TVVBQT1JUPzIxNDc0ODM2NDc6MTA3Mzc0MTgyM31mdW5jdGlvbiBvdCh0LGUpe2lmKGl0KCk8ZSl0aHJvdyBuZXcgUmFuZ2VFcnJvcigiSW52YWxpZCB0eXBlZCBhcnJheSBsZW5ndGgiKTtyZXR1cm4gYXQuVFlQRURfQVJSQVlfU1VQUE9SVD8odD1uZXcgVWludDhBcnJheShlKSkuX19wcm90b19fPWF0LnByb3RvdHlwZToobnVsbD09PXQmJih0PW5ldyBhdChlKSksdC5sZW5ndGg9ZSksdH1mdW5jdGlvbiBhdCh0LGUscil7aWYoIShhdC5UWVBFRF9BUlJBWV9TVVBQT1JUfHx0aGlzIGluc3RhbmNlb2YgYXQpKXJldHVybiBuZXcgYXQodCxlLHIpO2lmKCJudW1iZXIiPT10eXBlb2YgdCl7aWYoInN0cmluZyI9PXR5cGVvZiBlKXRocm93IG5ldyBFcnJvcigiSWYgZW5jb2RpbmcgaXMgc3BlY2lmaWVkIHRoZW4gdGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgYSBzdHJpbmciKTtyZXR1cm4gZnQodGhpcyx0KX1yZXR1cm4gc3QodGhpcyx0LGUscil9ZnVuY3Rpb24gc3QodCxlLHIsbil7aWYoIm51bWJlciI9PXR5cGVvZiBlKXRocm93IG5ldyBUeXBlRXJyb3IoJyJ2YWx1ZSIgYXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXInKTtyZXR1cm4idW5kZWZpbmVkIiE9dHlwZW9mIEFycmF5QnVmZmVyJiZlIGluc3RhbmNlb2YgQXJyYXlCdWZmZXI/ZnVuY3Rpb24odCxlLHIsbil7aWYoZS5ieXRlTGVuZ3RoLHI8MHx8ZS5ieXRlTGVuZ3RoPHIpdGhyb3cgbmV3IFJhbmdlRXJyb3IoIidvZmZzZXQnIGlzIG91dCBvZiBib3VuZHMiKTtpZihlLmJ5dGVMZW5ndGg8cisobnx8MCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoIidsZW5ndGgnIGlzIG91dCBvZiBib3VuZHMiKTtlPXZvaWQgMD09PXImJnZvaWQgMD09PW4/bmV3IFVpbnQ4QXJyYXkoZSk6dm9pZCAwPT09bj9uZXcgVWludDhBcnJheShlLHIpOm5ldyBVaW50OEFycmF5KGUscixuKTthdC5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0PWUpLl9fcHJvdG9fXz1hdC5wcm90b3R5cGU6dD1odCh0LGUpO3JldHVybiB0fSh0LGUscixuKToic3RyaW5nIj09dHlwZW9mIGU/ZnVuY3Rpb24odCxlLHIpeyJzdHJpbmciPT10eXBlb2YgciYmIiIhPT1yfHwocj0idXRmOCIpO2lmKCFhdC5pc0VuY29kaW5nKHIpKXRocm93IG5ldyBUeXBlRXJyb3IoJyJlbmNvZGluZyIgbXVzdCBiZSBhIHZhbGlkIHN0cmluZyBlbmNvZGluZycpO3ZhciBuPTB8ZHQoZSxyKSxpPSh0PW90KHQsbikpLndyaXRlKGUscik7aSE9PW4mJih0PXQuc2xpY2UoMCxpKSk7cmV0dXJuIHR9KHQsZSxyKTpmdW5jdGlvbih0LGUpe2lmKGN0KGUpKXt2YXIgcj0wfGx0KGUubGVuZ3RoKTtyZXR1cm4gMD09PSh0PW90KHQscikpLmxlbmd0aHx8ZS5jb3B5KHQsMCwwLHIpLHR9aWYoZSl7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmZS5idWZmZXIgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcnx8Imxlbmd0aCJpbiBlKXJldHVybiJudW1iZXIiIT10eXBlb2YgZS5sZW5ndGh8fChuPWUubGVuZ3RoKSE9bj9vdCh0LDApOmh0KHQsZSk7aWYoIkJ1ZmZlciI9PT1lLnR5cGUmJnJ0KGUuZGF0YSkpcmV0dXJuIGh0KHQsZS5kYXRhKX12YXIgbjt0aHJvdyBuZXcgVHlwZUVycm9yKCJGaXJzdCBhcmd1bWVudCBtdXN0IGJlIGEgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgb3IgYXJyYXktbGlrZSBvYmplY3QuIil9KHQsZSl9ZnVuY3Rpb24gdXQodCl7aWYoIm51bWJlciIhPXR5cGVvZiB0KXRocm93IG5ldyBUeXBlRXJyb3IoJyJzaXplIiBhcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyJyk7aWYodDwwKXRocm93IG5ldyBSYW5nZUVycm9yKCcic2l6ZSIgYXJndW1lbnQgbXVzdCBub3QgYmUgbmVnYXRpdmUnKX1mdW5jdGlvbiBmdCh0LGUpe2lmKHV0KGUpLHQ9b3QodCxlPDA/MDowfGx0KGUpKSwhYXQuVFlQRURfQVJSQVlfU1VQUE9SVClmb3IodmFyIHI9MDtyPGU7KytyKXRbcl09MDtyZXR1cm4gdH1mdW5jdGlvbiBodCh0LGUpe3ZhciByPWUubGVuZ3RoPDA/MDowfGx0KGUubGVuZ3RoKTt0PW90KHQscik7Zm9yKHZhciBuPTA7bjxyO24rPTEpdFtuXT0yNTUmZVtuXTtyZXR1cm4gdH1mdW5jdGlvbiBsdCh0KXtpZih0Pj1pdCgpKXRocm93IG5ldyBSYW5nZUVycm9yKCJBdHRlbXB0IHRvIGFsbG9jYXRlIEJ1ZmZlciBsYXJnZXIgdGhhbiBtYXhpbXVtIHNpemU6IDB4IitpdCgpLnRvU3RyaW5nKDE2KSsiIGJ5dGVzIik7cmV0dXJuIDB8dH1mdW5jdGlvbiBjdCh0KXtyZXR1cm4hKG51bGw9PXR8fCF0Ll9pc0J1ZmZlcil9ZnVuY3Rpb24gZHQodCxlKXtpZihjdCh0KSlyZXR1cm4gdC5sZW5ndGg7aWYoInVuZGVmaW5lZCIhPXR5cGVvZiBBcnJheUJ1ZmZlciYmImZ1bmN0aW9uIj09dHlwZW9mIEFycmF5QnVmZmVyLmlzVmlldyYmKEFycmF5QnVmZmVyLmlzVmlldyh0KXx8dCBpbnN0YW5jZW9mIEFycmF5QnVmZmVyKSlyZXR1cm4gdC5ieXRlTGVuZ3RoOyJzdHJpbmciIT10eXBlb2YgdCYmKHQ9IiIrdCk7dmFyIHI9dC5sZW5ndGg7aWYoMD09PXIpcmV0dXJuIDA7Zm9yKHZhciBuPSExOzspc3dpdGNoKGUpe2Nhc2UiYXNjaWkiOmNhc2UibGF0aW4xIjpjYXNlImJpbmFyeSI6cmV0dXJuIHI7Y2FzZSJ1dGY4IjpjYXNlInV0Zi04IjpjYXNlIHZvaWQgMDpyZXR1cm4gSXQodCkubGVuZ3RoO2Nhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpyZXR1cm4gMipyO2Nhc2UiaGV4IjpyZXR1cm4gcj4+PjE7Y2FzZSJiYXNlNjQiOnJldHVybiBxdCh0KS5sZW5ndGg7ZGVmYXVsdDppZihuKXJldHVybiBJdCh0KS5sZW5ndGg7ZT0oIiIrZSkudG9Mb3dlckNhc2UoKSxuPSEwfX1mdW5jdGlvbiBwdCh0LGUscil7dmFyIG49ITE7aWYoKHZvaWQgMD09PWV8fGU8MCkmJihlPTApLGU+dGhpcy5sZW5ndGgpcmV0dXJuIiI7aWYoKHZvaWQgMD09PXJ8fHI+dGhpcy5sZW5ndGgpJiYocj10aGlzLmxlbmd0aCkscjw9MClyZXR1cm4iIjtpZigocj4+Pj0wKTw9KGU+Pj49MCkpcmV0dXJuIiI7Zm9yKHR8fCh0PSJ1dGY4Iik7Oylzd2l0Y2godCl7Y2FzZSJoZXgiOnJldHVybiBPdCh0aGlzLGUscik7Y2FzZSJ1dGY4IjpjYXNlInV0Zi04IjpyZXR1cm4gUnQodGhpcyxlLHIpO2Nhc2UiYXNjaWkiOnJldHVybiBqdCh0aGlzLGUscik7Y2FzZSJsYXRpbjEiOmNhc2UiYmluYXJ5IjpyZXR1cm4gVHQodGhpcyxlLHIpO2Nhc2UiYmFzZTY0IjpyZXR1cm4ga3QodGhpcyxlLHIpO2Nhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpyZXR1cm4gQXQodGhpcyxlLHIpO2RlZmF1bHQ6aWYobil0aHJvdyBuZXcgVHlwZUVycm9yKCJVbmtub3duIGVuY29kaW5nOiAiK3QpO3Q9KHQrIiIpLnRvTG93ZXJDYXNlKCksbj0hMH19ZnVuY3Rpb24gZ3QodCxlLHIpe3ZhciBuPXRbZV07dFtlXT10W3JdLHRbcl09bn1mdW5jdGlvbiB5dCh0LGUscixuLGkpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4tMTtpZigic3RyaW5nIj09dHlwZW9mIHI/KG49cixyPTApOnI+MjE0NzQ4MzY0Nz9yPTIxNDc0ODM2NDc6cjwtMjE0NzQ4MzY0OCYmKHI9LTIxNDc0ODM2NDgpLHI9K3IsaXNOYU4ocikmJihyPWk/MDp0Lmxlbmd0aC0xKSxyPDAmJihyPXQubGVuZ3RoK3IpLHI+PXQubGVuZ3RoKXtpZihpKXJldHVybi0xO3I9dC5sZW5ndGgtMX1lbHNlIGlmKHI8MCl7aWYoIWkpcmV0dXJuLTE7cj0wfWlmKCJzdHJpbmciPT10eXBlb2YgZSYmKGU9YXQuZnJvbShlLG4pKSxjdChlKSlyZXR1cm4gMD09PWUubGVuZ3RoPy0xOmJ0KHQsZSxyLG4saSk7aWYoIm51bWJlciI9PXR5cGVvZiBlKXJldHVybiBlJj0yNTUsYXQuVFlQRURfQVJSQVlfU1VQUE9SVCYmImZ1bmN0aW9uIj09dHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2Y/aT9VaW50OEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwodCxlLHIpOlVpbnQ4QXJyYXkucHJvdG90eXBlLmxhc3RJbmRleE9mLmNhbGwodCxlLHIpOmJ0KHQsW2VdLHIsbixpKTt0aHJvdyBuZXcgVHlwZUVycm9yKCJ2YWwgbXVzdCBiZSBzdHJpbmcsIG51bWJlciBvciBCdWZmZXIiKX1mdW5jdGlvbiBidCh0LGUscixuLGkpe3ZhciBvLGE9MSxzPXQubGVuZ3RoLHU9ZS5sZW5ndGg7aWYodm9pZCAwIT09biYmKCJ1Y3MyIj09PShuPVN0cmluZyhuKS50b0xvd2VyQ2FzZSgpKXx8InVjcy0yIj09PW58fCJ1dGYxNmxlIj09PW58fCJ1dGYtMTZsZSI9PT1uKSl7aWYodC5sZW5ndGg8Mnx8ZS5sZW5ndGg8MilyZXR1cm4tMTthPTIscy89Mix1Lz0yLHIvPTJ9ZnVuY3Rpb24gZih0LGUpe3JldHVybiAxPT09YT90W2VdOnQucmVhZFVJbnQxNkJFKGUqYSl9aWYoaSl7dmFyIGg9LTE7Zm9yKG89cjtvPHM7bysrKWlmKGYodCxvKT09PWYoZSwtMT09PWg/MDpvLWgpKXtpZigtMT09PWgmJihoPW8pLG8taCsxPT09dSlyZXR1cm4gaCphfWVsc2UtMSE9PWgmJihvLT1vLWgpLGg9LTF9ZWxzZSBmb3Iocit1PnMmJihyPXMtdSksbz1yO28+PTA7by0tKXtmb3IodmFyIGw9ITAsYz0wO2M8dTtjKyspaWYoZih0LG8rYykhPT1mKGUsYykpe2w9ITE7YnJlYWt9aWYobClyZXR1cm4gb31yZXR1cm4tMX1mdW5jdGlvbiB2dCh0LGUscixuKXtyPU51bWJlcihyKXx8MDt2YXIgaT10Lmxlbmd0aC1yO24/KG49TnVtYmVyKG4pKT5pJiYobj1pKTpuPWk7dmFyIG89ZS5sZW5ndGg7aWYobyUyIT0wKXRocm93IG5ldyBUeXBlRXJyb3IoIkludmFsaWQgaGV4IHN0cmluZyIpO24+by8yJiYobj1vLzIpO2Zvcih2YXIgYT0wO2E8bjsrK2Epe3ZhciBzPXBhcnNlSW50KGUuc3Vic3RyKDIqYSwyKSwxNik7aWYoaXNOYU4ocykpcmV0dXJuIGE7dFtyK2FdPXN9cmV0dXJuIGF9ZnVuY3Rpb24gd3QodCxlLHIsbil7cmV0dXJuIEZ0KEl0KGUsdC5sZW5ndGgtciksdCxyLG4pfWZ1bmN0aW9uIG10KHQsZSxyLG4pe3JldHVybiBGdChmdW5jdGlvbih0KXtmb3IodmFyIGU9W10scj0wO3I8dC5sZW5ndGg7KytyKWUucHVzaCgyNTUmdC5jaGFyQ29kZUF0KHIpKTtyZXR1cm4gZX0oZSksdCxyLG4pfWZ1bmN0aW9uIF90KHQsZSxyLG4pe3JldHVybiBtdCh0LGUscixuKX1mdW5jdGlvbiBTdCh0LGUscixuKXtyZXR1cm4gRnQocXQoZSksdCxyLG4pfWZ1bmN0aW9uIEV0KHQsZSxyLG4pe3JldHVybiBGdChmdW5jdGlvbih0LGUpe2Zvcih2YXIgcixuLGksbz1bXSxhPTA7YTx0Lmxlbmd0aCYmISgoZS09Mik8MCk7KythKW49KHI9dC5jaGFyQ29kZUF0KGEpKT4+OCxpPXIlMjU2LG8ucHVzaChpKSxvLnB1c2gobik7cmV0dXJuIG99KGUsdC5sZW5ndGgtciksdCxyLG4pfWZ1bmN0aW9uIGt0KHQsZSxyKXtyZXR1cm4gMD09PWUmJnI9PT10Lmxlbmd0aD9YKHQpOlgodC5zbGljZShlLHIpKX1mdW5jdGlvbiBSdCh0LGUscil7cj1NYXRoLm1pbih0Lmxlbmd0aCxyKTtmb3IodmFyIG49W10saT1lO2k8cjspe3ZhciBvLGEscyx1LGY9dFtpXSxoPW51bGwsbD1mPjIzOT80OmY+MjIzPzM6Zj4xOTE/MjoxO2lmKGkrbDw9cilzd2l0Y2gobCl7Y2FzZSAxOmY8MTI4JiYoaD1mKTticmVhaztjYXNlIDI6MTI4PT0oMTkyJihvPXRbaSsxXSkpJiYodT0oMzEmZik8PDZ8NjMmbyk+MTI3JiYoaD11KTticmVhaztjYXNlIDM6bz10W2krMV0sYT10W2krMl0sMTI4PT0oMTkyJm8pJiYxMjg9PSgxOTImYSkmJih1PSgxNSZmKTw8MTJ8KDYzJm8pPDw2fDYzJmEpPjIwNDcmJih1PDU1Mjk2fHx1PjU3MzQzKSYmKGg9dSk7YnJlYWs7Y2FzZSA0Om89dFtpKzFdLGE9dFtpKzJdLHM9dFtpKzNdLDEyOD09KDE5MiZvKSYmMTI4PT0oMTkyJmEpJiYxMjg9PSgxOTImcykmJih1PSgxNSZmKTw8MTh8KDYzJm8pPDwxMnwoNjMmYSk8PDZ8NjMmcyk+NjU1MzUmJnU8MTExNDExMiYmKGg9dSl9bnVsbD09PWg/KGg9NjU1MzMsbD0xKTpoPjY1NTM1JiYoaC09NjU1MzYsbi5wdXNoKGg+Pj4xMCYxMDIzfDU1Mjk2KSxoPTU2MzIwfDEwMjMmaCksbi5wdXNoKGgpLGkrPWx9cmV0dXJuIGZ1bmN0aW9uKHQpe3ZhciBlPXQubGVuZ3RoO2lmKGU8PTQwOTYpcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkoU3RyaW5nLHQpO3ZhciByPSIiLG49MDtmb3IoO248ZTspcis9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsdC5zbGljZShuLG4rPTQwOTYpKTtyZXR1cm4gcn0obil9YXQucG9vbFNpemU9ODE5MixhdC5fYXVnbWVudD1mdW5jdGlvbih0KXtyZXR1cm4gdC5fX3Byb3RvX189YXQucHJvdG90eXBlLHR9LGF0LmZyb209ZnVuY3Rpb24odCxlLHIpe3JldHVybiBzdChudWxsLHQsZSxyKX0sYXQuVFlQRURfQVJSQVlfU1VQUE9SVCYmKGF0LnByb3RvdHlwZS5fX3Byb3RvX189VWludDhBcnJheS5wcm90b3R5cGUsYXQuX19wcm90b19fPVVpbnQ4QXJyYXkpLGF0LmFsbG9jPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gZnVuY3Rpb24odCxlLHIsbil7cmV0dXJuIHV0KGUpLGU8PTA/b3QodCxlKTp2b2lkIDAhPT1yPyJzdHJpbmciPT10eXBlb2Ygbj9vdCh0LGUpLmZpbGwocixuKTpvdCh0LGUpLmZpbGwocik6b3QodCxlKX0obnVsbCx0LGUscil9LGF0LmFsbG9jVW5zYWZlPWZ1bmN0aW9uKHQpe3JldHVybiBmdChudWxsLHQpfSxhdC5hbGxvY1Vuc2FmZVNsb3c9ZnVuY3Rpb24odCl7cmV0dXJuIGZ0KG51bGwsdCl9LGF0LmlzQnVmZmVyPVd0LGF0LmNvbXBhcmU9ZnVuY3Rpb24odCxlKXtpZighY3QodCl8fCFjdChlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJBcmd1bWVudHMgbXVzdCBiZSBCdWZmZXJzIik7aWYodD09PWUpcmV0dXJuIDA7Zm9yKHZhciByPXQubGVuZ3RoLG49ZS5sZW5ndGgsaT0wLG89TWF0aC5taW4ocixuKTtpPG87KytpKWlmKHRbaV0hPT1lW2ldKXtyPXRbaV0sbj1lW2ldO2JyZWFrfXJldHVybiByPG4/LTE6bjxyPzE6MH0sYXQuaXNFbmNvZGluZz1mdW5jdGlvbih0KXtzd2l0Y2goU3RyaW5nKHQpLnRvTG93ZXJDYXNlKCkpe2Nhc2UiaGV4IjpjYXNlInV0ZjgiOmNhc2UidXRmLTgiOmNhc2UiYXNjaWkiOmNhc2UibGF0aW4xIjpjYXNlImJpbmFyeSI6Y2FzZSJiYXNlNjQiOmNhc2UidWNzMiI6Y2FzZSJ1Y3MtMiI6Y2FzZSJ1dGYxNmxlIjpjYXNlInV0Zi0xNmxlIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX0sYXQuY29uY2F0PWZ1bmN0aW9uKHQsZSl7aWYoIXJ0KHQpKXRocm93IG5ldyBUeXBlRXJyb3IoJyJsaXN0IiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKTtpZigwPT09dC5sZW5ndGgpcmV0dXJuIGF0LmFsbG9jKDApO3ZhciByO2lmKHZvaWQgMD09PWUpZm9yKGU9MCxyPTA7cjx0Lmxlbmd0aDsrK3IpZSs9dFtyXS5sZW5ndGg7dmFyIG49YXQuYWxsb2NVbnNhZmUoZSksaT0wO2ZvcihyPTA7cjx0Lmxlbmd0aDsrK3Ipe3ZhciBvPXRbcl07aWYoIWN0KG8pKXRocm93IG5ldyBUeXBlRXJyb3IoJyJsaXN0IiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZmZlcnMnKTtvLmNvcHkobixpKSxpKz1vLmxlbmd0aH1yZXR1cm4gbn0sYXQuYnl0ZUxlbmd0aD1kdCxhdC5wcm90b3R5cGUuX2lzQnVmZmVyPSEwLGF0LnByb3RvdHlwZS5zd2FwMTY9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmxlbmd0aDtpZih0JTIhPTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAxNi1iaXRzIik7Zm9yKHZhciBlPTA7ZTx0O2UrPTIpZ3QodGhpcyxlLGUrMSk7cmV0dXJuIHRoaXN9LGF0LnByb3RvdHlwZS5zd2FwMzI9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmxlbmd0aDtpZih0JTQhPTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiAzMi1iaXRzIik7Zm9yKHZhciBlPTA7ZTx0O2UrPTQpZ3QodGhpcyxlLGUrMyksZ3QodGhpcyxlKzEsZSsyKTtyZXR1cm4gdGhpc30sYXQucHJvdG90eXBlLnN3YXA2ND1mdW5jdGlvbigpe3ZhciB0PXRoaXMubGVuZ3RoO2lmKHQlOCE9MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcigiQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDY0LWJpdHMiKTtmb3IodmFyIGU9MDtlPHQ7ZSs9OClndCh0aGlzLGUsZSs3KSxndCh0aGlzLGUrMSxlKzYpLGd0KHRoaXMsZSsyLGUrNSksZ3QodGhpcyxlKzMsZSs0KTtyZXR1cm4gdGhpc30sYXQucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7dmFyIHQ9MHx0aGlzLmxlbmd0aDtyZXR1cm4gMD09PXQ/IiI6MD09PWFyZ3VtZW50cy5sZW5ndGg/UnQodGhpcywwLHQpOnB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sYXQucHJvdG90eXBlLmVxdWFscz1mdW5jdGlvbih0KXtpZighY3QodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciIpO3JldHVybiB0aGlzPT09dHx8MD09PWF0LmNvbXBhcmUodGhpcyx0KX0sYXQucHJvdG90eXBlLmluc3BlY3Q9ZnVuY3Rpb24oKXt2YXIgdD0iIjtyZXR1cm4gdGhpcy5sZW5ndGg+MCYmKHQ9dGhpcy50b1N0cmluZygiaGV4IiwwLDUwKS5tYXRjaCgvLnsyfS9nKS5qb2luKCIgIiksdGhpcy5sZW5ndGg+NTAmJih0Kz0iIC4uLiAiKSksIjxCdWZmZXIgIit0KyI+In0sYXQucHJvdG90eXBlLmNvbXBhcmU9ZnVuY3Rpb24odCxlLHIsbixpKXtpZighY3QodCkpdGhyb3cgbmV3IFR5cGVFcnJvcigiQXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciIpO2lmKHZvaWQgMD09PWUmJihlPTApLHZvaWQgMD09PXImJihyPXQ/dC5sZW5ndGg6MCksdm9pZCAwPT09biYmKG49MCksdm9pZCAwPT09aSYmKGk9dGhpcy5sZW5ndGgpLGU8MHx8cj50Lmxlbmd0aHx8bjwwfHxpPnRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKCJvdXQgb2YgcmFuZ2UgaW5kZXgiKTtpZihuPj1pJiZlPj1yKXJldHVybiAwO2lmKG4+PWkpcmV0dXJuLTE7aWYoZT49cilyZXR1cm4gMTtpZih0aGlzPT09dClyZXR1cm4gMDtmb3IodmFyIG89KGk+Pj49MCktKG4+Pj49MCksYT0ocj4+Pj0wKS0oZT4+Pj0wKSxzPU1hdGgubWluKG8sYSksdT10aGlzLnNsaWNlKG4saSksZj10LnNsaWNlKGUsciksaD0wO2g8czsrK2gpaWYodVtoXSE9PWZbaF0pe289dVtoXSxhPWZbaF07YnJlYWt9cmV0dXJuIG88YT8tMTphPG8/MTowfSxhdC5wcm90b3R5cGUuaW5jbHVkZXM9ZnVuY3Rpb24odCxlLHIpe3JldHVybi0xIT09dGhpcy5pbmRleE9mKHQsZSxyKX0sYXQucHJvdG90eXBlLmluZGV4T2Y9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB5dCh0aGlzLHQsZSxyLCEwKX0sYXQucHJvdG90eXBlLmxhc3RJbmRleE9mPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4geXQodGhpcyx0LGUsciwhMSl9LGF0LnByb3RvdHlwZS53cml0ZT1mdW5jdGlvbih0LGUscixuKXtpZih2b2lkIDA9PT1lKW49InV0ZjgiLHI9dGhpcy5sZW5ndGgsZT0wO2Vsc2UgaWYodm9pZCAwPT09ciYmInN0cmluZyI9PXR5cGVvZiBlKW49ZSxyPXRoaXMubGVuZ3RoLGU9MDtlbHNle2lmKCFpc0Zpbml0ZShlKSl0aHJvdyBuZXcgRXJyb3IoIkJ1ZmZlci53cml0ZShzdHJpbmcsIGVuY29kaW5nLCBvZmZzZXRbLCBsZW5ndGhdKSBpcyBubyBsb25nZXIgc3VwcG9ydGVkIik7ZXw9MCxpc0Zpbml0ZShyKT8ocnw9MCx2b2lkIDA9PT1uJiYobj0idXRmOCIpKToobj1yLHI9dm9pZCAwKX12YXIgaT10aGlzLmxlbmd0aC1lO2lmKCh2b2lkIDA9PT1yfHxyPmkpJiYocj1pKSx0Lmxlbmd0aD4wJiYocjwwfHxlPDApfHxlPnRoaXMubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKCJBdHRlbXB0IHRvIHdyaXRlIG91dHNpZGUgYnVmZmVyIGJvdW5kcyIpO258fChuPSJ1dGY4Iik7Zm9yKHZhciBvPSExOzspc3dpdGNoKG4pe2Nhc2UiaGV4IjpyZXR1cm4gdnQodGhpcyx0LGUscik7Y2FzZSJ1dGY4IjpjYXNlInV0Zi04IjpyZXR1cm4gd3QodGhpcyx0LGUscik7Y2FzZSJhc2NpaSI6cmV0dXJuIG10KHRoaXMsdCxlLHIpO2Nhc2UibGF0aW4xIjpjYXNlImJpbmFyeSI6cmV0dXJuIF90KHRoaXMsdCxlLHIpO2Nhc2UiYmFzZTY0IjpyZXR1cm4gU3QodGhpcyx0LGUscik7Y2FzZSJ1Y3MyIjpjYXNlInVjcy0yIjpjYXNlInV0ZjE2bGUiOmNhc2UidXRmLTE2bGUiOnJldHVybiBFdCh0aGlzLHQsZSxyKTtkZWZhdWx0OmlmKG8pdGhyb3cgbmV3IFR5cGVFcnJvcigiVW5rbm93biBlbmNvZGluZzogIituKTtuPSgiIituKS50b0xvd2VyQ2FzZSgpLG89ITB9fSxhdC5wcm90b3R5cGUudG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJue3R5cGU6IkJ1ZmZlciIsZGF0YTpBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbCh0aGlzLl9hcnJ8fHRoaXMsMCl9fTtmdW5jdGlvbiBqdCh0LGUscil7dmFyIG49IiI7cj1NYXRoLm1pbih0Lmxlbmd0aCxyKTtmb3IodmFyIGk9ZTtpPHI7KytpKW4rPVN0cmluZy5mcm9tQ2hhckNvZGUoMTI3JnRbaV0pO3JldHVybiBufWZ1bmN0aW9uIFR0KHQsZSxyKXt2YXIgbj0iIjtyPU1hdGgubWluKHQubGVuZ3RoLHIpO2Zvcih2YXIgaT1lO2k8cjsrK2kpbis9U3RyaW5nLmZyb21DaGFyQ29kZSh0W2ldKTtyZXR1cm4gbn1mdW5jdGlvbiBPdCh0LGUscil7dmFyIG49dC5sZW5ndGg7KCFlfHxlPDApJiYoZT0wKSwoIXJ8fHI8MHx8cj5uKSYmKHI9bik7Zm9yKHZhciBpPSIiLG89ZTtvPHI7KytvKWkrPUR0KHRbb10pO3JldHVybiBpfWZ1bmN0aW9uIEF0KHQsZSxyKXtmb3IodmFyIG49dC5zbGljZShlLHIpLGk9IiIsbz0wO288bi5sZW5ndGg7bys9MilpKz1TdHJpbmcuZnJvbUNoYXJDb2RlKG5bb10rMjU2Km5bbysxXSk7cmV0dXJuIGl9ZnVuY3Rpb24gQ3QodCxlLHIpe2lmKHQlMSE9MHx8dDwwKXRocm93IG5ldyBSYW5nZUVycm9yKCJvZmZzZXQgaXMgbm90IHVpbnQiKTtpZih0K2U+cil0aHJvdyBuZXcgUmFuZ2VFcnJvcigiVHJ5aW5nIHRvIGFjY2VzcyBiZXlvbmQgYnVmZmVyIGxlbmd0aCIpfWZ1bmN0aW9uIE10KHQsZSxyLG4saSxvKXtpZighY3QodCkpdGhyb3cgbmV3IFR5cGVFcnJvcignImJ1ZmZlciIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBpbnN0YW5jZScpO2lmKGU+aXx8ZTxvKXRocm93IG5ldyBSYW5nZUVycm9yKCcidmFsdWUiIGFyZ3VtZW50IGlzIG91dCBvZiBib3VuZHMnKTtpZihyK24+dC5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoIkluZGV4IG91dCBvZiByYW5nZSIpfWZ1bmN0aW9uIHh0KHQsZSxyLG4pe2U8MCYmKGU9NjU1MzUrZSsxKTtmb3IodmFyIGk9MCxvPU1hdGgubWluKHQubGVuZ3RoLXIsMik7aTxvOysraSl0W3IraV09KGUmMjU1PDw4KihuP2k6MS1pKSk+Pj44KihuP2k6MS1pKX1mdW5jdGlvbiBMdCh0LGUscixuKXtlPDAmJihlPTQyOTQ5NjcyOTUrZSsxKTtmb3IodmFyIGk9MCxvPU1hdGgubWluKHQubGVuZ3RoLXIsNCk7aTxvOysraSl0W3IraV09ZT4+PjgqKG4/aTozLWkpJjI1NX1mdW5jdGlvbiBCdCh0LGUscixuLGksbyl7aWYocituPnQubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKCJJbmRleCBvdXQgb2YgcmFuZ2UiKTtpZihyPDApdGhyb3cgbmV3IFJhbmdlRXJyb3IoIkluZGV4IG91dCBvZiByYW5nZSIpfWZ1bmN0aW9uIFB0KHQsZSxyLG4saSl7cmV0dXJuIGl8fEJ0KHQsMCxyLDQpLHR0KHQsZSxyLG4sMjMsNCkscis0fWZ1bmN0aW9uIFV0KHQsZSxyLG4saSl7cmV0dXJuIGl8fEJ0KHQsMCxyLDgpLHR0KHQsZSxyLG4sNTIsOCkscis4fWF0LnByb3RvdHlwZS5zbGljZT1mdW5jdGlvbih0LGUpe3ZhciByLG49dGhpcy5sZW5ndGg7aWYoKHQ9fn50KTwwPyh0Kz1uKTwwJiYodD0wKTp0Pm4mJih0PW4pLChlPXZvaWQgMD09PWU/bjp+fmUpPDA/KGUrPW4pPDAmJihlPTApOmU+biYmKGU9biksZTx0JiYoZT10KSxhdC5UWVBFRF9BUlJBWV9TVVBQT1JUKShyPXRoaXMuc3ViYXJyYXkodCxlKSkuX19wcm90b19fPWF0LnByb3RvdHlwZTtlbHNle3ZhciBpPWUtdDtyPW5ldyBhdChpLHZvaWQgMCk7Zm9yKHZhciBvPTA7bzxpOysrbylyW29dPXRoaXNbbyt0XX1yZXR1cm4gcn0sYXQucHJvdG90eXBlLnJlYWRVSW50TEU9ZnVuY3Rpb24odCxlLHIpe3R8PTAsZXw9MCxyfHxDdCh0LGUsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj10aGlzW3RdLGk9MSxvPTA7KytvPGUmJihpKj0yNTYpOyluKz10aGlzW3Qrb10qaTtyZXR1cm4gbn0sYXQucHJvdG90eXBlLnJlYWRVSW50QkU9ZnVuY3Rpb24odCxlLHIpe3R8PTAsZXw9MCxyfHxDdCh0LGUsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj10aGlzW3QrLS1lXSxpPTE7ZT4wJiYoaSo9MjU2KTspbis9dGhpc1t0Ky0tZV0qaTtyZXR1cm4gbn0sYXQucHJvdG90eXBlLnJlYWRVSW50OD1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxDdCh0LDEsdGhpcy5sZW5ndGgpLHRoaXNbdF19LGF0LnByb3RvdHlwZS5yZWFkVUludDE2TEU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8Q3QodCwyLHRoaXMubGVuZ3RoKSx0aGlzW3RdfHRoaXNbdCsxXTw8OH0sYXQucHJvdG90eXBlLnJlYWRVSW50MTZCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxDdCh0LDIsdGhpcy5sZW5ndGgpLHRoaXNbdF08PDh8dGhpc1t0KzFdfSxhdC5wcm90b3R5cGUucmVhZFVJbnQzMkxFPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV8fEN0KHQsNCx0aGlzLmxlbmd0aCksKHRoaXNbdF18dGhpc1t0KzFdPDw4fHRoaXNbdCsyXTw8MTYpKzE2Nzc3MjE2KnRoaXNbdCszXX0sYXQucHJvdG90eXBlLnJlYWRVSW50MzJCRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxDdCh0LDQsdGhpcy5sZW5ndGgpLDE2Nzc3MjE2KnRoaXNbdF0rKHRoaXNbdCsxXTw8MTZ8dGhpc1t0KzJdPDw4fHRoaXNbdCszXSl9LGF0LnByb3RvdHlwZS5yZWFkSW50TEU9ZnVuY3Rpb24odCxlLHIpe3R8PTAsZXw9MCxyfHxDdCh0LGUsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj10aGlzW3RdLGk9MSxvPTA7KytvPGUmJihpKj0yNTYpOyluKz10aGlzW3Qrb10qaTtyZXR1cm4gbj49KGkqPTEyOCkmJihuLT1NYXRoLnBvdygyLDgqZSkpLG59LGF0LnByb3RvdHlwZS5yZWFkSW50QkU9ZnVuY3Rpb24odCxlLHIpe3R8PTAsZXw9MCxyfHxDdCh0LGUsdGhpcy5sZW5ndGgpO2Zvcih2YXIgbj1lLGk9MSxvPXRoaXNbdCstLW5dO24+MCYmKGkqPTI1Nik7KW8rPXRoaXNbdCstLW5dKmk7cmV0dXJuIG8+PShpKj0xMjgpJiYoby09TWF0aC5wb3coMiw4KmUpKSxvfSxhdC5wcm90b3R5cGUucmVhZEludDg9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8Q3QodCwxLHRoaXMubGVuZ3RoKSwxMjgmdGhpc1t0XT8tMSooMjU1LXRoaXNbdF0rMSk6dGhpc1t0XX0sYXQucHJvdG90eXBlLnJlYWRJbnQxNkxFPWZ1bmN0aW9uKHQsZSl7ZXx8Q3QodCwyLHRoaXMubGVuZ3RoKTt2YXIgcj10aGlzW3RdfHRoaXNbdCsxXTw8ODtyZXR1cm4gMzI3Njgmcj80Mjk0OTAxNzYwfHI6cn0sYXQucHJvdG90eXBlLnJlYWRJbnQxNkJFPWZ1bmN0aW9uKHQsZSl7ZXx8Q3QodCwyLHRoaXMubGVuZ3RoKTt2YXIgcj10aGlzW3QrMV18dGhpc1t0XTw8ODtyZXR1cm4gMzI3Njgmcj80Mjk0OTAxNzYwfHI6cn0sYXQucHJvdG90eXBlLnJlYWRJbnQzMkxFPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV8fEN0KHQsNCx0aGlzLmxlbmd0aCksdGhpc1t0XXx0aGlzW3QrMV08PDh8dGhpc1t0KzJdPDwxNnx0aGlzW3QrM108PDI0fSxhdC5wcm90b3R5cGUucmVhZEludDMyQkU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8Q3QodCw0LHRoaXMubGVuZ3RoKSx0aGlzW3RdPDwyNHx0aGlzW3QrMV08PDE2fHRoaXNbdCsyXTw8OHx0aGlzW3QrM119LGF0LnByb3RvdHlwZS5yZWFkRmxvYXRMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxDdCh0LDQsdGhpcy5sZW5ndGgpLFEodGhpcyx0LCEwLDIzLDQpfSxhdC5wcm90b3R5cGUucmVhZEZsb2F0QkU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZXx8Q3QodCw0LHRoaXMubGVuZ3RoKSxRKHRoaXMsdCwhMSwyMyw0KX0sYXQucHJvdG90eXBlLnJlYWREb3VibGVMRT1mdW5jdGlvbih0LGUpe3JldHVybiBlfHxDdCh0LDgsdGhpcy5sZW5ndGgpLFEodGhpcyx0LCEwLDUyLDgpfSxhdC5wcm90b3R5cGUucmVhZERvdWJsZUJFPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGV8fEN0KHQsOCx0aGlzLmxlbmd0aCksUSh0aGlzLHQsITEsNTIsOCl9LGF0LnByb3RvdHlwZS53cml0ZVVJbnRMRT1mdW5jdGlvbih0LGUscixuKXsodD0rdCxlfD0wLHJ8PTAsbil8fE10KHRoaXMsdCxlLHIsTWF0aC5wb3coMiw4KnIpLTEsMCk7dmFyIGk9MSxvPTA7Zm9yKHRoaXNbZV09MjU1JnQ7KytvPHImJihpKj0yNTYpOyl0aGlzW2Urb109dC9pJjI1NTtyZXR1cm4gZStyfSxhdC5wcm90b3R5cGUud3JpdGVVSW50QkU9ZnVuY3Rpb24odCxlLHIsbil7KHQ9K3QsZXw9MCxyfD0wLG4pfHxNdCh0aGlzLHQsZSxyLE1hdGgucG93KDIsOCpyKS0xLDApO3ZhciBpPXItMSxvPTE7Zm9yKHRoaXNbZStpXT0yNTUmdDstLWk+PTAmJihvKj0yNTYpOyl0aGlzW2UraV09dC9vJjI1NTtyZXR1cm4gZStyfSxhdC5wcm90b3R5cGUud3JpdGVVSW50OD1mdW5jdGlvbih0LGUscil7cmV0dXJuIHQ9K3QsZXw9MCxyfHxNdCh0aGlzLHQsZSwxLDI1NSwwKSxhdC5UWVBFRF9BUlJBWV9TVVBQT1JUfHwodD1NYXRoLmZsb29yKHQpKSx0aGlzW2VdPTI1NSZ0LGUrMX0sYXQucHJvdG90eXBlLndyaXRlVUludDE2TEU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PSt0LGV8PTAscnx8TXQodGhpcyx0LGUsMiw2NTUzNSwwKSxhdC5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPTI1NSZ0LHRoaXNbZSsxXT10Pj4+OCk6eHQodGhpcyx0LGUsITApLGUrMn0sYXQucHJvdG90eXBlLndyaXRlVUludDE2QkU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PSt0LGV8PTAscnx8TXQodGhpcyx0LGUsMiw2NTUzNSwwKSxhdC5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPXQ+Pj44LHRoaXNbZSsxXT0yNTUmdCk6eHQodGhpcyx0LGUsITEpLGUrMn0sYXQucHJvdG90eXBlLndyaXRlVUludDMyTEU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PSt0LGV8PTAscnx8TXQodGhpcyx0LGUsNCw0Mjk0OTY3Mjk1LDApLGF0LlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHRoaXNbZSszXT10Pj4+MjQsdGhpc1tlKzJdPXQ+Pj4xNix0aGlzW2UrMV09dD4+PjgsdGhpc1tlXT0yNTUmdCk6THQodGhpcyx0LGUsITApLGUrNH0sYXQucHJvdG90eXBlLndyaXRlVUludDMyQkU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PSt0LGV8PTAscnx8TXQodGhpcyx0LGUsNCw0Mjk0OTY3Mjk1LDApLGF0LlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHRoaXNbZV09dD4+PjI0LHRoaXNbZSsxXT10Pj4+MTYsdGhpc1tlKzJdPXQ+Pj44LHRoaXNbZSszXT0yNTUmdCk6THQodGhpcyx0LGUsITEpLGUrNH0sYXQucHJvdG90eXBlLndyaXRlSW50TEU9ZnVuY3Rpb24odCxlLHIsbil7aWYodD0rdCxlfD0wLCFuKXt2YXIgaT1NYXRoLnBvdygyLDgqci0xKTtNdCh0aGlzLHQsZSxyLGktMSwtaSl9dmFyIG89MCxhPTEscz0wO2Zvcih0aGlzW2VdPTI1NSZ0OysrbzxyJiYoYSo9MjU2KTspdDwwJiYwPT09cyYmMCE9PXRoaXNbZStvLTFdJiYocz0xKSx0aGlzW2Urb109KHQvYT4+MCktcyYyNTU7cmV0dXJuIGUrcn0sYXQucHJvdG90eXBlLndyaXRlSW50QkU9ZnVuY3Rpb24odCxlLHIsbil7aWYodD0rdCxlfD0wLCFuKXt2YXIgaT1NYXRoLnBvdygyLDgqci0xKTtNdCh0aGlzLHQsZSxyLGktMSwtaSl9dmFyIG89ci0xLGE9MSxzPTA7Zm9yKHRoaXNbZStvXT0yNTUmdDstLW8+PTAmJihhKj0yNTYpOyl0PDAmJjA9PT1zJiYwIT09dGhpc1tlK28rMV0mJihzPTEpLHRoaXNbZStvXT0odC9hPj4wKS1zJjI1NTtyZXR1cm4gZStyfSxhdC5wcm90b3R5cGUud3JpdGVJbnQ4PWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdD0rdCxlfD0wLHJ8fE10KHRoaXMsdCxlLDEsMTI3LC0xMjgpLGF0LlRZUEVEX0FSUkFZX1NVUFBPUlR8fCh0PU1hdGguZmxvb3IodCkpLHQ8MCYmKHQ9MjU1K3QrMSksdGhpc1tlXT0yNTUmdCxlKzF9LGF0LnByb3RvdHlwZS53cml0ZUludDE2TEU9ZnVuY3Rpb24odCxlLHIpe3JldHVybiB0PSt0LGV8PTAscnx8TXQodGhpcyx0LGUsMiwzMjc2NywtMzI3NjgpLGF0LlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHRoaXNbZV09MjU1JnQsdGhpc1tlKzFdPXQ+Pj44KTp4dCh0aGlzLHQsZSwhMCksZSsyfSxhdC5wcm90b3R5cGUud3JpdGVJbnQxNkJFPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gdD0rdCxlfD0wLHJ8fE10KHRoaXMsdCxlLDIsMzI3NjcsLTMyNzY4KSxhdC5UWVBFRF9BUlJBWV9TVVBQT1JUPyh0aGlzW2VdPXQ+Pj44LHRoaXNbZSsxXT0yNTUmdCk6eHQodGhpcyx0LGUsITEpLGUrMn0sYXQucHJvdG90eXBlLndyaXRlSW50MzJMRT1mdW5jdGlvbih0LGUscil7cmV0dXJuIHQ9K3QsZXw9MCxyfHxNdCh0aGlzLHQsZSw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLGF0LlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHRoaXNbZV09MjU1JnQsdGhpc1tlKzFdPXQ+Pj44LHRoaXNbZSsyXT10Pj4+MTYsdGhpc1tlKzNdPXQ+Pj4yNCk6THQodGhpcyx0LGUsITApLGUrNH0sYXQucHJvdG90eXBlLndyaXRlSW50MzJCRT1mdW5jdGlvbih0LGUscil7cmV0dXJuIHQ9K3QsZXw9MCxyfHxNdCh0aGlzLHQsZSw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLHQ8MCYmKHQ9NDI5NDk2NzI5NSt0KzEpLGF0LlRZUEVEX0FSUkFZX1NVUFBPUlQ/KHRoaXNbZV09dD4+PjI0LHRoaXNbZSsxXT10Pj4+MTYsdGhpc1tlKzJdPXQ+Pj44LHRoaXNbZSszXT0yNTUmdCk6THQodGhpcyx0LGUsITEpLGUrNH0sYXQucHJvdG90eXBlLndyaXRlRmxvYXRMRT1mdW5jdGlvbih0LGUscil7cmV0dXJuIFB0KHRoaXMsdCxlLCEwLHIpfSxhdC5wcm90b3R5cGUud3JpdGVGbG9hdEJFPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gUHQodGhpcyx0LGUsITEscil9LGF0LnByb3RvdHlwZS53cml0ZURvdWJsZUxFPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gVXQodGhpcyx0LGUsITAscil9LGF0LnByb3RvdHlwZS53cml0ZURvdWJsZUJFPWZ1bmN0aW9uKHQsZSxyKXtyZXR1cm4gVXQodGhpcyx0LGUsITEscil9LGF0LnByb3RvdHlwZS5jb3B5PWZ1bmN0aW9uKHQsZSxyLG4pe2lmKHJ8fChyPTApLG58fDA9PT1ufHwobj10aGlzLmxlbmd0aCksZT49dC5sZW5ndGgmJihlPXQubGVuZ3RoKSxlfHwoZT0wKSxuPjAmJm48ciYmKG49ciksbj09PXIpcmV0dXJuIDA7aWYoMD09PXQubGVuZ3RofHwwPT09dGhpcy5sZW5ndGgpcmV0dXJuIDA7aWYoZTwwKXRocm93IG5ldyBSYW5nZUVycm9yKCJ0YXJnZXRTdGFydCBvdXQgb2YgYm91bmRzIik7aWYocjwwfHxyPj10aGlzLmxlbmd0aCl0aHJvdyBuZXcgUmFuZ2VFcnJvcigic291cmNlU3RhcnQgb3V0IG9mIGJvdW5kcyIpO2lmKG48MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcigic291cmNlRW5kIG91dCBvZiBib3VuZHMiKTtuPnRoaXMubGVuZ3RoJiYobj10aGlzLmxlbmd0aCksdC5sZW5ndGgtZTxuLXImJihuPXQubGVuZ3RoLWUrcik7dmFyIGksbz1uLXI7aWYodGhpcz09PXQmJnI8ZSYmZTxuKWZvcihpPW8tMTtpPj0wOy0taSl0W2krZV09dGhpc1tpK3JdO2Vsc2UgaWYobzwxZTN8fCFhdC5UWVBFRF9BUlJBWV9TVVBQT1JUKWZvcihpPTA7aTxvOysraSl0W2krZV09dGhpc1tpK3JdO2Vsc2UgVWludDhBcnJheS5wcm90b3R5cGUuc2V0LmNhbGwodCx0aGlzLnN1YmFycmF5KHIscitvKSxlKTtyZXR1cm4gb30sYXQucHJvdG90eXBlLmZpbGw9ZnVuY3Rpb24odCxlLHIsbil7aWYoInN0cmluZyI9PXR5cGVvZiB0KXtpZigic3RyaW5nIj09dHlwZW9mIGU/KG49ZSxlPTAscj10aGlzLmxlbmd0aCk6InN0cmluZyI9PXR5cGVvZiByJiYobj1yLHI9dGhpcy5sZW5ndGgpLDE9PT10Lmxlbmd0aCl7dmFyIGk9dC5jaGFyQ29kZUF0KDApO2k8MjU2JiYodD1pKX1pZih2b2lkIDAhPT1uJiYic3RyaW5nIiE9dHlwZW9mIG4pdGhyb3cgbmV3IFR5cGVFcnJvcigiZW5jb2RpbmcgbXVzdCBiZSBhIHN0cmluZyIpO2lmKCJzdHJpbmciPT10eXBlb2YgbiYmIWF0LmlzRW5jb2RpbmcobikpdGhyb3cgbmV3IFR5cGVFcnJvcigiVW5rbm93biBlbmNvZGluZzogIituKX1lbHNlIm51bWJlciI9PXR5cGVvZiB0JiYodCY9MjU1KTtpZihlPDB8fHRoaXMubGVuZ3RoPGV8fHRoaXMubGVuZ3RoPHIpdGhyb3cgbmV3IFJhbmdlRXJyb3IoIk91dCBvZiByYW5nZSBpbmRleCIpO2lmKHI8PWUpcmV0dXJuIHRoaXM7dmFyIG87aWYoZT4+Pj0wLHI9dm9pZCAwPT09cj90aGlzLmxlbmd0aDpyPj4+MCx0fHwodD0wKSwibnVtYmVyIj09dHlwZW9mIHQpZm9yKG89ZTtvPHI7KytvKXRoaXNbb109dDtlbHNle3ZhciBhPWN0KHQpP3Q6SXQobmV3IGF0KHQsbikudG9TdHJpbmcoKSkscz1hLmxlbmd0aDtmb3Iobz0wO288ci1lOysrbyl0aGlzW28rZV09YVtvJXNdfXJldHVybiB0aGlzfTt2YXIgTnQ9L1teK1wvMC05QS1aYS16LV9dL2c7ZnVuY3Rpb24gRHQodCl7cmV0dXJuIHQ8MTY/IjAiK3QudG9TdHJpbmcoMTYpOnQudG9TdHJpbmcoMTYpfWZ1bmN0aW9uIEl0KHQsZSl7dmFyIHI7ZT1lfHwxLzA7Zm9yKHZhciBuPXQubGVuZ3RoLGk9bnVsbCxvPVtdLGE9MDthPG47KythKXtpZigocj10LmNoYXJDb2RlQXQoYSkpPjU1Mjk1JiZyPDU3MzQ0KXtpZighaSl7aWYocj41NjMxOSl7KGUtPTMpPi0xJiZvLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWlmKGErMT09PW4peyhlLT0zKT4tMSYmby5wdXNoKDIzOSwxOTEsMTg5KTtjb250aW51ZX1pPXI7Y29udGludWV9aWYocjw1NjMyMCl7KGUtPTMpPi0xJiZvLnB1c2goMjM5LDE5MSwxODkpLGk9cjtjb250aW51ZX1yPTY1NTM2KyhpLTU1Mjk2PDwxMHxyLTU2MzIwKX1lbHNlIGkmJihlLT0zKT4tMSYmby5wdXNoKDIzOSwxOTEsMTg5KTtpZihpPW51bGwscjwxMjgpe2lmKChlLT0xKTwwKWJyZWFrO28ucHVzaChyKX1lbHNlIGlmKHI8MjA0OCl7aWYoKGUtPTIpPDApYnJlYWs7by5wdXNoKHI+PjZ8MTkyLDYzJnJ8MTI4KX1lbHNlIGlmKHI8NjU1MzYpe2lmKChlLT0zKTwwKWJyZWFrO28ucHVzaChyPj4xMnwyMjQscj4+NiY2M3wxMjgsNjMmcnwxMjgpfWVsc2V7aWYoIShyPDExMTQxMTIpKXRocm93IG5ldyBFcnJvcigiSW52YWxpZCBjb2RlIHBvaW50Iik7aWYoKGUtPTQpPDApYnJlYWs7by5wdXNoKHI+PjE4fDI0MCxyPj4xMiY2M3wxMjgscj4+NiY2M3wxMjgsNjMmcnwxMjgpfX1yZXR1cm4gb31mdW5jdGlvbiBxdCh0KXtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGUscixuLGksbyxhO1Z8fEsoKTt2YXIgcz10Lmxlbmd0aDtpZihzJTQ+MCl0aHJvdyBuZXcgRXJyb3IoIkludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcGxlIG9mIDQiKTtvPSI9Ij09PXRbcy0yXT8yOiI9Ij09PXRbcy0xXT8xOjAsYT1uZXcgRygzKnMvNC1vKSxuPW8+MD9zLTQ6czt2YXIgdT0wO2ZvcihlPTAscj0wO2U8bjtlKz00LHIrPTMpaT1KW3QuY2hhckNvZGVBdChlKV08PDE4fEpbdC5jaGFyQ29kZUF0KGUrMSldPDwxMnxKW3QuY2hhckNvZGVBdChlKzIpXTw8NnxKW3QuY2hhckNvZGVBdChlKzMpXSxhW3UrK109aT4+MTYmMjU1LGFbdSsrXT1pPj44JjI1NSxhW3UrK109MjU1Jmk7cmV0dXJuIDI9PT1vPyhpPUpbdC5jaGFyQ29kZUF0KGUpXTw8MnxKW3QuY2hhckNvZGVBdChlKzEpXT4+NCxhW3UrK109MjU1JmkpOjE9PT1vJiYoaT1KW3QuY2hhckNvZGVBdChlKV08PDEwfEpbdC5jaGFyQ29kZUF0KGUrMSldPDw0fEpbdC5jaGFyQ29kZUF0KGUrMildPj4yLGFbdSsrXT1pPj44JjI1NSxhW3UrK109MjU1JmkpLGF9KGZ1bmN0aW9uKHQpe2lmKCh0PWZ1bmN0aW9uKHQpe3JldHVybiB0LnRyaW0/dC50cmltKCk6dC5yZXBsYWNlKC9eXHMrfFxzKyQvZywiIil9KHQpLnJlcGxhY2UoTnQsIiIpKS5sZW5ndGg8MilyZXR1cm4iIjtmb3IoO3QubGVuZ3RoJTQhPTA7KXQrPSI9IjtyZXR1cm4gdH0odCkpfWZ1bmN0aW9uIEZ0KHQsZSxyLG4pe2Zvcih2YXIgaT0wO2k8biYmIShpK3I+PWUubGVuZ3RofHxpPj10Lmxlbmd0aCk7KytpKWVbaStyXT10W2ldO3JldHVybiBpfWZ1bmN0aW9uIFd0KHQpe3JldHVybiBudWxsIT10JiYoISF0Ll9pc0J1ZmZlcnx8enQodCl8fGZ1bmN0aW9uKHQpe3JldHVybiJmdW5jdGlvbiI9PXR5cGVvZiB0LnJlYWRGbG9hdExFJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5zbGljZSYmenQodC5zbGljZSgwLDApKX0odCkpfWZ1bmN0aW9uIHp0KHQpe3JldHVybiEhdC5jb25zdHJ1Y3RvciYmImZ1bmN0aW9uIj09dHlwZW9mIHQuY29uc3RydWN0b3IuaXNCdWZmZXImJnQuY29uc3RydWN0b3IuaXNCdWZmZXIodCl9dmFyIFl0PVQoT2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsQnVmZmVyOmF0LElOU1BFQ1RfTUFYX0JZVEVTOjUwLFNsb3dCdWZmZXI6ZnVuY3Rpb24odCl7cmV0dXJuK3QhPXQmJih0PTApLGF0LmFsbG9jKCt0KX0saXNCdWZmZXI6V3Qsa01heExlbmd0aDpudH0pKSwkdD1PKChmdW5jdGlvbih0LGUpe3ZhciByPVl0LkJ1ZmZlcjtmdW5jdGlvbiBuKHQsZSl7Zm9yKHZhciByIGluIHQpZVtyXT10W3JdfWZ1bmN0aW9uIGkodCxlLG4pe3JldHVybiByKHQsZSxuKX1yLmZyb20mJnIuYWxsb2MmJnIuYWxsb2NVbnNhZmUmJnIuYWxsb2NVbnNhZmVTbG93P3QuZXhwb3J0cz1ZdDoobihZdCxlKSxlLkJ1ZmZlcj1pKSxuKHIsaSksaS5mcm9tPWZ1bmN0aW9uKHQsZSxuKXtpZigibnVtYmVyIj09dHlwZW9mIHQpdGhyb3cgbmV3IFR5cGVFcnJvcigiQXJndW1lbnQgbXVzdCBub3QgYmUgYSBudW1iZXIiKTtyZXR1cm4gcih0LGUsbil9LGkuYWxsb2M9ZnVuY3Rpb24odCxlLG4pe2lmKCJudW1iZXIiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyIik7dmFyIGk9cih0KTtyZXR1cm4gdm9pZCAwIT09ZT8ic3RyaW5nIj09dHlwZW9mIG4/aS5maWxsKGUsbik6aS5maWxsKGUpOmkuZmlsbCgwKSxpfSxpLmFsbG9jVW5zYWZlPWZ1bmN0aW9uKHQpe2lmKCJudW1iZXIiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyIik7cmV0dXJuIHIodCl9LGkuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKHQpe2lmKCJudW1iZXIiIT10eXBlb2YgdCl0aHJvdyBuZXcgVHlwZUVycm9yKCJBcmd1bWVudCBtdXN0IGJlIGEgbnVtYmVyIik7cmV0dXJuIFl0LlNsb3dCdWZmZXIodCl9fSkpO2Z1bmN0aW9uIEh0KHQpe3JldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9dmFyIEp0PXtpc0FycmF5OmZ1bmN0aW9uKHQpe3JldHVybiBBcnJheS5pc0FycmF5P0FycmF5LmlzQXJyYXkodCk6IltvYmplY3QgQXJyYXldIj09PUh0KHQpfSxpc0Jvb2xlYW46ZnVuY3Rpb24odCl7cmV0dXJuImJvb2xlYW4iPT10eXBlb2YgdH0saXNOdWxsOmZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT09dH0saXNOdWxsT3JVbmRlZmluZWQ6ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXR9LGlzTnVtYmVyOmZ1bmN0aW9uKHQpe3JldHVybiJudW1iZXIiPT10eXBlb2YgdH0saXNTdHJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0fSxpc1N5bWJvbDpmdW5jdGlvbih0KXtyZXR1cm4ic3ltYm9sIj09dHlwZW9mIHR9LGlzVW5kZWZpbmVkOmZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10fSxpc1JlZ0V4cDpmdW5jdGlvbih0KXtyZXR1cm4iW29iamVjdCBSZWdFeHBdIj09PUh0KHQpfSxpc09iamVjdDpmdW5jdGlvbih0KXtyZXR1cm4ib2JqZWN0Ij09dHlwZW9mIHQmJm51bGwhPT10fSxpc0RhdGU6ZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgRGF0ZV0iPT09SHQodCl9LGlzRXJyb3I6ZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgRXJyb3JdIj09PUh0KHQpfHx0IGluc3RhbmNlb2YgRXJyb3J9LGlzRnVuY3Rpb246ZnVuY3Rpb24odCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHR9LGlzUHJpbWl0aXZlOmZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT09dHx8ImJvb2xlYW4iPT10eXBlb2YgdHx8Im51bWJlciI9PXR5cGVvZiB0fHwic3RyaW5nIj09dHlwZW9mIHR8fCJzeW1ib2wiPT10eXBlb2YgdHx8dm9pZCAwPT09dH0saXNCdWZmZXI6YXQuaXNCdWZmZXJ9LEd0PU8oKGZ1bmN0aW9uKHQpeyJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3QuY3JlYXRlP3QuZXhwb3J0cz1mdW5jdGlvbih0LGUpe2UmJih0LnN1cGVyXz1lLHQucHJvdG90eXBlPU9iamVjdC5jcmVhdGUoZS5wcm90b3R5cGUse2NvbnN0cnVjdG9yOnt2YWx1ZTp0LGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsY29uZmlndXJhYmxlOiEwfX0pKX06dC5leHBvcnRzPWZ1bmN0aW9uKHQsZSl7aWYoZSl7dC5zdXBlcl89ZTt2YXIgcj1mdW5jdGlvbigpe307ci5wcm90b3R5cGU9ZS5wcm90b3R5cGUsdC5wcm90b3R5cGU9bmV3IHIsdC5wcm90b3R5cGUuY29uc3RydWN0b3I9dH19fSkpLFZ0PSJmdW5jdGlvbiI9PXR5cGVvZiBPYmplY3QuY3JlYXRlP2Z1bmN0aW9uKHQsZSl7dC5zdXBlcl89ZSx0LnByb3RvdHlwZT1PYmplY3QuY3JlYXRlKGUucHJvdG90eXBlLHtjb25zdHJ1Y3Rvcjp7dmFsdWU6dCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLGNvbmZpZ3VyYWJsZTohMH19KX06ZnVuY3Rpb24odCxlKXt0LnN1cGVyXz1lO3ZhciByPWZ1bmN0aW9uKCl7fTtyLnByb3RvdHlwZT1lLnByb3RvdHlwZSx0LnByb3RvdHlwZT1uZXcgcix0LnByb3RvdHlwZS5jb25zdHJ1Y3Rvcj10fSxLdD0vJVtzZGolXS9nO2Z1bmN0aW9uIFp0KHQpe2lmKCFkZSh0KSl7Zm9yKHZhciBlPVtdLHI9MDtyPGFyZ3VtZW50cy5sZW5ndGg7cisrKWUucHVzaChyZShhcmd1bWVudHNbcl0pKTtyZXR1cm4gZS5qb2luKCIgIil9cj0xO2Zvcih2YXIgbj1hcmd1bWVudHMsaT1uLmxlbmd0aCxvPVN0cmluZyh0KS5yZXBsYWNlKEt0LChmdW5jdGlvbih0KXtpZigiJSUiPT09dClyZXR1cm4iJSI7aWYocj49aSlyZXR1cm4gdDtzd2l0Y2godCl7Y2FzZSIlcyI6cmV0dXJuIFN0cmluZyhuW3IrK10pO2Nhc2UiJWQiOnJldHVybiBOdW1iZXIobltyKytdKTtjYXNlIiVqIjp0cnl7cmV0dXJuIEpTT04uc3RyaW5naWZ5KG5bcisrXSl9Y2F0Y2godCl7cmV0dXJuIltDaXJjdWxhcl0ifWRlZmF1bHQ6cmV0dXJuIHR9fSkpLGE9bltyXTtyPGk7YT1uWysrcl0paGUoYSl8fCFiZShhKT9vKz0iICIrYTpvKz0iICIrcmUoYSk7cmV0dXJuIG99ZnVuY3Rpb24gWHQoZSxyKXtpZihnZSh0LnByb2Nlc3MpKXJldHVybiBmdW5jdGlvbigpe3JldHVybiBYdChlLHIpLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07aWYoITA9PT1SLm5vRGVwcmVjYXRpb24pcmV0dXJuIGU7dmFyIG49ITE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoIW4pe2lmKFIudGhyb3dEZXByZWNhdGlvbil0aHJvdyBuZXcgRXJyb3Iocik7Ui50cmFjZURlcHJlY2F0aW9uP2NvbnNvbGUudHJhY2Uocik6Y29uc29sZS5lcnJvcihyKSxuPSEwfXJldHVybiBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKX19dmFyIFF0LHRlPXt9O2Z1bmN0aW9uIGVlKHQpe2lmKGdlKFF0KSYmKFF0PVIuZW52Lk5PREVfREVCVUd8fCIiKSx0PXQudG9VcHBlckNhc2UoKSwhdGVbdF0paWYobmV3IFJlZ0V4cCgiXFxiIit0KyJcXGIiLCJpIikudGVzdChRdCkpe3RlW3RdPWZ1bmN0aW9uKCl7dmFyIGU9WnQuYXBwbHkobnVsbCxhcmd1bWVudHMpO2NvbnNvbGUuZXJyb3IoIiVzICVkOiAlcyIsdCwwLGUpfX1lbHNlIHRlW3RdPWZ1bmN0aW9uKCl7fTtyZXR1cm4gdGVbdF19ZnVuY3Rpb24gcmUodCxlKXt2YXIgcj17c2VlbjpbXSxzdHlsaXplOmllfTtyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD49MyYmKHIuZGVwdGg9YXJndW1lbnRzWzJdKSxhcmd1bWVudHMubGVuZ3RoPj00JiYoci5jb2xvcnM9YXJndW1lbnRzWzNdKSxmZShlKT9yLnNob3dIaWRkZW49ZTplJiZPZShyLGUpLGdlKHIuc2hvd0hpZGRlbikmJihyLnNob3dIaWRkZW49ITEpLGdlKHIuZGVwdGgpJiYoci5kZXB0aD0yKSxnZShyLmNvbG9ycykmJihyLmNvbG9ycz0hMSksZ2Uoci5jdXN0b21JbnNwZWN0KSYmKHIuY3VzdG9tSW5zcGVjdD0hMCksci5jb2xvcnMmJihyLnN0eWxpemU9bmUpLG9lKHIsdCxyLmRlcHRoKX1mdW5jdGlvbiBuZSh0LGUpe3ZhciByPXJlLnN0eWxlc1tlXTtyZXR1cm4gcj8iG1siK3JlLmNvbG9yc1tyXVswXSsibSIrdCsiG1siK3JlLmNvbG9yc1tyXVsxXSsibSI6dH1mdW5jdGlvbiBpZSh0LGUpe3JldHVybiB0fWZ1bmN0aW9uIG9lKHQsZSxyKXtpZih0LmN1c3RvbUluc3BlY3QmJmUmJm1lKGUuaW5zcGVjdCkmJmUuaW5zcGVjdCE9PXJlJiYoIWUuY29uc3RydWN0b3J8fGUuY29uc3RydWN0b3IucHJvdG90eXBlIT09ZSkpe3ZhciBuPWUuaW5zcGVjdChyLHQpO3JldHVybiBkZShuKXx8KG49b2UodCxuLHIpKSxufXZhciBpPWZ1bmN0aW9uKHQsZSl7aWYoZ2UoZSkpcmV0dXJuIHQuc3R5bGl6ZSgidW5kZWZpbmVkIiwidW5kZWZpbmVkIik7aWYoZGUoZSkpe3ZhciByPSInIitKU09OLnN0cmluZ2lmeShlKS5yZXBsYWNlKC9eInwiJC9nLCIiKS5yZXBsYWNlKC8nL2csIlxcJyIpLnJlcGxhY2UoL1xcIi9nLCciJykrIiciO3JldHVybiB0LnN0eWxpemUociwic3RyaW5nIil9aWYoY2UoZSkpcmV0dXJuIHQuc3R5bGl6ZSgiIitlLCJudW1iZXIiKTtpZihmZShlKSlyZXR1cm4gdC5zdHlsaXplKCIiK2UsImJvb2xlYW4iKTtpZihoZShlKSlyZXR1cm4gdC5zdHlsaXplKCJudWxsIiwibnVsbCIpfSh0LGUpO2lmKGkpcmV0dXJuIGk7dmFyIG89T2JqZWN0LmtleXMoZSksYT1mdW5jdGlvbih0KXt2YXIgZT17fTtyZXR1cm4gdC5mb3JFYWNoKChmdW5jdGlvbih0LHIpe2VbdF09ITB9KSksZX0obyk7aWYodC5zaG93SGlkZGVuJiYobz1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhlKSksd2UoZSkmJihvLmluZGV4T2YoIm1lc3NhZ2UiKT49MHx8by5pbmRleE9mKCJkZXNjcmlwdGlvbiIpPj0wKSlyZXR1cm4gYWUoZSk7aWYoMD09PW8ubGVuZ3RoKXtpZihtZShlKSl7dmFyIHM9ZS5uYW1lPyI6ICIrZS5uYW1lOiIiO3JldHVybiB0LnN0eWxpemUoIltGdW5jdGlvbiIrcysiXSIsInNwZWNpYWwiKX1pZih5ZShlKSlyZXR1cm4gdC5zdHlsaXplKFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSwicmVnZXhwIik7aWYodmUoZSkpcmV0dXJuIHQuc3R5bGl6ZShEYXRlLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLCJkYXRlIik7aWYod2UoZSkpcmV0dXJuIGFlKGUpfXZhciB1LGY9IiIsaD0hMSxsPVsieyIsIn0iXTsodWUoZSkmJihoPSEwLGw9WyJbIiwiXSJdKSxtZShlKSkmJihmPSIgW0Z1bmN0aW9uIisoZS5uYW1lPyI6ICIrZS5uYW1lOiIiKSsiXSIpO3JldHVybiB5ZShlKSYmKGY9IiAiK1JlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChlKSksdmUoZSkmJihmPSIgIitEYXRlLnByb3RvdHlwZS50b1VUQ1N0cmluZy5jYWxsKGUpKSx3ZShlKSYmKGY9IiAiK2FlKGUpKSwwIT09by5sZW5ndGh8fGgmJjAhPWUubGVuZ3RoP3I8MD95ZShlKT90LnN0eWxpemUoUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGUpLCJyZWdleHAiKTp0LnN0eWxpemUoIltPYmplY3RdIiwic3BlY2lhbCIpOih0LnNlZW4ucHVzaChlKSx1PWg/ZnVuY3Rpb24odCxlLHIsbixpKXtmb3IodmFyIG89W10sYT0wLHM9ZS5sZW5ndGg7YTxzOysrYSlBZShlLFN0cmluZyhhKSk/by5wdXNoKHNlKHQsZSxyLG4sU3RyaW5nKGEpLCEwKSk6by5wdXNoKCIiKTtyZXR1cm4gaS5mb3JFYWNoKChmdW5jdGlvbihpKXtpLm1hdGNoKC9eXGQrJC8pfHxvLnB1c2goc2UodCxlLHIsbixpLCEwKSl9KSksb30odCxlLHIsYSxvKTpvLm1hcCgoZnVuY3Rpb24obil7cmV0dXJuIHNlKHQsZSxyLGEsbixoKX0pKSx0LnNlZW4ucG9wKCksZnVuY3Rpb24odCxlLHIpe2lmKHQucmVkdWNlKChmdW5jdGlvbih0LGUpe3JldHVybiBlLmluZGV4T2YoIlxuIiksdCtlLnJlcGxhY2UoL1x1MDAxYlxbXGRcZD9tL2csIiIpLmxlbmd0aCsxfSksMCk+NjApcmV0dXJuIHJbMF0rKCIiPT09ZT8iIjplKyJcbiAiKSsiICIrdC5qb2luKCIsXG4gICIpKyIgIityWzFdO3JldHVybiByWzBdK2UrIiAiK3Quam9pbigiLCAiKSsiICIrclsxXX0odSxmLGwpKTpsWzBdK2YrbFsxXX1mdW5jdGlvbiBhZSh0KXtyZXR1cm4iWyIrRXJyb3IucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCkrIl0ifWZ1bmN0aW9uIHNlKHQsZSxyLG4saSxvKXt2YXIgYSxzLHU7aWYoKHU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihlLGkpfHx7dmFsdWU6ZVtpXX0pLmdldD9zPXUuc2V0P3Quc3R5bGl6ZSgiW0dldHRlci9TZXR0ZXJdIiwic3BlY2lhbCIpOnQuc3R5bGl6ZSgiW0dldHRlcl0iLCJzcGVjaWFsIik6dS5zZXQmJihzPXQuc3R5bGl6ZSgiW1NldHRlcl0iLCJzcGVjaWFsIikpLEFlKG4saSl8fChhPSJbIitpKyJdIiksc3x8KHQuc2Vlbi5pbmRleE9mKHUudmFsdWUpPDA/KHM9aGUocik/b2UodCx1LnZhbHVlLG51bGwpOm9lKHQsdS52YWx1ZSxyLTEpKS5pbmRleE9mKCJcbiIpPi0xJiYocz1vP3Muc3BsaXQoIlxuIikubWFwKChmdW5jdGlvbih0KXtyZXR1cm4iICAiK3R9KSkuam9pbigiXG4iKS5zdWJzdHIoMik6IlxuIitzLnNwbGl0KCJcbiIpLm1hcCgoZnVuY3Rpb24odCl7cmV0dXJuIiAgICIrdH0pKS5qb2luKCJcbiIpKTpzPXQuc3R5bGl6ZSgiW0NpcmN1bGFyXSIsInNwZWNpYWwiKSksZ2UoYSkpe2lmKG8mJmkubWF0Y2goL15cZCskLykpcmV0dXJuIHM7KGE9SlNPTi5zdHJpbmdpZnkoIiIraSkpLm1hdGNoKC9eIihbYS16QS1aX11bYS16QS1aXzAtOV0qKSIkLyk/KGE9YS5zdWJzdHIoMSxhLmxlbmd0aC0yKSxhPXQuc3R5bGl6ZShhLCJuYW1lIikpOihhPWEucmVwbGFjZSgvJy9nLCJcXCciKS5yZXBsYWNlKC9cXCIvZywnIicpLnJlcGxhY2UoLyheInwiJCkvZywiJyIpLGE9dC5zdHlsaXplKGEsInN0cmluZyIpKX1yZXR1cm4gYSsiOiAiK3N9ZnVuY3Rpb24gdWUodCl7cmV0dXJuIEFycmF5LmlzQXJyYXkodCl9ZnVuY3Rpb24gZmUodCl7cmV0dXJuImJvb2xlYW4iPT10eXBlb2YgdH1mdW5jdGlvbiBoZSh0KXtyZXR1cm4gbnVsbD09PXR9ZnVuY3Rpb24gbGUodCl7cmV0dXJuIG51bGw9PXR9ZnVuY3Rpb24gY2UodCl7cmV0dXJuIm51bWJlciI9PXR5cGVvZiB0fWZ1bmN0aW9uIGRlKHQpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdH1mdW5jdGlvbiBwZSh0KXtyZXR1cm4ic3ltYm9sIj09dHlwZW9mIHR9ZnVuY3Rpb24gZ2UodCl7cmV0dXJuIHZvaWQgMD09PXR9ZnVuY3Rpb24geWUodCl7cmV0dXJuIGJlKHQpJiYiW29iamVjdCBSZWdFeHBdIj09PUVlKHQpfWZ1bmN0aW9uIGJlKHQpe3JldHVybiJvYmplY3QiPT10eXBlb2YgdCYmbnVsbCE9PXR9ZnVuY3Rpb24gdmUodCl7cmV0dXJuIGJlKHQpJiYiW29iamVjdCBEYXRlXSI9PT1FZSh0KX1mdW5jdGlvbiB3ZSh0KXtyZXR1cm4gYmUodCkmJigiW29iamVjdCBFcnJvcl0iPT09RWUodCl8fHQgaW5zdGFuY2VvZiBFcnJvcil9ZnVuY3Rpb24gbWUodCl7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIHR9ZnVuY3Rpb24gX2UodCl7cmV0dXJuIG51bGw9PT10fHwiYm9vbGVhbiI9PXR5cGVvZiB0fHwibnVtYmVyIj09dHlwZW9mIHR8fCJzdHJpbmciPT10eXBlb2YgdHx8InN5bWJvbCI9PXR5cGVvZiB0fHx2b2lkIDA9PT10fWZ1bmN0aW9uIFNlKHQpe3JldHVybiBhdC5pc0J1ZmZlcih0KX1mdW5jdGlvbiBFZSh0KXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfWZ1bmN0aW9uIGtlKHQpe3JldHVybiB0PDEwPyIwIit0LnRvU3RyaW5nKDEwKTp0LnRvU3RyaW5nKDEwKX1yZS5jb2xvcnM9e2JvbGQ6WzEsMjJdLGl0YWxpYzpbMywyM10sdW5kZXJsaW5lOls0LDI0XSxpbnZlcnNlOls3LDI3XSx3aGl0ZTpbMzcsMzldLGdyZXk6WzkwLDM5XSxibGFjazpbMzAsMzldLGJsdWU6WzM0LDM5XSxjeWFuOlszNiwzOV0sZ3JlZW46WzMyLDM5XSxtYWdlbnRhOlszNSwzOV0scmVkOlszMSwzOV0seWVsbG93OlszMywzOV19LHJlLnN0eWxlcz17c3BlY2lhbDoiY3lhbiIsbnVtYmVyOiJ5ZWxsb3ciLGJvb2xlYW46InllbGxvdyIsdW5kZWZpbmVkOiJncmV5IixudWxsOiJib2xkIixzdHJpbmc6ImdyZWVuIixkYXRlOiJtYWdlbnRhIixyZWdleHA6InJlZCJ9O3ZhciBSZT1bIkphbiIsIkZlYiIsIk1hciIsIkFwciIsIk1heSIsIkp1biIsIkp1bCIsIkF1ZyIsIlNlcCIsIk9jdCIsIk5vdiIsIkRlYyJdO2Z1bmN0aW9uIGplKCl7dmFyIHQ9bmV3IERhdGUsZT1ba2UodC5nZXRIb3VycygpKSxrZSh0LmdldE1pbnV0ZXMoKSksa2UodC5nZXRTZWNvbmRzKCkpXS5qb2luKCI6Iik7cmV0dXJuW3QuZ2V0RGF0ZSgpLFJlW3QuZ2V0TW9udGgoKV0sZV0uam9pbigiICIpfWZ1bmN0aW9uIFRlKCl7Y29uc29sZS5sb2coIiVzIC0gJXMiLGplKCksWnQuYXBwbHkobnVsbCxhcmd1bWVudHMpKX1mdW5jdGlvbiBPZSh0LGUpe2lmKCFlfHwhYmUoZSkpcmV0dXJuIHQ7Zm9yKHZhciByPU9iamVjdC5rZXlzKGUpLG49ci5sZW5ndGg7bi0tOyl0W3Jbbl1dPWVbcltuXV07cmV0dXJuIHR9ZnVuY3Rpb24gQWUodCxlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHQsZSl9dmFyIENlPXtpbmhlcml0czpWdCxfZXh0ZW5kOk9lLGxvZzpUZSxpc0J1ZmZlcjpTZSxpc1ByaW1pdGl2ZTpfZSxpc0Z1bmN0aW9uOm1lLGlzRXJyb3I6d2UsaXNEYXRlOnZlLGlzT2JqZWN0OmJlLGlzUmVnRXhwOnllLGlzVW5kZWZpbmVkOmdlLGlzU3ltYm9sOnBlLGlzU3RyaW5nOmRlLGlzTnVtYmVyOmNlLGlzTnVsbE9yVW5kZWZpbmVkOmxlLGlzTnVsbDpoZSxpc0Jvb2xlYW46ZmUsaXNBcnJheTp1ZSxpbnNwZWN0OnJlLGRlcHJlY2F0ZTpYdCxmb3JtYXQ6WnQsZGVidWdsb2c6ZWV9LE1lPVQoT2JqZWN0LmZyZWV6ZSh7X19wcm90b19fOm51bGwsZm9ybWF0Olp0LGRlcHJlY2F0ZTpYdCxkZWJ1Z2xvZzplZSxpbnNwZWN0OnJlLGlzQXJyYXk6dWUsaXNCb29sZWFuOmZlLGlzTnVsbDpoZSxpc051bGxPclVuZGVmaW5lZDpsZSxpc051bWJlcjpjZSxpc1N0cmluZzpkZSxpc1N5bWJvbDpwZSxpc1VuZGVmaW5lZDpnZSxpc1JlZ0V4cDp5ZSxpc09iamVjdDpiZSxpc0RhdGU6dmUsaXNFcnJvcjp3ZSxpc0Z1bmN0aW9uOm1lLGlzUHJpbWl0aXZlOl9lLGlzQnVmZmVyOlNlLGxvZzpUZSxpbmhlcml0czpWdCxfZXh0ZW5kOk9lLGRlZmF1bHQ6Q2V9KSkseGU9TygoZnVuY3Rpb24odCl7dmFyIGU9JHQuQnVmZmVyO3QuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIHQoKXshZnVuY3Rpb24odCxlKXtpZighKHQgaW5zdGFuY2VvZiBlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb24iKX0odGhpcyx0KSx0aGlzLmhlYWQ9bnVsbCx0aGlzLnRhaWw9bnVsbCx0aGlzLmxlbmd0aD0wfXJldHVybiB0LnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQpe3ZhciBlPXtkYXRhOnQsbmV4dDpudWxsfTt0aGlzLmxlbmd0aD4wP3RoaXMudGFpbC5uZXh0PWU6dGhpcy5oZWFkPWUsdGhpcy50YWlsPWUsKyt0aGlzLmxlbmd0aH0sdC5wcm90b3R5cGUudW5zaGlmdD1mdW5jdGlvbih0KXt2YXIgZT17ZGF0YTp0LG5leHQ6dGhpcy5oZWFkfTswPT09dGhpcy5sZW5ndGgmJih0aGlzLnRhaWw9ZSksdGhpcy5oZWFkPWUsKyt0aGlzLmxlbmd0aH0sdC5wcm90b3R5cGUuc2hpZnQ9ZnVuY3Rpb24oKXtpZigwIT09dGhpcy5sZW5ndGgpe3ZhciB0PXRoaXMuaGVhZC5kYXRhO3JldHVybiAxPT09dGhpcy5sZW5ndGg/dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsOnRoaXMuaGVhZD10aGlzLmhlYWQubmV4dCwtLXRoaXMubGVuZ3RoLHR9fSx0LnByb3RvdHlwZS5jbGVhcj1mdW5jdGlvbigpe3RoaXMuaGVhZD10aGlzLnRhaWw9bnVsbCx0aGlzLmxlbmd0aD0wfSx0LnByb3RvdHlwZS5qb2luPWZ1bmN0aW9uKHQpe2lmKDA9PT10aGlzLmxlbmd0aClyZXR1cm4iIjtmb3IodmFyIGU9dGhpcy5oZWFkLHI9IiIrZS5kYXRhO2U9ZS5uZXh0OylyKz10K2UuZGF0YTtyZXR1cm4gcn0sdC5wcm90b3R5cGUuY29uY2F0PWZ1bmN0aW9uKHQpe2lmKDA9PT10aGlzLmxlbmd0aClyZXR1cm4gZS5hbGxvYygwKTtpZigxPT09dGhpcy5sZW5ndGgpcmV0dXJuIHRoaXMuaGVhZC5kYXRhO2Zvcih2YXIgcixuLGksbz1lLmFsbG9jVW5zYWZlKHQ+Pj4wKSxhPXRoaXMuaGVhZCxzPTA7YTspcj1hLmRhdGEsbj1vLGk9cyxyLmNvcHkobixpKSxzKz1hLmRhdGEubGVuZ3RoLGE9YS5uZXh0O3JldHVybiBvfSx0fSgpLE1lJiZNZS5pbnNwZWN0JiZNZS5pbnNwZWN0LmN1c3RvbSYmKHQuZXhwb3J0cy5wcm90b3R5cGVbTWUuaW5zcGVjdC5jdXN0b21dPWZ1bmN0aW9uKCl7dmFyIHQ9TWUuaW5zcGVjdCh7bGVuZ3RoOnRoaXMubGVuZ3RofSk7cmV0dXJuIHRoaXMuY29uc3RydWN0b3IubmFtZSsiICIrdH0pfSkpO2Z1bmN0aW9uIExlKHQsZSl7dC5lbWl0KCJlcnJvciIsZSl9dmFyIEJlPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcyxuPXRoaXMuX3JlYWRhYmxlU3RhdGUmJnRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkLGk9dGhpcy5fd3JpdGFibGVTdGF0ZSYmdGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ7cmV0dXJuIG58fGk/KGU/ZSh0KTohdHx8dGhpcy5fd3JpdGFibGVTdGF0ZSYmdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWR8fEEubmV4dFRpY2soTGUsdGhpcyx0KSx0aGlzKToodGhpcy5fcmVhZGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkPSEwKSx0aGlzLl93cml0YWJsZVN0YXRlJiYodGhpcy5fd3JpdGFibGVTdGF0ZS5kZXN0cm95ZWQ9ITApLHRoaXMuX2Rlc3Ryb3kodHx8bnVsbCwoZnVuY3Rpb24odCl7IWUmJnQ/KEEubmV4dFRpY2soTGUscix0KSxyLl93cml0YWJsZVN0YXRlJiYoci5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ITApKTplJiZlKHQpfSkpLHRoaXMpfSxQZT1mdW5jdGlvbigpe3RoaXMuX3JlYWRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLnJlYWRpbmc9ITEsdGhpcy5fcmVhZGFibGVTdGF0ZS5lbmRlZD0hMSx0aGlzLl9yZWFkYWJsZVN0YXRlLmVuZEVtaXR0ZWQ9ITEpLHRoaXMuX3dyaXRhYmxlU3RhdGUmJih0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD0hMSx0aGlzLl93cml0YWJsZVN0YXRlLmVuZGVkPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZW5kaW5nPSExLHRoaXMuX3dyaXRhYmxlU3RhdGUuZmluaXNoZWQ9ITEsdGhpcy5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ITEpfSxVZT1mdW5jdGlvbih0LGUpe2lmKE5lKCJub0RlcHJlY2F0aW9uIikpcmV0dXJuIHQ7dmFyIHI9ITE7cmV0dXJuIGZ1bmN0aW9uKCl7aWYoIXIpe2lmKE5lKCJ0aHJvd0RlcHJlY2F0aW9uIikpdGhyb3cgbmV3IEVycm9yKGUpO05lKCJ0cmFjZURlcHJlY2F0aW9uIik/Y29uc29sZS50cmFjZShlKTpjb25zb2xlLndhcm4oZSkscj0hMH1yZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fTtmdW5jdGlvbiBOZSh0KXt0cnl7aWYoIWoubG9jYWxTdG9yYWdlKXJldHVybiExfWNhdGNoKHQpe3JldHVybiExfXZhciBlPWoubG9jYWxTdG9yYWdlW3RdO3JldHVybiBudWxsIT1lJiYidHJ1ZSI9PT1TdHJpbmcoZSkudG9Mb3dlckNhc2UoKX12YXIgRGU9VmU7ZnVuY3Rpb24gSWUodCl7dmFyIGU9dGhpczt0aGlzLm5leHQ9bnVsbCx0aGlzLmVudHJ5PW51bGwsdGhpcy5maW5pc2g9ZnVuY3Rpb24oKXshZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQuZW50cnk7dC5lbnRyeT1udWxsO2Zvcig7bjspe3ZhciBpPW4uY2FsbGJhY2s7ZS5wZW5kaW5nY2ItLSxpKHIpLG49bi5uZXh0fWUuY29ya2VkUmVxdWVzdHNGcmVlP2UuY29ya2VkUmVxdWVzdHNGcmVlLm5leHQ9dDplLmNvcmtlZFJlcXVlc3RzRnJlZT10fShlLHQpfX12YXIgcWUsRmU9IVIuYnJvd3NlciYmWyJ2MC4xMCIsInYwLjkuIl0uaW5kZXhPZihSLnZlcnNpb24uc2xpY2UoMCw1KSk+LTE/c2V0SW1tZWRpYXRlOkEubmV4dFRpY2s7VmUuV3JpdGFibGVTdGF0ZT1HZTt2YXIgV2U9T2JqZWN0LmNyZWF0ZShKdCk7V2UuaW5oZXJpdHM9R3Q7dmFyIHplLFllPXtkZXByZWNhdGU6VWV9LCRlPSR0LkJ1ZmZlcixIZT1qLlVpbnQ4QXJyYXl8fGZ1bmN0aW9uKCl7fTtmdW5jdGlvbiBKZSgpe31mdW5jdGlvbiBHZSh0LGUpe3Q9dHx8e307dmFyIHI9ZSBpbnN0YW5jZW9mKHFlPXFlfHxucik7dGhpcy5vYmplY3RNb2RlPSEhdC5vYmplY3RNb2RlLHImJih0aGlzLm9iamVjdE1vZGU9dGhpcy5vYmplY3RNb2RlfHwhIXQud3JpdGFibGVPYmplY3RNb2RlKTt2YXIgbj10LmhpZ2hXYXRlck1hcmssaT10LndyaXRhYmxlSGlnaFdhdGVyTWFyayxvPXRoaXMub2JqZWN0TW9kZT8xNjoxNjM4NDt0aGlzLmhpZ2hXYXRlck1hcms9bnx8MD09PW4/bjpyJiYoaXx8MD09PWkpP2k6byx0aGlzLmhpZ2hXYXRlck1hcms9TWF0aC5mbG9vcih0aGlzLmhpZ2hXYXRlck1hcmspLHRoaXMuZmluYWxDYWxsZWQ9ITEsdGhpcy5uZWVkRHJhaW49ITEsdGhpcy5lbmRpbmc9ITEsdGhpcy5lbmRlZD0hMSx0aGlzLmZpbmlzaGVkPSExLHRoaXMuZGVzdHJveWVkPSExO3ZhciBhPSExPT09dC5kZWNvZGVTdHJpbmdzO3RoaXMuZGVjb2RlU3RyaW5ncz0hYSx0aGlzLmRlZmF1bHRFbmNvZGluZz10LmRlZmF1bHRFbmNvZGluZ3x8InV0ZjgiLHRoaXMubGVuZ3RoPTAsdGhpcy53cml0aW5nPSExLHRoaXMuY29ya2VkPTAsdGhpcy5zeW5jPSEwLHRoaXMuYnVmZmVyUHJvY2Vzc2luZz0hMSx0aGlzLm9ud3JpdGU9ZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSl7dmFyIHI9dC5fd3JpdGFibGVTdGF0ZSxuPXIuc3luYyxpPXIud3JpdGVjYjtpZihmdW5jdGlvbih0KXt0LndyaXRpbmc9ITEsdC53cml0ZWNiPW51bGwsdC5sZW5ndGgtPXQud3JpdGVsZW4sdC53cml0ZWxlbj0wfShyKSxlKSFmdW5jdGlvbih0LGUscixuLGkpey0tZS5wZW5kaW5nY2Iscj8oQS5uZXh0VGljayhpLG4pLEEubmV4dFRpY2soZXIsdCxlKSx0Ll93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCx0LmVtaXQoImVycm9yIixuKSk6KGkobiksdC5fd3JpdGFibGVTdGF0ZS5lcnJvckVtaXR0ZWQ9ITAsdC5lbWl0KCJlcnJvciIsbiksZXIodCxlKSl9KHQscixuLGUsaSk7ZWxzZXt2YXIgbz1RZShyKTtvfHxyLmNvcmtlZHx8ci5idWZmZXJQcm9jZXNzaW5nfHwhci5idWZmZXJlZFJlcXVlc3R8fFhlKHQsciksbj9GZShaZSx0LHIsbyxpKTpaZSh0LHIsbyxpKX19KGUsdCl9LHRoaXMud3JpdGVjYj1udWxsLHRoaXMud3JpdGVsZW49MCx0aGlzLmJ1ZmZlcmVkUmVxdWVzdD1udWxsLHRoaXMubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsLHRoaXMucGVuZGluZ2NiPTAsdGhpcy5wcmVmaW5pc2hlZD0hMSx0aGlzLmVycm9yRW1pdHRlZD0hMSx0aGlzLmJ1ZmZlcmVkUmVxdWVzdENvdW50PTAsdGhpcy5jb3JrZWRSZXF1ZXN0c0ZyZWU9bmV3IEllKHRoaXMpfWZ1bmN0aW9uIFZlKHQpe2lmKHFlPXFlfHxuciwhKHplLmNhbGwoVmUsdGhpcyl8fHRoaXMgaW5zdGFuY2VvZiBxZSkpcmV0dXJuIG5ldyBWZSh0KTt0aGlzLl93cml0YWJsZVN0YXRlPW5ldyBHZSh0LHRoaXMpLHRoaXMud3JpdGFibGU9ITAsdCYmKCJmdW5jdGlvbiI9PXR5cGVvZiB0LndyaXRlJiYodGhpcy5fd3JpdGU9dC53cml0ZSksImZ1bmN0aW9uIj09dHlwZW9mIHQud3JpdGV2JiYodGhpcy5fd3JpdGV2PXQud3JpdGV2KSwiZnVuY3Rpb24iPT10eXBlb2YgdC5kZXN0cm95JiYodGhpcy5fZGVzdHJveT10LmRlc3Ryb3kpLCJmdW5jdGlvbiI9PXR5cGVvZiB0LmZpbmFsJiYodGhpcy5fZmluYWw9dC5maW5hbCkpLCQuY2FsbCh0aGlzKX1mdW5jdGlvbiBLZSh0LGUscixuLGksbyxhKXtlLndyaXRlbGVuPW4sZS53cml0ZWNiPWEsZS53cml0aW5nPSEwLGUuc3luYz0hMCxyP3QuX3dyaXRldihpLGUub253cml0ZSk6dC5fd3JpdGUoaSxvLGUub253cml0ZSksZS5zeW5jPSExfWZ1bmN0aW9uIFplKHQsZSxyLG4pe3J8fGZ1bmN0aW9uKHQsZSl7MD09PWUubGVuZ3RoJiZlLm5lZWREcmFpbiYmKGUubmVlZERyYWluPSExLHQuZW1pdCgiZHJhaW4iKSl9KHQsZSksZS5wZW5kaW5nY2ItLSxuKCksZXIodCxlKX1mdW5jdGlvbiBYZSh0LGUpe2UuYnVmZmVyUHJvY2Vzc2luZz0hMDt2YXIgcj1lLmJ1ZmZlcmVkUmVxdWVzdDtpZih0Ll93cml0ZXYmJnImJnIubmV4dCl7dmFyIG49ZS5idWZmZXJlZFJlcXVlc3RDb3VudCxpPW5ldyBBcnJheShuKSxvPWUuY29ya2VkUmVxdWVzdHNGcmVlO28uZW50cnk9cjtmb3IodmFyIGE9MCxzPSEwO3I7KWlbYV09cixyLmlzQnVmfHwocz0hMSkscj1yLm5leHQsYSs9MTtpLmFsbEJ1ZmZlcnM9cyxLZSh0LGUsITAsZS5sZW5ndGgsaSwiIixvLmZpbmlzaCksZS5wZW5kaW5nY2IrKyxlLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bnVsbCxvLm5leHQ/KGUuY29ya2VkUmVxdWVzdHNGcmVlPW8ubmV4dCxvLm5leHQ9bnVsbCk6ZS5jb3JrZWRSZXF1ZXN0c0ZyZWU9bmV3IEllKGUpLGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQ9MH1lbHNle2Zvcig7cjspe3ZhciB1PXIuY2h1bmssZj1yLmVuY29kaW5nLGg9ci5jYWxsYmFjaztpZihLZSh0LGUsITEsZS5vYmplY3RNb2RlPzE6dS5sZW5ndGgsdSxmLGgpLHI9ci5uZXh0LGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQtLSxlLndyaXRpbmcpYnJlYWt9bnVsbD09PXImJihlLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bnVsbCl9ZS5idWZmZXJlZFJlcXVlc3Q9cixlLmJ1ZmZlclByb2Nlc3Npbmc9ITF9ZnVuY3Rpb24gUWUodCl7cmV0dXJuIHQuZW5kaW5nJiYwPT09dC5sZW5ndGgmJm51bGw9PT10LmJ1ZmZlcmVkUmVxdWVzdCYmIXQuZmluaXNoZWQmJiF0LndyaXRpbmd9ZnVuY3Rpb24gdHIodCxlKXt0Ll9maW5hbCgoZnVuY3Rpb24ocil7ZS5wZW5kaW5nY2ItLSxyJiZ0LmVtaXQoImVycm9yIixyKSxlLnByZWZpbmlzaGVkPSEwLHQuZW1pdCgicHJlZmluaXNoIiksZXIodCxlKX0pKX1mdW5jdGlvbiBlcih0LGUpe3ZhciByPVFlKGUpO3JldHVybiByJiYoIWZ1bmN0aW9uKHQsZSl7ZS5wcmVmaW5pc2hlZHx8ZS5maW5hbENhbGxlZHx8KCJmdW5jdGlvbiI9PXR5cGVvZiB0Ll9maW5hbD8oZS5wZW5kaW5nY2IrKyxlLmZpbmFsQ2FsbGVkPSEwLEEubmV4dFRpY2sodHIsdCxlKSk6KGUucHJlZmluaXNoZWQ9ITAsdC5lbWl0KCJwcmVmaW5pc2giKSkpfSh0LGUpLDA9PT1lLnBlbmRpbmdjYiYmKGUuZmluaXNoZWQ9ITAsdC5lbWl0KCJmaW5pc2giKSkpLHJ9V2UuaW5oZXJpdHMoVmUsJCksR2UucHJvdG90eXBlLmdldEJ1ZmZlcj1mdW5jdGlvbigpe2Zvcih2YXIgdD10aGlzLmJ1ZmZlcmVkUmVxdWVzdCxlPVtdO3Q7KWUucHVzaCh0KSx0PXQubmV4dDtyZXR1cm4gZX0sZnVuY3Rpb24oKXt0cnl7T2JqZWN0LmRlZmluZVByb3BlcnR5KEdlLnByb3RvdHlwZSwiYnVmZmVyIix7Z2V0OlllLmRlcHJlY2F0ZSgoZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRCdWZmZXIoKX0pLCJfd3JpdGFibGVTdGF0ZS5idWZmZXIgaXMgZGVwcmVjYXRlZC4gVXNlIF93cml0YWJsZVN0YXRlLmdldEJ1ZmZlciBpbnN0ZWFkLiIsIkRFUDAwMDMiKX0pfWNhdGNoKHQpe319KCksImZ1bmN0aW9uIj09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmhhc0luc3RhbmNlJiYiZnVuY3Rpb24iPT10eXBlb2YgRnVuY3Rpb24ucHJvdG90eXBlW1N5bWJvbC5oYXNJbnN0YW5jZV0/KHplPUZ1bmN0aW9uLnByb3RvdHlwZVtTeW1ib2wuaGFzSW5zdGFuY2VdLE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWZSxTeW1ib2wuaGFzSW5zdGFuY2Use3ZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiEhemUuY2FsbCh0aGlzLHQpfHx0aGlzPT09VmUmJih0JiZ0Ll93cml0YWJsZVN0YXRlIGluc3RhbmNlb2YgR2UpfX0pKTp6ZT1mdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIHRoaXN9LFZlLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKCl7dGhpcy5lbWl0KCJlcnJvciIsbmV3IEVycm9yKCJDYW5ub3QgcGlwZSwgbm90IHJlYWRhYmxlIikpfSxWZS5wcm90b3R5cGUud3JpdGU9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXRoaXMuX3dyaXRhYmxlU3RhdGUsaT0hMSxvPSFuLm9iamVjdE1vZGUmJmZ1bmN0aW9uKHQpe3JldHVybiAkZS5pc0J1ZmZlcih0KXx8dCBpbnN0YW5jZW9mIEhlfSh0KTtyZXR1cm4gbyYmISRlLmlzQnVmZmVyKHQpJiYodD1mdW5jdGlvbih0KXtyZXR1cm4gJGUuZnJvbSh0KX0odCkpLCJmdW5jdGlvbiI9PXR5cGVvZiBlJiYocj1lLGU9bnVsbCksbz9lPSJidWZmZXIiOmV8fChlPW4uZGVmYXVsdEVuY29kaW5nKSwiZnVuY3Rpb24iIT10eXBlb2YgciYmKHI9SmUpLG4uZW5kZWQ/ZnVuY3Rpb24odCxlKXt2YXIgcj1uZXcgRXJyb3IoIndyaXRlIGFmdGVyIGVuZCIpO3QuZW1pdCgiZXJyb3IiLHIpLEEubmV4dFRpY2soZSxyKX0odGhpcyxyKToob3x8ZnVuY3Rpb24odCxlLHIsbil7dmFyIGk9ITAsbz0hMTtyZXR1cm4gbnVsbD09PXI/bz1uZXcgVHlwZUVycm9yKCJNYXkgbm90IHdyaXRlIG51bGwgdmFsdWVzIHRvIHN0cmVhbSIpOiJzdHJpbmciPT10eXBlb2Ygcnx8dm9pZCAwPT09cnx8ZS5vYmplY3RNb2RlfHwobz1uZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcvYnVmZmVyIGNodW5rIikpLG8mJih0LmVtaXQoImVycm9yIixvKSxBLm5leHRUaWNrKG4sbyksaT0hMSksaX0odGhpcyxuLHQscikpJiYobi5wZW5kaW5nY2IrKyxpPWZ1bmN0aW9uKHQsZSxyLG4saSxvKXtpZighcil7dmFyIGE9ZnVuY3Rpb24odCxlLHIpe3Qub2JqZWN0TW9kZXx8ITE9PT10LmRlY29kZVN0cmluZ3N8fCJzdHJpbmciIT10eXBlb2YgZXx8KGU9JGUuZnJvbShlLHIpKTtyZXR1cm4gZX0oZSxuLGkpO24hPT1hJiYocj0hMCxpPSJidWZmZXIiLG49YSl9dmFyIHM9ZS5vYmplY3RNb2RlPzE6bi5sZW5ndGg7ZS5sZW5ndGgrPXM7dmFyIHU9ZS5sZW5ndGg8ZS5oaWdoV2F0ZXJNYXJrO3V8fChlLm5lZWREcmFpbj0hMCk7aWYoZS53cml0aW5nfHxlLmNvcmtlZCl7dmFyIGY9ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0O2UubGFzdEJ1ZmZlcmVkUmVxdWVzdD17Y2h1bms6bixlbmNvZGluZzppLGlzQnVmOnIsY2FsbGJhY2s6byxuZXh0Om51bGx9LGY/Zi5uZXh0PWUubGFzdEJ1ZmZlcmVkUmVxdWVzdDplLmJ1ZmZlcmVkUmVxdWVzdD1lLmxhc3RCdWZmZXJlZFJlcXVlc3QsZS5idWZmZXJlZFJlcXVlc3RDb3VudCs9MX1lbHNlIEtlKHQsZSwhMSxzLG4saSxvKTtyZXR1cm4gdX0odGhpcyxuLG8sdCxlLHIpKSxpfSxWZS5wcm90b3R5cGUuY29yaz1mdW5jdGlvbigpe3RoaXMuX3dyaXRhYmxlU3RhdGUuY29ya2VkKyt9LFZlLnByb3RvdHlwZS51bmNvcms9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl93cml0YWJsZVN0YXRlO3QuY29ya2VkJiYodC5jb3JrZWQtLSx0LndyaXRpbmd8fHQuY29ya2VkfHx0LmZpbmlzaGVkfHx0LmJ1ZmZlclByb2Nlc3Npbmd8fCF0LmJ1ZmZlcmVkUmVxdWVzdHx8WGUodGhpcyx0KSl9LFZlLnByb3RvdHlwZS5zZXREZWZhdWx0RW5jb2Rpbmc9ZnVuY3Rpb24odCl7aWYoInN0cmluZyI9PXR5cGVvZiB0JiYodD10LnRvTG93ZXJDYXNlKCkpLCEoWyJoZXgiLCJ1dGY4IiwidXRmLTgiLCJhc2NpaSIsImJpbmFyeSIsImJhc2U2NCIsInVjczIiLCJ1Y3MtMiIsInV0ZjE2bGUiLCJ1dGYtMTZsZSIsInJhdyJdLmluZGV4T2YoKHQrIiIpLnRvTG93ZXJDYXNlKCkpPi0xKSl0aHJvdyBuZXcgVHlwZUVycm9yKCJVbmtub3duIGVuY29kaW5nOiAiK3QpO3JldHVybiB0aGlzLl93cml0YWJsZVN0YXRlLmRlZmF1bHRFbmNvZGluZz10LHRoaXN9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShWZS5wcm90b3R5cGUsIndyaXRhYmxlSGlnaFdhdGVyTWFyayIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KSxWZS5wcm90b3R5cGUuX3dyaXRlPWZ1bmN0aW9uKHQsZSxyKXtyKG5ldyBFcnJvcigiX3dyaXRlKCkgaXMgbm90IGltcGxlbWVudGVkIikpfSxWZS5wcm90b3R5cGUuX3dyaXRldj1udWxsLFZlLnByb3RvdHlwZS5lbmQ9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXRoaXMuX3dyaXRhYmxlU3RhdGU7ImZ1bmN0aW9uIj09dHlwZW9mIHQ/KHI9dCx0PW51bGwsZT1udWxsKToiZnVuY3Rpb24iPT10eXBlb2YgZSYmKHI9ZSxlPW51bGwpLG51bGwhPXQmJnRoaXMud3JpdGUodCxlKSxuLmNvcmtlZCYmKG4uY29ya2VkPTEsdGhpcy51bmNvcmsoKSksbi5lbmRpbmd8fG4uZmluaXNoZWR8fGZ1bmN0aW9uKHQsZSxyKXtlLmVuZGluZz0hMCxlcih0LGUpLHImJihlLmZpbmlzaGVkP0EubmV4dFRpY2socik6dC5vbmNlKCJmaW5pc2giLHIpKTtlLmVuZGVkPSEwLHQud3JpdGFibGU9ITF9KHRoaXMsbixyKX0sT2JqZWN0LmRlZmluZVByb3BlcnR5KFZlLnByb3RvdHlwZSwiZGVzdHJveWVkIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHZvaWQgMCE9PXRoaXMuX3dyaXRhYmxlU3RhdGUmJnRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkfSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5fd3JpdGFibGVTdGF0ZSYmKHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVzdHJveWVkPXQpfX0pLFZlLnByb3RvdHlwZS5kZXN0cm95PUJlLFZlLnByb3RvdHlwZS5fdW5kZXN0cm95PVBlLFZlLnByb3RvdHlwZS5fZGVzdHJveT1mdW5jdGlvbih0LGUpe3RoaXMuZW5kKCksZSh0KX07dmFyIHJyPU9iamVjdC5rZXlzfHxmdW5jdGlvbih0KXt2YXIgZT1bXTtmb3IodmFyIHIgaW4gdCllLnB1c2gocik7cmV0dXJuIGV9LG5yPXVyLGlyPU9iamVjdC5jcmVhdGUoSnQpO2lyLmluaGVyaXRzPUd0LGlyLmluaGVyaXRzKHVyLFJyKTtmb3IodmFyIG9yPXJyKERlLnByb3RvdHlwZSksYXI9MDthcjxvci5sZW5ndGg7YXIrKyl7dmFyIHNyPW9yW2FyXTt1ci5wcm90b3R5cGVbc3JdfHwodXIucHJvdG90eXBlW3NyXT1EZS5wcm90b3R5cGVbc3JdKX1mdW5jdGlvbiB1cih0KXtpZighKHRoaXMgaW5zdGFuY2VvZiB1cikpcmV0dXJuIG5ldyB1cih0KTtSci5jYWxsKHRoaXMsdCksRGUuY2FsbCh0aGlzLHQpLHQmJiExPT09dC5yZWFkYWJsZSYmKHRoaXMucmVhZGFibGU9ITEpLHQmJiExPT09dC53cml0YWJsZSYmKHRoaXMud3JpdGFibGU9ITEpLHRoaXMuYWxsb3dIYWxmT3Blbj0hMCx0JiYhMT09PXQuYWxsb3dIYWxmT3BlbiYmKHRoaXMuYWxsb3dIYWxmT3Blbj0hMSksdGhpcy5vbmNlKCJlbmQiLGZyKX1mdW5jdGlvbiBmcigpe3RoaXMuYWxsb3dIYWxmT3Blbnx8dGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZHx8QS5uZXh0VGljayhocix0aGlzKX1mdW5jdGlvbiBocih0KXt0LmVuZCgpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eSh1ci5wcm90b3R5cGUsIndyaXRhYmxlSGlnaFdhdGVyTWFyayIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkodXIucHJvdG90eXBlLCJkZXN0cm95ZWQiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdm9pZCAwIT09dGhpcy5fcmVhZGFibGVTdGF0ZSYmdm9pZCAwIT09dGhpcy5fd3JpdGFibGVTdGF0ZSYmKHRoaXMuX3JlYWRhYmxlU3RhdGUuZGVzdHJveWVkJiZ0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZCl9LHNldDpmdW5jdGlvbih0KXt2b2lkIDAhPT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ2b2lkIDAhPT10aGlzLl93cml0YWJsZVN0YXRlJiYodGhpcy5fcmVhZGFibGVTdGF0ZS5kZXN0cm95ZWQ9dCx0aGlzLl93cml0YWJsZVN0YXRlLmRlc3Ryb3llZD10KX19KSx1ci5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt0aGlzLnB1c2gobnVsbCksdGhpcy5lbmQoKSxBLm5leHRUaWNrKGUsdCl9O3ZhciBscj0kdC5CdWZmZXIsY3I9bHIuaXNFbmNvZGluZ3x8ZnVuY3Rpb24odCl7c3dpdGNoKCh0PSIiK3QpJiZ0LnRvTG93ZXJDYXNlKCkpe2Nhc2UiaGV4IjpjYXNlInV0ZjgiOmNhc2UidXRmLTgiOmNhc2UiYXNjaWkiOmNhc2UiYmluYXJ5IjpjYXNlImJhc2U2NCI6Y2FzZSJ1Y3MyIjpjYXNlInVjcy0yIjpjYXNlInV0ZjE2bGUiOmNhc2UidXRmLTE2bGUiOmNhc2UicmF3IjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX07dmFyIGRyPXByO2Z1bmN0aW9uIHByKHQpe3ZhciBlO3N3aXRjaCh0aGlzLmVuY29kaW5nPWZ1bmN0aW9uKHQpe3ZhciBlPWZ1bmN0aW9uKHQpe2lmKCF0KXJldHVybiJ1dGY4Ijtmb3IodmFyIGU7Oylzd2l0Y2godCl7Y2FzZSJ1dGY4IjpjYXNlInV0Zi04IjpyZXR1cm4idXRmOCI7Y2FzZSJ1Y3MyIjpjYXNlInVjcy0yIjpjYXNlInV0ZjE2bGUiOmNhc2UidXRmLTE2bGUiOnJldHVybiJ1dGYxNmxlIjtjYXNlImxhdGluMSI6Y2FzZSJiaW5hcnkiOnJldHVybiJsYXRpbjEiO2Nhc2UiYmFzZTY0IjpjYXNlImFzY2lpIjpjYXNlImhleCI6cmV0dXJuIHQ7ZGVmYXVsdDppZihlKXJldHVybjt0PSgiIit0KS50b0xvd2VyQ2FzZSgpLGU9ITB9fSh0KTtpZigic3RyaW5nIiE9dHlwZW9mIGUmJihsci5pc0VuY29kaW5nPT09Y3J8fCFjcih0KSkpdGhyb3cgbmV3IEVycm9yKCJVbmtub3duIGVuY29kaW5nOiAiK3QpO3JldHVybiBlfHx0fSh0KSx0aGlzLmVuY29kaW5nKXtjYXNlInV0ZjE2bGUiOnRoaXMudGV4dD1icix0aGlzLmVuZD12cixlPTQ7YnJlYWs7Y2FzZSJ1dGY4Ijp0aGlzLmZpbGxMYXN0PXlyLGU9NDticmVhaztjYXNlImJhc2U2NCI6dGhpcy50ZXh0PXdyLHRoaXMuZW5kPW1yLGU9MzticmVhaztkZWZhdWx0OnJldHVybiB0aGlzLndyaXRlPV9yLHZvaWQodGhpcy5lbmQ9U3IpfXRoaXMubGFzdE5lZWQ9MCx0aGlzLmxhc3RUb3RhbD0wLHRoaXMubGFzdENoYXI9bHIuYWxsb2NVbnNhZmUoZSl9ZnVuY3Rpb24gZ3IodCl7cmV0dXJuIHQ8PTEyNz8wOnQ+PjU9PTY/Mjp0Pj40PT0xND8zOnQ+PjM9PTMwPzQ6dD4+Nj09Mj8tMTotMn1mdW5jdGlvbiB5cih0KXt2YXIgZT10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkLHI9ZnVuY3Rpb24odCxlLHIpe2lmKDEyOCE9KDE5MiZlWzBdKSlyZXR1cm4gdC5sYXN0TmVlZD0wLCLvv70iO2lmKHQubGFzdE5lZWQ+MSYmZS5sZW5ndGg+MSl7aWYoMTI4IT0oMTkyJmVbMV0pKXJldHVybiB0Lmxhc3ROZWVkPTEsIu+/vSI7aWYodC5sYXN0TmVlZD4yJiZlLmxlbmd0aD4yJiYxMjghPSgxOTImZVsyXSkpcmV0dXJuIHQubGFzdE5lZWQ9Miwi77+9In19KHRoaXMsdCk7cmV0dXJuIHZvaWQgMCE9PXI/cjp0aGlzLmxhc3ROZWVkPD10Lmxlbmd0aD8odC5jb3B5KHRoaXMubGFzdENoYXIsZSwwLHRoaXMubGFzdE5lZWQpLHRoaXMubGFzdENoYXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywwLHRoaXMubGFzdFRvdGFsKSk6KHQuY29weSh0aGlzLmxhc3RDaGFyLGUsMCx0Lmxlbmd0aCksdm9pZCh0aGlzLmxhc3ROZWVkLT10Lmxlbmd0aCkpfWZ1bmN0aW9uIGJyKHQsZSl7aWYoKHQubGVuZ3RoLWUpJTI9PTApe3ZhciByPXQudG9TdHJpbmcoInV0ZjE2bGUiLGUpO2lmKHIpe3ZhciBuPXIuY2hhckNvZGVBdChyLmxlbmd0aC0xKTtpZihuPj01NTI5NiYmbjw9NTYzMTkpcmV0dXJuIHRoaXMubGFzdE5lZWQ9Mix0aGlzLmxhc3RUb3RhbD00LHRoaXMubGFzdENoYXJbMF09dFt0Lmxlbmd0aC0yXSx0aGlzLmxhc3RDaGFyWzFdPXRbdC5sZW5ndGgtMV0sci5zbGljZSgwLC0xKX1yZXR1cm4gcn1yZXR1cm4gdGhpcy5sYXN0TmVlZD0xLHRoaXMubGFzdFRvdGFsPTIsdGhpcy5sYXN0Q2hhclswXT10W3QubGVuZ3RoLTFdLHQudG9TdHJpbmcoInV0ZjE2bGUiLGUsdC5sZW5ndGgtMSl9ZnVuY3Rpb24gdnIodCl7dmFyIGU9dCYmdC5sZW5ndGg/dGhpcy53cml0ZSh0KToiIjtpZih0aGlzLmxhc3ROZWVkKXt2YXIgcj10aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkO3JldHVybiBlK3RoaXMubGFzdENoYXIudG9TdHJpbmcoInV0ZjE2bGUiLDAscil9cmV0dXJuIGV9ZnVuY3Rpb24gd3IodCxlKXt2YXIgcj0odC5sZW5ndGgtZSklMztyZXR1cm4gMD09PXI/dC50b1N0cmluZygiYmFzZTY0IixlKToodGhpcy5sYXN0TmVlZD0zLXIsdGhpcy5sYXN0VG90YWw9MywxPT09cj90aGlzLmxhc3RDaGFyWzBdPXRbdC5sZW5ndGgtMV06KHRoaXMubGFzdENoYXJbMF09dFt0Lmxlbmd0aC0yXSx0aGlzLmxhc3RDaGFyWzFdPXRbdC5sZW5ndGgtMV0pLHQudG9TdHJpbmcoImJhc2U2NCIsZSx0Lmxlbmd0aC1yKSl9ZnVuY3Rpb24gbXIodCl7dmFyIGU9dCYmdC5sZW5ndGg/dGhpcy53cml0ZSh0KToiIjtyZXR1cm4gdGhpcy5sYXN0TmVlZD9lK3RoaXMubGFzdENoYXIudG9TdHJpbmcoImJhc2U2NCIsMCwzLXRoaXMubGFzdE5lZWQpOmV9ZnVuY3Rpb24gX3IodCl7cmV0dXJuIHQudG9TdHJpbmcodGhpcy5lbmNvZGluZyl9ZnVuY3Rpb24gU3IodCl7cmV0dXJuIHQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6IiJ9cHIucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2lmKDA9PT10Lmxlbmd0aClyZXR1cm4iIjt2YXIgZSxyO2lmKHRoaXMubGFzdE5lZWQpe2lmKHZvaWQgMD09PShlPXRoaXMuZmlsbExhc3QodCkpKXJldHVybiIiO3I9dGhpcy5sYXN0TmVlZCx0aGlzLmxhc3ROZWVkPTB9ZWxzZSByPTA7cmV0dXJuIHI8dC5sZW5ndGg/ZT9lK3RoaXMudGV4dCh0LHIpOnRoaXMudGV4dCh0LHIpOmV8fCIifSxwci5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHQpe3ZhciBlPXQmJnQubGVuZ3RoP3RoaXMud3JpdGUodCk6IiI7cmV0dXJuIHRoaXMubGFzdE5lZWQ/ZSsi77+9IjplfSxwci5wcm90b3R5cGUudGV4dD1mdW5jdGlvbih0LGUpe3ZhciByPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj1lLmxlbmd0aC0xO2lmKG48cilyZXR1cm4gMDt2YXIgaT1ncihlW25dKTtpZihpPj0wKXJldHVybiBpPjAmJih0Lmxhc3ROZWVkPWktMSksaTtpZigtLW48cnx8LTI9PT1pKXJldHVybiAwO2lmKChpPWdyKGVbbl0pKT49MClyZXR1cm4gaT4wJiYodC5sYXN0TmVlZD1pLTIpLGk7aWYoLS1uPHJ8fC0yPT09aSlyZXR1cm4gMDtpZigoaT1ncihlW25dKSk+PTApcmV0dXJuIGk+MCYmKDI9PT1pP2k9MDp0Lmxhc3ROZWVkPWktMyksaTtyZXR1cm4gMH0odGhpcyx0LGUpO2lmKCF0aGlzLmxhc3ROZWVkKXJldHVybiB0LnRvU3RyaW5nKCJ1dGY4IixlKTt0aGlzLmxhc3RUb3RhbD1yO3ZhciBuPXQubGVuZ3RoLShyLXRoaXMubGFzdE5lZWQpO3JldHVybiB0LmNvcHkodGhpcy5sYXN0Q2hhciwwLG4pLHQudG9TdHJpbmcoInV0ZjgiLGUsbil9LHByLnByb3RvdHlwZS5maWxsTGFzdD1mdW5jdGlvbih0KXtpZih0aGlzLmxhc3ROZWVkPD10Lmxlbmd0aClyZXR1cm4gdC5jb3B5KHRoaXMubGFzdENoYXIsdGhpcy5sYXN0VG90YWwtdGhpcy5sYXN0TmVlZCwwLHRoaXMubGFzdE5lZWQpLHRoaXMubGFzdENoYXIudG9TdHJpbmcodGhpcy5lbmNvZGluZywwLHRoaXMubGFzdFRvdGFsKTt0LmNvcHkodGhpcy5sYXN0Q2hhcix0aGlzLmxhc3RUb3RhbC10aGlzLmxhc3ROZWVkLDAsdC5sZW5ndGgpLHRoaXMubGFzdE5lZWQtPXQubGVuZ3RofTt2YXIgRXIsa3I9e1N0cmluZ0RlY29kZXI6ZHJ9LFJyPUJyO0JyLlJlYWRhYmxlU3RhdGU9THIsWS5FdmVudEVtaXR0ZXI7dmFyIGpyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQubGlzdGVuZXJzKGUpLmxlbmd0aH0sVHI9JHQuQnVmZmVyLE9yPWouVWludDhBcnJheXx8ZnVuY3Rpb24oKXt9O3ZhciBBcj1PYmplY3QuY3JlYXRlKEp0KTtBci5pbmhlcml0cz1HdDt2YXIgQ3IsTXI9dm9pZCAwO01yPU1lJiZNZS5kZWJ1Z2xvZz9NZS5kZWJ1Z2xvZygic3RyZWFtIik6ZnVuY3Rpb24oKXt9LEFyLmluaGVyaXRzKEJyLCQpO3ZhciB4cj1bImVycm9yIiwiY2xvc2UiLCJkZXN0cm95IiwicGF1c2UiLCJyZXN1bWUiXTtmdW5jdGlvbiBMcih0LGUpe3Q9dHx8e307dmFyIHI9ZSBpbnN0YW5jZW9mKEVyPUVyfHxucik7dGhpcy5vYmplY3RNb2RlPSEhdC5vYmplY3RNb2RlLHImJih0aGlzLm9iamVjdE1vZGU9dGhpcy5vYmplY3RNb2RlfHwhIXQucmVhZGFibGVPYmplY3RNb2RlKTt2YXIgbj10LmhpZ2hXYXRlck1hcmssaT10LnJlYWRhYmxlSGlnaFdhdGVyTWFyayxvPXRoaXMub2JqZWN0TW9kZT8xNjoxNjM4NDt0aGlzLmhpZ2hXYXRlck1hcms9bnx8MD09PW4/bjpyJiYoaXx8MD09PWkpP2k6byx0aGlzLmhpZ2hXYXRlck1hcms9TWF0aC5mbG9vcih0aGlzLmhpZ2hXYXRlck1hcmspLHRoaXMuYnVmZmVyPW5ldyB4ZSx0aGlzLmxlbmd0aD0wLHRoaXMucGlwZXM9bnVsbCx0aGlzLnBpcGVzQ291bnQ9MCx0aGlzLmZsb3dpbmc9bnVsbCx0aGlzLmVuZGVkPSExLHRoaXMuZW5kRW1pdHRlZD0hMSx0aGlzLnJlYWRpbmc9ITEsdGhpcy5zeW5jPSEwLHRoaXMubmVlZFJlYWRhYmxlPSExLHRoaXMuZW1pdHRlZFJlYWRhYmxlPSExLHRoaXMucmVhZGFibGVMaXN0ZW5pbmc9ITEsdGhpcy5yZXN1bWVTY2hlZHVsZWQ9ITEsdGhpcy5kZXN0cm95ZWQ9ITEsdGhpcy5kZWZhdWx0RW5jb2Rpbmc9dC5kZWZhdWx0RW5jb2Rpbmd8fCJ1dGY4Iix0aGlzLmF3YWl0RHJhaW49MCx0aGlzLnJlYWRpbmdNb3JlPSExLHRoaXMuZGVjb2Rlcj1udWxsLHRoaXMuZW5jb2Rpbmc9bnVsbCx0LmVuY29kaW5nJiYoQ3J8fChDcj1rci5TdHJpbmdEZWNvZGVyKSx0aGlzLmRlY29kZXI9bmV3IENyKHQuZW5jb2RpbmcpLHRoaXMuZW5jb2Rpbmc9dC5lbmNvZGluZyl9ZnVuY3Rpb24gQnIodCl7aWYoRXI9RXJ8fG5yLCEodGhpcyBpbnN0YW5jZW9mIEJyKSlyZXR1cm4gbmV3IEJyKHQpO3RoaXMuX3JlYWRhYmxlU3RhdGU9bmV3IExyKHQsdGhpcyksdGhpcy5yZWFkYWJsZT0hMCx0JiYoImZ1bmN0aW9uIj09dHlwZW9mIHQucmVhZCYmKHRoaXMuX3JlYWQ9dC5yZWFkKSwiZnVuY3Rpb24iPT10eXBlb2YgdC5kZXN0cm95JiYodGhpcy5fZGVzdHJveT10LmRlc3Ryb3kpKSwkLmNhbGwodGhpcyl9ZnVuY3Rpb24gUHIodCxlLHIsbixpKXt2YXIgbyxhPXQuX3JlYWRhYmxlU3RhdGU7bnVsbD09PWU/KGEucmVhZGluZz0hMSxmdW5jdGlvbih0LGUpe2lmKGUuZW5kZWQpcmV0dXJuO2lmKGUuZGVjb2Rlcil7dmFyIHI9ZS5kZWNvZGVyLmVuZCgpO3ImJnIubGVuZ3RoJiYoZS5idWZmZXIucHVzaChyKSxlLmxlbmd0aCs9ZS5vYmplY3RNb2RlPzE6ci5sZW5ndGgpfWUuZW5kZWQ9ITAsRHIodCl9KHQsYSkpOihpfHwobz1mdW5jdGlvbih0LGUpe3ZhciByOyhmdW5jdGlvbih0KXtyZXR1cm4gVHIuaXNCdWZmZXIodCl8fHQgaW5zdGFuY2VvZiBPcn0pKGUpfHwic3RyaW5nIj09dHlwZW9mIGV8fHZvaWQgMD09PWV8fHQub2JqZWN0TW9kZXx8KHI9bmV3IFR5cGVFcnJvcigiSW52YWxpZCBub24tc3RyaW5nL2J1ZmZlciBjaHVuayIpKTtyZXR1cm4gcn0oYSxlKSksbz90LmVtaXQoImVycm9yIixvKTphLm9iamVjdE1vZGV8fGUmJmUubGVuZ3RoPjA/KCJzdHJpbmciPT10eXBlb2YgZXx8YS5vYmplY3RNb2RlfHxPYmplY3QuZ2V0UHJvdG90eXBlT2YoZSk9PT1Uci5wcm90b3R5cGV8fChlPWZ1bmN0aW9uKHQpe3JldHVybiBUci5mcm9tKHQpfShlKSksbj9hLmVuZEVtaXR0ZWQ/dC5lbWl0KCJlcnJvciIsbmV3IEVycm9yKCJzdHJlYW0udW5zaGlmdCgpIGFmdGVyIGVuZCBldmVudCIpKTpVcih0LGEsZSwhMCk6YS5lbmRlZD90LmVtaXQoImVycm9yIixuZXcgRXJyb3IoInN0cmVhbS5wdXNoKCkgYWZ0ZXIgRU9GIikpOihhLnJlYWRpbmc9ITEsYS5kZWNvZGVyJiYhcj8oZT1hLmRlY29kZXIud3JpdGUoZSksYS5vYmplY3RNb2RlfHwwIT09ZS5sZW5ndGg/VXIodCxhLGUsITEpOnFyKHQsYSkpOlVyKHQsYSxlLCExKSkpOm58fChhLnJlYWRpbmc9ITEpKTtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuIXQuZW5kZWQmJih0Lm5lZWRSZWFkYWJsZXx8dC5sZW5ndGg8dC5oaWdoV2F0ZXJNYXJrfHwwPT09dC5sZW5ndGgpfShhKX1mdW5jdGlvbiBVcih0LGUscixuKXtlLmZsb3dpbmcmJjA9PT1lLmxlbmd0aCYmIWUuc3luYz8odC5lbWl0KCJkYXRhIixyKSx0LnJlYWQoMCkpOihlLmxlbmd0aCs9ZS5vYmplY3RNb2RlPzE6ci5sZW5ndGgsbj9lLmJ1ZmZlci51bnNoaWZ0KHIpOmUuYnVmZmVyLnB1c2gociksZS5uZWVkUmVhZGFibGUmJkRyKHQpKSxxcih0LGUpfU9iamVjdC5kZWZpbmVQcm9wZXJ0eShCci5wcm90b3R5cGUsImRlc3Ryb3llZCIse2dldDpmdW5jdGlvbigpe3JldHVybiB2b2lkIDAhPT10aGlzLl9yZWFkYWJsZVN0YXRlJiZ0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZH0sc2V0OmZ1bmN0aW9uKHQpe3RoaXMuX3JlYWRhYmxlU3RhdGUmJih0aGlzLl9yZWFkYWJsZVN0YXRlLmRlc3Ryb3llZD10KX19KSxCci5wcm90b3R5cGUuZGVzdHJveT1CZSxCci5wcm90b3R5cGUuX3VuZGVzdHJveT1QZSxCci5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt0aGlzLnB1c2gobnVsbCksZSh0KX0sQnIucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCxlKXt2YXIgcixuPXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuIG4ub2JqZWN0TW9kZT9yPSEwOiJzdHJpbmciPT10eXBlb2YgdCYmKChlPWV8fG4uZGVmYXVsdEVuY29kaW5nKSE9PW4uZW5jb2RpbmcmJih0PVRyLmZyb20odCxlKSxlPSIiKSxyPSEwKSxQcih0aGlzLHQsZSwhMSxyKX0sQnIucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24odCl7cmV0dXJuIFByKHRoaXMsdCxudWxsLCEwLCExKX0sQnIucHJvdG90eXBlLmlzUGF1c2VkPWZ1bmN0aW9uKCl7cmV0dXJuITE9PT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmd9LEJyLnByb3RvdHlwZS5zZXRFbmNvZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gQ3J8fChDcj1rci5TdHJpbmdEZWNvZGVyKSx0aGlzLl9yZWFkYWJsZVN0YXRlLmRlY29kZXI9bmV3IENyKHQpLHRoaXMuX3JlYWRhYmxlU3RhdGUuZW5jb2Rpbmc9dCx0aGlzfTtmdW5jdGlvbiBOcih0LGUpe3JldHVybiB0PD0wfHwwPT09ZS5sZW5ndGgmJmUuZW5kZWQ/MDplLm9iamVjdE1vZGU/MTp0IT10P2UuZmxvd2luZyYmZS5sZW5ndGg/ZS5idWZmZXIuaGVhZC5kYXRhLmxlbmd0aDplLmxlbmd0aDoodD5lLmhpZ2hXYXRlck1hcmsmJihlLmhpZ2hXYXRlck1hcms9ZnVuY3Rpb24odCl7cmV0dXJuIHQ+PTgzODg2MDg/dD04Mzg4NjA4Oih0LS0sdHw9dD4+PjEsdHw9dD4+PjIsdHw9dD4+PjQsdHw9dD4+PjgsdHw9dD4+PjE2LHQrKyksdH0odCkpLHQ8PWUubGVuZ3RoP3Q6ZS5lbmRlZD9lLmxlbmd0aDooZS5uZWVkUmVhZGFibGU9ITAsMCkpfWZ1bmN0aW9uIERyKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7ZS5uZWVkUmVhZGFibGU9ITEsZS5lbWl0dGVkUmVhZGFibGV8fChNcigiZW1pdFJlYWRhYmxlIixlLmZsb3dpbmcpLGUuZW1pdHRlZFJlYWRhYmxlPSEwLGUuc3luYz9BLm5leHRUaWNrKElyLHQpOklyKHQpKX1mdW5jdGlvbiBJcih0KXtNcigiZW1pdCByZWFkYWJsZSIpLHQuZW1pdCgicmVhZGFibGUiKSxZcih0KX1mdW5jdGlvbiBxcih0LGUpe2UucmVhZGluZ01vcmV8fChlLnJlYWRpbmdNb3JlPSEwLEEubmV4dFRpY2soRnIsdCxlKSl9ZnVuY3Rpb24gRnIodCxlKXtmb3IodmFyIHI9ZS5sZW5ndGg7IWUucmVhZGluZyYmIWUuZmxvd2luZyYmIWUuZW5kZWQmJmUubGVuZ3RoPGUuaGlnaFdhdGVyTWFyayYmKE1yKCJtYXliZVJlYWRNb3JlIHJlYWQgMCIpLHQucmVhZCgwKSxyIT09ZS5sZW5ndGgpOylyPWUubGVuZ3RoO2UucmVhZGluZ01vcmU9ITF9ZnVuY3Rpb24gV3IodCl7TXIoInJlYWRhYmxlIG5leHR0aWNrIHJlYWQgMCIpLHQucmVhZCgwKX1mdW5jdGlvbiB6cih0LGUpe2UucmVhZGluZ3x8KE1yKCJyZXN1bWUgcmVhZCAwIiksdC5yZWFkKDApKSxlLnJlc3VtZVNjaGVkdWxlZD0hMSxlLmF3YWl0RHJhaW49MCx0LmVtaXQoInJlc3VtZSIpLFlyKHQpLGUuZmxvd2luZyYmIWUucmVhZGluZyYmdC5yZWFkKDApfWZ1bmN0aW9uIFlyKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7Zm9yKE1yKCJmbG93IixlLmZsb3dpbmcpO2UuZmxvd2luZyYmbnVsbCE9PXQucmVhZCgpOyk7fWZ1bmN0aW9uICRyKHQsZSl7cmV0dXJuIDA9PT1lLmxlbmd0aD9udWxsOihlLm9iamVjdE1vZGU/cj1lLmJ1ZmZlci5zaGlmdCgpOiF0fHx0Pj1lLmxlbmd0aD8ocj1lLmRlY29kZXI/ZS5idWZmZXIuam9pbigiIik6MT09PWUuYnVmZmVyLmxlbmd0aD9lLmJ1ZmZlci5oZWFkLmRhdGE6ZS5idWZmZXIuY29uY2F0KGUubGVuZ3RoKSxlLmJ1ZmZlci5jbGVhcigpKTpyPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbjt0PGUuaGVhZC5kYXRhLmxlbmd0aD8obj1lLmhlYWQuZGF0YS5zbGljZSgwLHQpLGUuaGVhZC5kYXRhPWUuaGVhZC5kYXRhLnNsaWNlKHQpKTpuPXQ9PT1lLmhlYWQuZGF0YS5sZW5ndGg/ZS5zaGlmdCgpOnI/ZnVuY3Rpb24odCxlKXt2YXIgcj1lLmhlYWQsbj0xLGk9ci5kYXRhO3QtPWkubGVuZ3RoO2Zvcig7cj1yLm5leHQ7KXt2YXIgbz1yLmRhdGEsYT10Pm8ubGVuZ3RoP28ubGVuZ3RoOnQ7aWYoYT09PW8ubGVuZ3RoP2krPW86aSs9by5zbGljZSgwLHQpLDA9PT0odC09YSkpe2E9PT1vLmxlbmd0aD8oKytuLHIubmV4dD9lLmhlYWQ9ci5uZXh0OmUuaGVhZD1lLnRhaWw9bnVsbCk6KGUuaGVhZD1yLHIuZGF0YT1vLnNsaWNlKGEpKTticmVha30rK259cmV0dXJuIGUubGVuZ3RoLT1uLGl9KHQsZSk6ZnVuY3Rpb24odCxlKXt2YXIgcj1Uci5hbGxvY1Vuc2FmZSh0KSxuPWUuaGVhZCxpPTE7bi5kYXRhLmNvcHkociksdC09bi5kYXRhLmxlbmd0aDtmb3IoO249bi5uZXh0Oyl7dmFyIG89bi5kYXRhLGE9dD5vLmxlbmd0aD9vLmxlbmd0aDp0O2lmKG8uY29weShyLHIubGVuZ3RoLXQsMCxhKSwwPT09KHQtPWEpKXthPT09by5sZW5ndGg/KCsraSxuLm5leHQ/ZS5oZWFkPW4ubmV4dDplLmhlYWQ9ZS50YWlsPW51bGwpOihlLmhlYWQ9bixuLmRhdGE9by5zbGljZShhKSk7YnJlYWt9KytpfXJldHVybiBlLmxlbmd0aC09aSxyfSh0LGUpO3JldHVybiBufSh0LGUuYnVmZmVyLGUuZGVjb2Rlcikscik7dmFyIHJ9ZnVuY3Rpb24gSHIodCl7dmFyIGU9dC5fcmVhZGFibGVTdGF0ZTtpZihlLmxlbmd0aD4wKXRocm93IG5ldyBFcnJvcignImVuZFJlYWRhYmxlKCkiIGNhbGxlZCBvbiBub24tZW1wdHkgc3RyZWFtJyk7ZS5lbmRFbWl0dGVkfHwoZS5lbmRlZD0hMCxBLm5leHRUaWNrKEpyLGUsdCkpfWZ1bmN0aW9uIEpyKHQsZSl7dC5lbmRFbWl0dGVkfHwwIT09dC5sZW5ndGh8fCh0LmVuZEVtaXR0ZWQ9ITAsZS5yZWFkYWJsZT0hMSxlLmVtaXQoImVuZCIpKX1mdW5jdGlvbiBHcih0LGUpe2Zvcih2YXIgcj0wLG49dC5sZW5ndGg7cjxuO3IrKylpZih0W3JdPT09ZSlyZXR1cm4gcjtyZXR1cm4tMX1Cci5wcm90b3R5cGUucmVhZD1mdW5jdGlvbih0KXtNcigicmVhZCIsdCksdD1wYXJzZUludCh0LDEwKTt2YXIgZT10aGlzLl9yZWFkYWJsZVN0YXRlLHI9dDtpZigwIT09dCYmKGUuZW1pdHRlZFJlYWRhYmxlPSExKSwwPT09dCYmZS5uZWVkUmVhZGFibGUmJihlLmxlbmd0aD49ZS5oaWdoV2F0ZXJNYXJrfHxlLmVuZGVkKSlyZXR1cm4gTXIoInJlYWQ6IGVtaXRSZWFkYWJsZSIsZS5sZW5ndGgsZS5lbmRlZCksMD09PWUubGVuZ3RoJiZlLmVuZGVkP0hyKHRoaXMpOkRyKHRoaXMpLG51bGw7aWYoMD09PSh0PU5yKHQsZSkpJiZlLmVuZGVkKXJldHVybiAwPT09ZS5sZW5ndGgmJkhyKHRoaXMpLG51bGw7dmFyIG4saT1lLm5lZWRSZWFkYWJsZTtyZXR1cm4gTXIoIm5lZWQgcmVhZGFibGUiLGkpLCgwPT09ZS5sZW5ndGh8fGUubGVuZ3RoLXQ8ZS5oaWdoV2F0ZXJNYXJrKSYmTXIoImxlbmd0aCBsZXNzIHRoYW4gd2F0ZXJtYXJrIixpPSEwKSxlLmVuZGVkfHxlLnJlYWRpbmc/TXIoInJlYWRpbmcgb3IgZW5kZWQiLGk9ITEpOmkmJihNcigiZG8gcmVhZCIpLGUucmVhZGluZz0hMCxlLnN5bmM9ITAsMD09PWUubGVuZ3RoJiYoZS5uZWVkUmVhZGFibGU9ITApLHRoaXMuX3JlYWQoZS5oaWdoV2F0ZXJNYXJrKSxlLnN5bmM9ITEsZS5yZWFkaW5nfHwodD1OcihyLGUpKSksbnVsbD09PShuPXQ+MD8kcih0LGUpOm51bGwpPyhlLm5lZWRSZWFkYWJsZT0hMCx0PTApOmUubGVuZ3RoLT10LDA9PT1lLmxlbmd0aCYmKGUuZW5kZWR8fChlLm5lZWRSZWFkYWJsZT0hMCksciE9PXQmJmUuZW5kZWQmJkhyKHRoaXMpKSxudWxsIT09biYmdGhpcy5lbWl0KCJkYXRhIixuKSxufSxCci5wcm90b3R5cGUuX3JlYWQ9ZnVuY3Rpb24odCl7dGhpcy5lbWl0KCJlcnJvciIsbmV3IEVycm9yKCJfcmVhZCgpIGlzIG5vdCBpbXBsZW1lbnRlZCIpKX0sQnIucHJvdG90eXBlLnBpcGU9ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzLG49dGhpcy5fcmVhZGFibGVTdGF0ZTtzd2l0Y2gobi5waXBlc0NvdW50KXtjYXNlIDA6bi5waXBlcz10O2JyZWFrO2Nhc2UgMTpuLnBpcGVzPVtuLnBpcGVzLHRdO2JyZWFrO2RlZmF1bHQ6bi5waXBlcy5wdXNoKHQpfW4ucGlwZXNDb3VudCs9MSxNcigicGlwZSBjb3VudD0lZCBvcHRzPSVqIixuLnBpcGVzQ291bnQsZSk7dmFyIGk9KCFlfHwhMSE9PWUuZW5kKSYmdCE9PVIuc3Rkb3V0JiZ0IT09Ui5zdGRlcnI/YTpwO2Z1bmN0aW9uIG8oZSxpKXtNcigib251bnBpcGUiKSxlPT09ciYmaSYmITE9PT1pLmhhc1VucGlwZWQmJihpLmhhc1VucGlwZWQ9ITAsTXIoImNsZWFudXAiKSx0LnJlbW92ZUxpc3RlbmVyKCJjbG9zZSIsYyksdC5yZW1vdmVMaXN0ZW5lcigiZmluaXNoIixkKSx0LnJlbW92ZUxpc3RlbmVyKCJkcmFpbiIscyksdC5yZW1vdmVMaXN0ZW5lcigiZXJyb3IiLGwpLHQucmVtb3ZlTGlzdGVuZXIoInVucGlwZSIsbyksci5yZW1vdmVMaXN0ZW5lcigiZW5kIixhKSxyLnJlbW92ZUxpc3RlbmVyKCJlbmQiLHApLHIucmVtb3ZlTGlzdGVuZXIoImRhdGEiLGgpLHU9ITAsIW4uYXdhaXREcmFpbnx8dC5fd3JpdGFibGVTdGF0ZSYmIXQuX3dyaXRhYmxlU3RhdGUubmVlZERyYWlufHxzKCkpfWZ1bmN0aW9uIGEoKXtNcigib25lbmQiKSx0LmVuZCgpfW4uZW5kRW1pdHRlZD9BLm5leHRUaWNrKGkpOnIub25jZSgiZW5kIixpKSx0Lm9uKCJ1bnBpcGUiLG8pO3ZhciBzPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbigpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7TXIoInBpcGVPbkRyYWluIixlLmF3YWl0RHJhaW4pLGUuYXdhaXREcmFpbiYmZS5hd2FpdERyYWluLS0sMD09PWUuYXdhaXREcmFpbiYmanIodCwiZGF0YSIpJiYoZS5mbG93aW5nPSEwLFlyKHQpKX19KHIpO3Qub24oImRyYWluIixzKTt2YXIgdT0hMTt2YXIgZj0hMTtmdW5jdGlvbiBoKGUpe01yKCJvbmRhdGEiKSxmPSExLCExIT09dC53cml0ZShlKXx8Znx8KCgxPT09bi5waXBlc0NvdW50JiZuLnBpcGVzPT09dHx8bi5waXBlc0NvdW50PjEmJi0xIT09R3Iobi5waXBlcyx0KSkmJiF1JiYoTXIoImZhbHNlIHdyaXRlIHJlc3BvbnNlLCBwYXVzZSIsci5fcmVhZGFibGVTdGF0ZS5hd2FpdERyYWluKSxyLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4rKyxmPSEwKSxyLnBhdXNlKCkpfWZ1bmN0aW9uIGwoZSl7TXIoIm9uZXJyb3IiLGUpLHAoKSx0LnJlbW92ZUxpc3RlbmVyKCJlcnJvciIsbCksMD09PWpyKHQsImVycm9yIikmJnQuZW1pdCgiZXJyb3IiLGUpfWZ1bmN0aW9uIGMoKXt0LnJlbW92ZUxpc3RlbmVyKCJmaW5pc2giLGQpLHAoKX1mdW5jdGlvbiBkKCl7TXIoIm9uZmluaXNoIiksdC5yZW1vdmVMaXN0ZW5lcigiY2xvc2UiLGMpLHAoKX1mdW5jdGlvbiBwKCl7TXIoInVucGlwZSIpLHIudW5waXBlKHQpfXJldHVybiByLm9uKCJkYXRhIixoKSxmdW5jdGlvbih0LGUscil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIHQucHJlcGVuZExpc3RlbmVyKXJldHVybiB0LnByZXBlbmRMaXN0ZW5lcihlLHIpO3QuX2V2ZW50cyYmdC5fZXZlbnRzW2VdP00odC5fZXZlbnRzW2VdKT90Ll9ldmVudHNbZV0udW5zaGlmdChyKTp0Ll9ldmVudHNbZV09W3IsdC5fZXZlbnRzW2VdXTp0Lm9uKGUscil9KHQsImVycm9yIixsKSx0Lm9uY2UoImNsb3NlIixjKSx0Lm9uY2UoImZpbmlzaCIsZCksdC5lbWl0KCJwaXBlIixyKSxuLmZsb3dpbmd8fChNcigicGlwZSByZXN1bWUiKSxyLnJlc3VtZSgpKSx0fSxCci5wcm90b3R5cGUudW5waXBlPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3JlYWRhYmxlU3RhdGUscj17aGFzVW5waXBlZDohMX07aWYoMD09PWUucGlwZXNDb3VudClyZXR1cm4gdGhpcztpZigxPT09ZS5waXBlc0NvdW50KXJldHVybiB0JiZ0IT09ZS5waXBlc3x8KHR8fCh0PWUucGlwZXMpLGUucGlwZXM9bnVsbCxlLnBpcGVzQ291bnQ9MCxlLmZsb3dpbmc9ITEsdCYmdC5lbWl0KCJ1bnBpcGUiLHRoaXMscikpLHRoaXM7aWYoIXQpe3ZhciBuPWUucGlwZXMsaT1lLnBpcGVzQ291bnQ7ZS5waXBlcz1udWxsLGUucGlwZXNDb3VudD0wLGUuZmxvd2luZz0hMTtmb3IodmFyIG89MDtvPGk7bysrKW5bb10uZW1pdCgidW5waXBlIix0aGlzLHIpO3JldHVybiB0aGlzfXZhciBhPUdyKGUucGlwZXMsdCk7cmV0dXJuLTE9PT1hfHwoZS5waXBlcy5zcGxpY2UoYSwxKSxlLnBpcGVzQ291bnQtPTEsMT09PWUucGlwZXNDb3VudCYmKGUucGlwZXM9ZS5waXBlc1swXSksdC5lbWl0KCJ1bnBpcGUiLHRoaXMscikpLHRoaXN9LEJyLnByb3RvdHlwZS5vbj1mdW5jdGlvbih0LGUpe3ZhciByPSQucHJvdG90eXBlLm9uLmNhbGwodGhpcyx0LGUpO2lmKCJkYXRhIj09PXQpITEhPT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcmJnRoaXMucmVzdW1lKCk7ZWxzZSBpZigicmVhZGFibGUiPT09dCl7dmFyIG49dGhpcy5fcmVhZGFibGVTdGF0ZTtuLmVuZEVtaXR0ZWR8fG4ucmVhZGFibGVMaXN0ZW5pbmd8fChuLnJlYWRhYmxlTGlzdGVuaW5nPW4ubmVlZFJlYWRhYmxlPSEwLG4uZW1pdHRlZFJlYWRhYmxlPSExLG4ucmVhZGluZz9uLmxlbmd0aCYmRHIodGhpcyk6QS5uZXh0VGljayhXcix0aGlzKSl9cmV0dXJuIHJ9LEJyLnByb3RvdHlwZS5hZGRMaXN0ZW5lcj1Cci5wcm90b3R5cGUub24sQnIucHJvdG90eXBlLnJlc3VtZT1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX3JlYWRhYmxlU3RhdGU7cmV0dXJuIHQuZmxvd2luZ3x8KE1yKCJyZXN1bWUiKSx0LmZsb3dpbmc9ITAsZnVuY3Rpb24odCxlKXtlLnJlc3VtZVNjaGVkdWxlZHx8KGUucmVzdW1lU2NoZWR1bGVkPSEwLEEubmV4dFRpY2soenIsdCxlKSl9KHRoaXMsdCkpLHRoaXN9LEJyLnByb3RvdHlwZS5wYXVzZT1mdW5jdGlvbigpe3JldHVybiBNcigiY2FsbCBwYXVzZSBmbG93aW5nPSVqIix0aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmcpLCExIT09dGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nJiYoTXIoInBhdXNlIiksdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nPSExLHRoaXMuZW1pdCgicGF1c2UiKSksdGhpc30sQnIucHJvdG90eXBlLndyYXA9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxyPXRoaXMuX3JlYWRhYmxlU3RhdGUsbj0hMTtmb3IodmFyIGkgaW4gdC5vbigiZW5kIiwoZnVuY3Rpb24oKXtpZihNcigid3JhcHBlZCBlbmQiKSxyLmRlY29kZXImJiFyLmVuZGVkKXt2YXIgdD1yLmRlY29kZXIuZW5kKCk7dCYmdC5sZW5ndGgmJmUucHVzaCh0KX1lLnB1c2gobnVsbCl9KSksdC5vbigiZGF0YSIsKGZ1bmN0aW9uKGkpeyhNcigid3JhcHBlZCBkYXRhIiksci5kZWNvZGVyJiYoaT1yLmRlY29kZXIud3JpdGUoaSkpLHIub2JqZWN0TW9kZSYmbnVsbD09aSl8fChyLm9iamVjdE1vZGV8fGkmJmkubGVuZ3RoKSYmKGUucHVzaChpKXx8KG49ITAsdC5wYXVzZSgpKSl9KSksdCl2b2lkIDA9PT10aGlzW2ldJiYiZnVuY3Rpb24iPT10eXBlb2YgdFtpXSYmKHRoaXNbaV09ZnVuY3Rpb24oZSl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRbZV0uYXBwbHkodCxhcmd1bWVudHMpfX0oaSkpO2Zvcih2YXIgbz0wO288eHIubGVuZ3RoO28rKyl0Lm9uKHhyW29dLHRoaXMuZW1pdC5iaW5kKHRoaXMseHJbb10pKTtyZXR1cm4gdGhpcy5fcmVhZD1mdW5jdGlvbihlKXtNcigid3JhcHBlZCBfcmVhZCIsZSksbiYmKG49ITEsdC5yZXN1bWUoKSl9LHRoaXN9LE9iamVjdC5kZWZpbmVQcm9wZXJ0eShCci5wcm90b3R5cGUsInJlYWRhYmxlSGlnaFdhdGVyTWFyayIse2VudW1lcmFibGU6ITEsZ2V0OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3JlYWRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya319KSxCci5fZnJvbUxpc3Q9JHI7dmFyIFZyPVhyLEtyPU9iamVjdC5jcmVhdGUoSnQpO2Z1bmN0aW9uIFpyKHQsZSl7dmFyIHI9dGhpcy5fdHJhbnNmb3JtU3RhdGU7ci50cmFuc2Zvcm1pbmc9ITE7dmFyIG49ci53cml0ZWNiO2lmKCFuKXJldHVybiB0aGlzLmVtaXQoImVycm9yIixuZXcgRXJyb3IoIndyaXRlIGNhbGxiYWNrIGNhbGxlZCBtdWx0aXBsZSB0aW1lcyIpKTtyLndyaXRlY2h1bms9bnVsbCxyLndyaXRlY2I9bnVsbCxudWxsIT1lJiZ0aGlzLnB1c2goZSksbih0KTt2YXIgaT10aGlzLl9yZWFkYWJsZVN0YXRlO2kucmVhZGluZz0hMSwoaS5uZWVkUmVhZGFibGV8fGkubGVuZ3RoPGkuaGlnaFdhdGVyTWFyaykmJnRoaXMuX3JlYWQoaS5oaWdoV2F0ZXJNYXJrKX1mdW5jdGlvbiBYcih0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBYcikpcmV0dXJuIG5ldyBYcih0KTtuci5jYWxsKHRoaXMsdCksdGhpcy5fdHJhbnNmb3JtU3RhdGU9e2FmdGVyVHJhbnNmb3JtOlpyLmJpbmQodGhpcyksbmVlZFRyYW5zZm9ybTohMSx0cmFuc2Zvcm1pbmc6ITEsd3JpdGVjYjpudWxsLHdyaXRlY2h1bms6bnVsbCx3cml0ZWVuY29kaW5nOm51bGx9LHRoaXMuX3JlYWRhYmxlU3RhdGUubmVlZFJlYWRhYmxlPSEwLHRoaXMuX3JlYWRhYmxlU3RhdGUuc3luYz0hMSx0JiYoImZ1bmN0aW9uIj09dHlwZW9mIHQudHJhbnNmb3JtJiYodGhpcy5fdHJhbnNmb3JtPXQudHJhbnNmb3JtKSwiZnVuY3Rpb24iPT10eXBlb2YgdC5mbHVzaCYmKHRoaXMuX2ZsdXNoPXQuZmx1c2gpKSx0aGlzLm9uKCJwcmVmaW5pc2giLFFyKX1mdW5jdGlvbiBRcigpe3ZhciB0PXRoaXM7ImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMuX2ZsdXNoP3RoaXMuX2ZsdXNoKChmdW5jdGlvbihlLHIpe3RuKHQsZSxyKX0pKTp0bih0aGlzLG51bGwsbnVsbCl9ZnVuY3Rpb24gdG4odCxlLHIpe2lmKGUpcmV0dXJuIHQuZW1pdCgiZXJyb3IiLGUpO2lmKG51bGwhPXImJnQucHVzaChyKSx0Ll93cml0YWJsZVN0YXRlLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoIkNhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiB3cy5sZW5ndGggIT0gMCIpO2lmKHQuX3RyYW5zZm9ybVN0YXRlLnRyYW5zZm9ybWluZyl0aHJvdyBuZXcgRXJyb3IoIkNhbGxpbmcgdHJhbnNmb3JtIGRvbmUgd2hlbiBzdGlsbCB0cmFuc2Zvcm1pbmciKTtyZXR1cm4gdC5wdXNoKG51bGwpfUtyLmluaGVyaXRzPUd0LEtyLmluaGVyaXRzKFhyLG5yKSxYci5wcm90b3R5cGUucHVzaD1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLl90cmFuc2Zvcm1TdGF0ZS5uZWVkVHJhbnNmb3JtPSExLG5yLnByb3RvdHlwZS5wdXNoLmNhbGwodGhpcyx0LGUpfSxYci5wcm90b3R5cGUuX3RyYW5zZm9ybT1mdW5jdGlvbih0LGUscil7dGhyb3cgbmV3IEVycm9yKCJfdHJhbnNmb3JtKCkgaXMgbm90IGltcGxlbWVudGVkIil9LFhyLnByb3RvdHlwZS5fd3JpdGU9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXRoaXMuX3RyYW5zZm9ybVN0YXRlO2lmKG4ud3JpdGVjYj1yLG4ud3JpdGVjaHVuaz10LG4ud3JpdGVlbmNvZGluZz1lLCFuLnRyYW5zZm9ybWluZyl7dmFyIGk9dGhpcy5fcmVhZGFibGVTdGF0ZTsobi5uZWVkVHJhbnNmb3JtfHxpLm5lZWRSZWFkYWJsZXx8aS5sZW5ndGg8aS5oaWdoV2F0ZXJNYXJrKSYmdGhpcy5fcmVhZChpLmhpZ2hXYXRlck1hcmspfX0sWHIucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3RyYW5zZm9ybVN0YXRlO251bGwhPT1lLndyaXRlY2h1bmsmJmUud3JpdGVjYiYmIWUudHJhbnNmb3JtaW5nPyhlLnRyYW5zZm9ybWluZz0hMCx0aGlzLl90cmFuc2Zvcm0oZS53cml0ZWNodW5rLGUud3JpdGVlbmNvZGluZyxlLmFmdGVyVHJhbnNmb3JtKSk6ZS5uZWVkVHJhbnNmb3JtPSEwfSxYci5wcm90b3R5cGUuX2Rlc3Ryb3k9ZnVuY3Rpb24odCxlKXt2YXIgcj10aGlzO25yLnByb3RvdHlwZS5fZGVzdHJveS5jYWxsKHRoaXMsdCwoZnVuY3Rpb24odCl7ZSh0KSxyLmVtaXQoImNsb3NlIil9KSl9O3ZhciBlbj1ubixybj1PYmplY3QuY3JlYXRlKEp0KTtmdW5jdGlvbiBubih0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBubikpcmV0dXJuIG5ldyBubih0KTtWci5jYWxsKHRoaXMsdCl9cm4uaW5oZXJpdHM9R3Qscm4uaW5oZXJpdHMobm4sVnIpLG5uLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKHQsZSxyKXtyKG51bGwsdCl9O3ZhciBvbj1PKChmdW5jdGlvbih0LGUpeyhlPXQuZXhwb3J0cz1ScikuU3RyZWFtPWUsZS5SZWFkYWJsZT1lLGUuV3JpdGFibGU9RGUsZS5EdXBsZXg9bnIsZS5UcmFuc2Zvcm09VnIsZS5QYXNzVGhyb3VnaD1lbn0pKS5SZWFkYWJsZSxhbj11bjt1bi5jdG9yPWZuLHVuLm9iaj1mdW5jdGlvbih0LGUpeygiZnVuY3Rpb24iPT10eXBlb2YgdHx8QXJyYXkuaXNBcnJheSh0KSkmJihlPXQsdD17fSk7cmV0dXJuKHQ9bG4odCkpLm9iamVjdE1vZGU9ITAsdC5oaWdoV2F0ZXJNYXJrPTE2LHVuKHQsZSl9O3ZhciBzbj1mbigpO2Z1bmN0aW9uIHVuKHQsZSl7KCJvYmplY3QiIT10eXBlb2YgdHx8QXJyYXkuaXNBcnJheSh0KSkmJihlPXQsdD17fSk7dmFyIHIsbj1uZXcgc24odCk7cmV0dXJuIG4uX2Zyb209QXJyYXkuaXNBcnJheShlKT8ocj0ocj1lKS5zbGljZSgpLGZ1bmN0aW9uKHQsZSl7dmFyIG49bnVsbCxpPXIubGVuZ3RoP3Iuc2hpZnQoKTpudWxsO2kgaW5zdGFuY2VvZiBFcnJvciYmKG49aSxpPW51bGwpLGUobixpKX0pOmV8fGhuLG59ZnVuY3Rpb24gZm4odCxlKXtmdW5jdGlvbiByKGUpe2lmKCEodGhpcyBpbnN0YW5jZW9mIHIpKXJldHVybiBuZXcgcihlKTt0aGlzLl9yZWFkaW5nPSExLHRoaXMuX2NhbGxiYWNrPWZ1bmN0aW9uKHQsZSl7aWYobi5kZXN0cm95ZWQpcmV0dXJuO2lmKHQpcmV0dXJuIG4uZGVzdHJveSh0KTtpZihudWxsPT09ZSlyZXR1cm4gbi5wdXNoKG51bGwpO24uX3JlYWRpbmc9ITEsbi5wdXNoKGUpJiZuLl9yZWFkKGkpfSx0aGlzLmRlc3Ryb3llZD0hMSxvbi5jYWxsKHRoaXMsZXx8dCk7dmFyIG49dGhpcyxpPXRoaXMuX3JlYWRhYmxlU3RhdGUuaGlnaFdhdGVyTWFya31yZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdCYmKGU9dCx0PXt9KSx0PWxuKHQpLEd0KHIsb24pLHIucHJvdG90eXBlLl9mcm9tPWV8fGhuLHIucHJvdG90eXBlLl9yZWFkPWZ1bmN0aW9uKHQpe3RoaXMuX3JlYWRpbmd8fHRoaXMuZGVzdHJveWVkfHwodGhpcy5fcmVhZGluZz0hMCx0aGlzLl9mcm9tKHQsdGhpcy5fY2FsbGJhY2spKX0sci5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbih0KXtpZighdGhpcy5kZXN0cm95ZWQpe3RoaXMuZGVzdHJveWVkPSEwO3ZhciBlPXRoaXM7Ui5uZXh0VGljaygoZnVuY3Rpb24oKXt0JiZlLmVtaXQoImVycm9yIix0KSxlLmVtaXQoImNsb3NlIil9KSl9fSxyfWZ1bmN0aW9uIGhuKCl7fWZ1bmN0aW9uIGxuKHQpe3JldHVybiB0PXR8fHt9fXZhciBjbixkbj0xLHBuPXt9LGduPSExLHluPXQuZG9jdW1lbnQ7ZnVuY3Rpb24gYm4odCl7ImZ1bmN0aW9uIiE9dHlwZW9mIHQmJih0PW5ldyBGdW5jdGlvbigiIit0KSk7Zm9yKHZhciBlPW5ldyBBcnJheShhcmd1bWVudHMubGVuZ3RoLTEpLHI9MDtyPGUubGVuZ3RoO3IrKyllW3JdPWFyZ3VtZW50c1tyKzFdO3ZhciBuPXtjYWxsYmFjazp0LGFyZ3M6ZX07cmV0dXJuIHBuW2RuXT1uLGNuKGRuKSxkbisrfWZ1bmN0aW9uIHZuKHQpe2lmKGduKXNldFRpbWVvdXQodm4sMCx0KTtlbHNle3ZhciBlPXBuW3RdO2lmKGUpe2duPSEwO3RyeXshZnVuY3Rpb24odCl7dmFyIGU9dC5jYWxsYmFjayxyPXQuYXJncztzd2l0Y2goci5sZW5ndGgpe2Nhc2UgMDplKCk7YnJlYWs7Y2FzZSAxOmUoclswXSk7YnJlYWs7Y2FzZSAyOmUoclswXSxyWzFdKTticmVhaztjYXNlIDM6ZShyWzBdLHJbMV0sclsyXSk7YnJlYWs7ZGVmYXVsdDplLmFwcGx5KHZvaWQgMCxyKX19KGUpfWZpbmFsbHl7IWZ1bmN0aW9uKHQpe2RlbGV0ZSBwblt0XX0odCksZ249ITF9fX19dmFyIHduLG1uLF9uLFNuLEVuPU9iamVjdC5nZXRQcm90b3R5cGVPZiYmT2JqZWN0LmdldFByb3RvdHlwZU9mKHQpO2Z1bmN0aW9uIGtuKHQpe2xldCBlLHI9T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpO2lmKGU9IltvYmplY3QgUHJvbWlzZV0iPT09cixlKXJldHVybiEwO2lmKCJbb2JqZWN0IEZ1bmN0aW9uXSIhPT1yKXJldHVybiExO3RyeXtlPSJmdW5jdGlvbiIhPXR5cGVvZiB0LnN1YnNjcmliZSYmImZ1bmN0aW9uIj09dHlwZW9mIHQudGhlbn1jYXRjaCh0KXt9cmV0dXJuIGV9ZnVuY3Rpb24gUm4odCl7bGV0IGUscixuO2Z1bmN0aW9uIGkoaSl7KCh0PWkpaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcnx8QXJyYXlCdWZmZXIuaXNWaWV3KHQpJiYhYXQuaXNCdWZmZXIodCkpJiYodD1hdC5mcm9tKHQpKSxlPWtuKHQpP3Q6bnVsbDtjb25zdCBvPSFlJiZ0W1N5bWJvbC5pdGVyYXRvcl0mJiJzdHJpbmciIT10eXBlb2YgdCYmIWF0LmlzQnVmZmVyKHQpO3I9bz90W1N5bWJvbC5pdGVyYXRvcl0oKTpudWxsO2NvbnN0IGE9IWUmJnRbU3ltYm9sLmFzeW5jSXRlcmF0b3JdO249YT90W1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpOm51bGx9cmV0dXJuIEFycmF5LmlzQXJyYXkodCkmJih0PXQuc2xpY2UoKSksaSh0KSxhbigoZnVuY3Rpb24gbyhhLHMpe2lmKGUpcmV0dXJuIHZvaWQoYXN5bmMoKT0+e3RyeXthd2FpdCBpKGF3YWl0IGUpLG8uY2FsbCh0aGlzLGEscyl9Y2F0Y2godCl7cyh0KX19KSgpO2lmKHIpe2NvbnN0IHQ9ci5uZXh0KCk7cmV0dXJuIHZvaWQgYm4ocyxudWxsLHQuZG9uZT9udWxsOnQudmFsdWUpfWlmKG4pcmV0dXJuIHZvaWQoYXN5bmMoKT0+e3RyeXtjb25zdCB0PWF3YWl0IG4ubmV4dCgpO2JuKHMsbnVsbCx0LmRvbmU/bnVsbDp0LnZhbHVlKX1jYXRjaCh0KXtibihzLHQpfX0pKCk7aWYoMD09PXQubGVuZ3RoKXJldHVybiB2b2lkIGJuKHMsbnVsbCxudWxsKTtjb25zdCB1PXQuc2xpY2UoMCxhKTt0PXQuc2xpY2UoYSksYm4ocyxudWxsLHUpfSkpfUVuPUVuJiZFbi5zZXRUaW1lb3V0P0VuOnQsIltvYmplY3QgcHJvY2Vzc10iPT09e30udG9TdHJpbmcuY2FsbCh0LnByb2Nlc3MpP2NuPWZ1bmN0aW9uKHQpe1IubmV4dFRpY2soKGZ1bmN0aW9uKCl7dm4odCl9KSl9OiFmdW5jdGlvbigpe2lmKHQucG9zdE1lc3NhZ2UmJiF0LmltcG9ydFNjcmlwdHMpe3ZhciBlPSEwLHI9dC5vbm1lc3NhZ2U7cmV0dXJuIHQub25tZXNzYWdlPWZ1bmN0aW9uKCl7ZT0hMX0sdC5wb3N0TWVzc2FnZSgiIiwiKiIpLHQub25tZXNzYWdlPXIsZX19KCk/dC5NZXNzYWdlQ2hhbm5lbD8oKG1uPW5ldyBNZXNzYWdlQ2hhbm5lbCkucG9ydDEub25tZXNzYWdlPWZ1bmN0aW9uKHQpe3ZuKHQuZGF0YSl9LGNuPWZ1bmN0aW9uKHQpe21uLnBvcnQyLnBvc3RNZXNzYWdlKHQpfSk6eW4mJiJvbnJlYWR5c3RhdGVjaGFuZ2UiaW4geW4uY3JlYXRlRWxlbWVudCgic2NyaXB0Iik/KHduPXluLmRvY3VtZW50RWxlbWVudCxjbj1mdW5jdGlvbih0KXt2YXIgZT15bi5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtlLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3ZuKHQpLGUub25yZWFkeXN0YXRlY2hhbmdlPW51bGwsd24ucmVtb3ZlQ2hpbGQoZSksZT1udWxsfSx3bi5hcHBlbmRDaGlsZChlKX0pOmNuPWZ1bmN0aW9uKHQpe3NldFRpbWVvdXQodm4sMCx0KX06KF9uPSJzZXRJbW1lZGlhdGUkIitNYXRoLnJhbmRvbSgpKyIkIixTbj1mdW5jdGlvbihlKXtlLnNvdXJjZT09PXQmJiJzdHJpbmciPT10eXBlb2YgZS5kYXRhJiYwPT09ZS5kYXRhLmluZGV4T2YoX24pJiZ2bigrZS5kYXRhLnNsaWNlKF9uLmxlbmd0aCkpfSx0LmFkZEV2ZW50TGlzdGVuZXI/dC5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIixTbiwhMSk6dC5hdHRhY2hFdmVudCgib25tZXNzYWdlIixTbiksY249ZnVuY3Rpb24oZSl7dC5wb3N0TWVzc2FnZShfbitlLCIqIil9KSxSbi5vYmplY3Q9dD0+e2xldCBlLHIsbjtmdW5jdGlvbiBpKGkpe2U9a24odD1pKT90Om51bGwscj0hZSYmdFtTeW1ib2wuaXRlcmF0b3JdP3RbU3ltYm9sLml0ZXJhdG9yXSgpOm51bGwsbj0hZSYmdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0/dFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTpudWxsfXJldHVybiBBcnJheS5pc0FycmF5KHQpJiYodD10LnNsaWNlKCkpLGkodCksYW4ub2JqKChmdW5jdGlvbiBvKGEscyl7aWYoZSkoYXN5bmMoKT0+e3RyeXthd2FpdCBpKGF3YWl0IGUpLG8uY2FsbCh0aGlzLGEscyl9Y2F0Y2godCl7cyh0KX19KSgpO2Vsc2UgaWYocil7Y29uc3QgdD1yLm5leHQoKTtibihzLG51bGwsdC5kb25lP251bGw6dC52YWx1ZSl9ZWxzZSBuPyhhc3luYygpPT57dHJ5e2NvbnN0IHQ9YXdhaXQgbi5uZXh0KCk7Ym4ocyxudWxsLHQuZG9uZT9udWxsOnQudmFsdWUpfWNhdGNoKHQpe2JuKHMsdCl9fSkoKToodGhpcy5wdXNoKHQpLGJuKHMsbnVsbCxudWxsKSl9KSl9O3ZhciBqbj17fSxUbj1qbi5MRUZUX0JSQUNFPTEsT249am4uUklHSFRfQlJBQ0U9MixBbj1qbi5MRUZUX0JSQUNLRVQ9MyxDbj1qbi5SSUdIVF9CUkFDS0VUPTQsTW49am4uQ09MT049NSx4bj1qbi5DT01NQT02LExuPWpuLlRSVUU9NyxCbj1qbi5GQUxTRT04LFBuPWpuLk5VTEw9OSxVbj1qbi5TVFJJTkc9MTAsTm49am4uTlVNQkVSPTExLERuPWpuLlNUQVJUPTE3LEluPWpuLlNUT1A9MTgscW49am4uVFJVRTE9MzMsRm49am4uVFJVRTI9MzQsV249am4uVFJVRTM9MzUsem49am4uRkFMU0UxPTQ5LFluPWpuLkZBTFNFMj01MCwkbj1qbi5GQUxTRTM9NTEsSG49am4uRkFMU0U0PTUyLEpuPWpuLk5VTEwxPTY1LEduPWpuLk5VTEwyPTY2LFZuPWpuLk5VTEwzPTY3LEtuPWpuLk5VTUJFUjE9ODEsWm49am4uTlVNQkVSMz04MyxYbj1qbi5TVFJJTkcxPTk3LFFuPWpuLlNUUklORzI9OTgsdGk9am4uU1RSSU5HMz05OSxlaT1qbi5TVFJJTkc0PTEwMCxyaT1qbi5TVFJJTkc1PTEwMSxuaT1qbi5TVFJJTkc2PTEwMixpaT1qbi5WQUxVRT0xMTMsb2k9am4uS0VZPTExNCxhaT1qbi5PQkpFQ1Q9MTI5LHNpPWpuLkFSUkFZPTEzMCx1aT0iXFwiLmNoYXJDb2RlQXQoMCksZmk9Ii8iLmNoYXJDb2RlQXQoMCksaGk9IlxiIi5jaGFyQ29kZUF0KDApLGxpPSJcZiIuY2hhckNvZGVBdCgwKSxjaT0iXG4iLmNoYXJDb2RlQXQoMCksZGk9IlxyIi5jaGFyQ29kZUF0KDApLHBpPSJcdCIuY2hhckNvZGVBdCgwKTtmdW5jdGlvbiBnaSgpe3RoaXMudFN0YXRlPURuLHRoaXMudmFsdWU9dm9pZCAwLHRoaXMuc3RyaW5nPXZvaWQgMCx0aGlzLnN0cmluZ0J1ZmZlcj1hdC5hbGxvYz9hdC5hbGxvYyg2NTUzNik6bmV3IGF0KDY1NTM2KSx0aGlzLnN0cmluZ0J1ZmZlck9mZnNldD0wLHRoaXMudW5pY29kZT12b2lkIDAsdGhpcy5oaWdoU3Vycm9nYXRlPXZvaWQgMCx0aGlzLmtleT12b2lkIDAsdGhpcy5tb2RlPXZvaWQgMCx0aGlzLnN0YWNrPVtdLHRoaXMuc3RhdGU9aWksdGhpcy5ieXRlc19yZW1haW5pbmc9MCx0aGlzLmJ5dGVzX2luX3NlcXVlbmNlPTAsdGhpcy50ZW1wX2J1ZmZzPXsyOm5ldyBhdCgyKSwzOm5ldyBhdCgzKSw0Om5ldyBhdCg0KX0sdGhpcy5vZmZzZXQ9LTF9Z2kudG9rbmFtPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT1PYmplY3Qua2V5cyhqbikscj0wLG49ZS5sZW5ndGg7cjxuO3IrKyl7dmFyIGk9ZVtyXTtpZihqbltpXT09PXQpcmV0dXJuIGl9cmV0dXJuIHQmJiIweCIrdC50b1N0cmluZygxNil9O3ZhciB5aT1naS5wcm90b3R5cGU7eWkub25FcnJvcj1mdW5jdGlvbih0KXt0aHJvdyB0fSx5aS5jaGFyRXJyb3I9ZnVuY3Rpb24odCxlKXt0aGlzLnRTdGF0ZT1Jbix0aGlzLm9uRXJyb3IobmV3IEVycm9yKCJVbmV4cGVjdGVkICIrSlNPTi5zdHJpbmdpZnkoU3RyaW5nLmZyb21DaGFyQ29kZSh0W2VdKSkrIiBhdCBwb3NpdGlvbiAiK2UrIiBpbiBzdGF0ZSAiK2dpLnRva25hbSh0aGlzLnRTdGF0ZSkpKX0seWkuYXBwZW5kU3RyaW5nQ2hhcj1mdW5jdGlvbih0KXt0aGlzLnN0cmluZ0J1ZmZlck9mZnNldD49NjU1MzYmJih0aGlzLnN0cmluZys9dGhpcy5zdHJpbmdCdWZmZXIudG9TdHJpbmcoInV0ZjgiKSx0aGlzLnN0cmluZ0J1ZmZlck9mZnNldD0wKSx0aGlzLnN0cmluZ0J1ZmZlclt0aGlzLnN0cmluZ0J1ZmZlck9mZnNldCsrXT10fSx5aS5hcHBlbmRTdHJpbmdCdWY9ZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQubGVuZ3RoOyJudW1iZXIiPT10eXBlb2YgZSYmKG49Im51bWJlciI9PXR5cGVvZiByP3I8MD90Lmxlbmd0aC1lK3I6ci1lOnQubGVuZ3RoLWUpLG48MCYmKG49MCksdGhpcy5zdHJpbmdCdWZmZXJPZmZzZXQrbj42NTUzNiYmKHRoaXMuc3RyaW5nKz10aGlzLnN0cmluZ0J1ZmZlci50b1N0cmluZygidXRmOCIsMCx0aGlzLnN0cmluZ0J1ZmZlck9mZnNldCksdGhpcy5zdHJpbmdCdWZmZXJPZmZzZXQ9MCksdC5jb3B5KHRoaXMuc3RyaW5nQnVmZmVyLHRoaXMuc3RyaW5nQnVmZmVyT2Zmc2V0LGUsciksdGhpcy5zdHJpbmdCdWZmZXJPZmZzZXQrPW59LHlpLndyaXRlPWZ1bmN0aW9uKHQpe3ZhciBlOyJzdHJpbmciPT10eXBlb2YgdCYmKHQ9bmV3IGF0KHQpKTtmb3IodmFyIHI9MCxuPXQubGVuZ3RoO3I8bjtyKyspaWYodGhpcy50U3RhdGU9PT1Ebil7aWYoZT10W3JdLHRoaXMub2Zmc2V0KyssMTIzPT09ZSl0aGlzLm9uVG9rZW4oVG4sInsiKTtlbHNlIGlmKDEyNT09PWUpdGhpcy5vblRva2VuKE9uLCJ9Iik7ZWxzZSBpZig5MT09PWUpdGhpcy5vblRva2VuKEFuLCJbIik7ZWxzZSBpZig5Mz09PWUpdGhpcy5vblRva2VuKENuLCJdIik7ZWxzZSBpZig1OD09PWUpdGhpcy5vblRva2VuKE1uLCI6Iik7ZWxzZSBpZig0ND09PWUpdGhpcy5vblRva2VuKHhuLCIsIik7ZWxzZSBpZigxMTY9PT1lKXRoaXMudFN0YXRlPXFuO2Vsc2UgaWYoMTAyPT09ZSl0aGlzLnRTdGF0ZT16bjtlbHNlIGlmKDExMD09PWUpdGhpcy50U3RhdGU9Sm47ZWxzZSBpZigzND09PWUpdGhpcy5zdHJpbmc9IiIsdGhpcy5zdHJpbmdCdWZmZXJPZmZzZXQ9MCx0aGlzLnRTdGF0ZT1YbjtlbHNlIGlmKDQ1PT09ZSl0aGlzLnN0cmluZz0iLSIsdGhpcy50U3RhdGU9S247ZWxzZSBpZihlPj00OCYmZTw2NCl0aGlzLnN0cmluZz1TdHJpbmcuZnJvbUNoYXJDb2RlKGUpLHRoaXMudFN0YXRlPVpuO2Vsc2UgaWYoMzIhPT1lJiY5IT09ZSYmMTAhPT1lJiYxMyE9PWUpcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscil9ZWxzZSBpZih0aGlzLnRTdGF0ZT09PVhuKWlmKGU9dFtyXSx0aGlzLmJ5dGVzX3JlbWFpbmluZz4wKXtmb3IodmFyIGk9MDtpPHRoaXMuYnl0ZXNfcmVtYWluaW5nO2krKyl0aGlzLnRlbXBfYnVmZnNbdGhpcy5ieXRlc19pbl9zZXF1ZW5jZV1bdGhpcy5ieXRlc19pbl9zZXF1ZW5jZS10aGlzLmJ5dGVzX3JlbWFpbmluZytpXT10W2ldO3RoaXMuYXBwZW5kU3RyaW5nQnVmKHRoaXMudGVtcF9idWZmc1t0aGlzLmJ5dGVzX2luX3NlcXVlbmNlXSksdGhpcy5ieXRlc19pbl9zZXF1ZW5jZT10aGlzLmJ5dGVzX3JlbWFpbmluZz0wLHI9citpLTF9ZWxzZSBpZigwPT09dGhpcy5ieXRlc19yZW1haW5pbmcmJmU+PTEyOCl7aWYoZTw9MTkzfHxlPjI0NClyZXR1cm4gdGhpcy5vbkVycm9yKG5ldyBFcnJvcigiSW52YWxpZCBVVEYtOCBjaGFyYWN0ZXIgYXQgcG9zaXRpb24gIityKyIgaW4gc3RhdGUgIitnaS50b2tuYW0odGhpcy50U3RhdGUpKSk7aWYoZT49MTk0JiZlPD0yMjMmJih0aGlzLmJ5dGVzX2luX3NlcXVlbmNlPTIpLGU+PTIyNCYmZTw9MjM5JiYodGhpcy5ieXRlc19pbl9zZXF1ZW5jZT0zKSxlPj0yNDAmJmU8PTI0NCYmKHRoaXMuYnl0ZXNfaW5fc2VxdWVuY2U9NCksdGhpcy5ieXRlc19pbl9zZXF1ZW5jZStyPnQubGVuZ3RoKXtmb3IodmFyIG89MDtvPD10Lmxlbmd0aC0xLXI7bysrKXRoaXMudGVtcF9idWZmc1t0aGlzLmJ5dGVzX2luX3NlcXVlbmNlXVtvXT10W3Irb107dGhpcy5ieXRlc19yZW1haW5pbmc9cit0aGlzLmJ5dGVzX2luX3NlcXVlbmNlLXQubGVuZ3RoLHI9dC5sZW5ndGgtMX1lbHNlIHRoaXMuYXBwZW5kU3RyaW5nQnVmKHQscixyK3RoaXMuYnl0ZXNfaW5fc2VxdWVuY2UpLHI9cit0aGlzLmJ5dGVzX2luX3NlcXVlbmNlLTF9ZWxzZSBpZigzND09PWUpdGhpcy50U3RhdGU9RG4sdGhpcy5zdHJpbmcrPXRoaXMuc3RyaW5nQnVmZmVyLnRvU3RyaW5nKCJ1dGY4IiwwLHRoaXMuc3RyaW5nQnVmZmVyT2Zmc2V0KSx0aGlzLnN0cmluZ0J1ZmZlck9mZnNldD0wLHRoaXMub25Ub2tlbihVbix0aGlzLnN0cmluZyksdGhpcy5vZmZzZXQrPWF0LmJ5dGVMZW5ndGgodGhpcy5zdHJpbmcsInV0ZjgiKSsxLHRoaXMuc3RyaW5nPXZvaWQgMDtlbHNlIGlmKDkyPT09ZSl0aGlzLnRTdGF0ZT1RbjtlbHNle2lmKCEoZT49MzIpKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMuYXBwZW5kU3RyaW5nQ2hhcihlKX1lbHNlIGlmKHRoaXMudFN0YXRlPT09UW4paWYoMzQ9PT0oZT10W3JdKSl0aGlzLmFwcGVuZFN0cmluZ0NoYXIoZSksdGhpcy50U3RhdGU9WG47ZWxzZSBpZig5Mj09PWUpdGhpcy5hcHBlbmRTdHJpbmdDaGFyKHVpKSx0aGlzLnRTdGF0ZT1YbjtlbHNlIGlmKDQ3PT09ZSl0aGlzLmFwcGVuZFN0cmluZ0NoYXIoZmkpLHRoaXMudFN0YXRlPVhuO2Vsc2UgaWYoOTg9PT1lKXRoaXMuYXBwZW5kU3RyaW5nQ2hhcihoaSksdGhpcy50U3RhdGU9WG47ZWxzZSBpZigxMDI9PT1lKXRoaXMuYXBwZW5kU3RyaW5nQ2hhcihsaSksdGhpcy50U3RhdGU9WG47ZWxzZSBpZigxMTA9PT1lKXRoaXMuYXBwZW5kU3RyaW5nQ2hhcihjaSksdGhpcy50U3RhdGU9WG47ZWxzZSBpZigxMTQ9PT1lKXRoaXMuYXBwZW5kU3RyaW5nQ2hhcihkaSksdGhpcy50U3RhdGU9WG47ZWxzZSBpZigxMTY9PT1lKXRoaXMuYXBwZW5kU3RyaW5nQ2hhcihwaSksdGhpcy50U3RhdGU9WG47ZWxzZXtpZigxMTchPT1lKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMudW5pY29kZT0iIix0aGlzLnRTdGF0ZT10aX1lbHNlIGlmKHRoaXMudFN0YXRlPT09dGl8fHRoaXMudFN0YXRlPT09ZWl8fHRoaXMudFN0YXRlPT09cml8fHRoaXMudFN0YXRlPT09bmkpe2lmKCEoKGU9dFtyXSk+PTQ4JiZlPDY0fHxlPjY0JiZlPD03MHx8ZT45NiYmZTw9MTAyKSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTtpZih0aGlzLnVuaWNvZGUrPVN0cmluZy5mcm9tQ2hhckNvZGUoZSksdGhpcy50U3RhdGUrKz09PW5pKXt2YXIgYT1wYXJzZUludCh0aGlzLnVuaWNvZGUsMTYpO3RoaXMudW5pY29kZT12b2lkIDAsdm9pZCAwIT09dGhpcy5oaWdoU3Vycm9nYXRlJiZhPj01NjMyMCYmYTw1NzM0ND8odGhpcy5hcHBlbmRTdHJpbmdCdWYobmV3IGF0KFN0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5oaWdoU3Vycm9nYXRlLGEpKSksdGhpcy5oaWdoU3Vycm9nYXRlPXZvaWQgMCk6dm9pZCAwPT09dGhpcy5oaWdoU3Vycm9nYXRlJiZhPj01NTI5NiYmYTw1NjMyMD90aGlzLmhpZ2hTdXJyb2dhdGU9YToodm9pZCAwIT09dGhpcy5oaWdoU3Vycm9nYXRlJiYodGhpcy5hcHBlbmRTdHJpbmdCdWYobmV3IGF0KFN0cmluZy5mcm9tQ2hhckNvZGUodGhpcy5oaWdoU3Vycm9nYXRlKSkpLHRoaXMuaGlnaFN1cnJvZ2F0ZT12b2lkIDApLHRoaXMuYXBwZW5kU3RyaW5nQnVmKG5ldyBhdChTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKSkpLHRoaXMudFN0YXRlPVhufX1lbHNlIGlmKHRoaXMudFN0YXRlPT09S258fHRoaXMudFN0YXRlPT09Wm4pc3dpdGNoKGU9dFtyXSl7Y2FzZSA0ODpjYXNlIDQ5OmNhc2UgNTA6Y2FzZSA1MTpjYXNlIDUyOmNhc2UgNTM6Y2FzZSA1NDpjYXNlIDU1OmNhc2UgNTY6Y2FzZSA1NzpjYXNlIDQ2OmNhc2UgMTAxOmNhc2UgNjk6Y2FzZSA0MzpjYXNlIDQ1OnRoaXMuc3RyaW5nKz1TdHJpbmcuZnJvbUNoYXJDb2RlKGUpLHRoaXMudFN0YXRlPVpuO2JyZWFrO2RlZmF1bHQ6dGhpcy50U3RhdGU9RG47dmFyIHM9TnVtYmVyKHRoaXMuc3RyaW5nKTtpZihpc05hTihzKSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLnN0cmluZy5tYXRjaCgvWzAtOV0rLyk9PXRoaXMuc3RyaW5nJiZzLnRvU3RyaW5nKCkhPXRoaXMuc3RyaW5nP3RoaXMub25Ub2tlbihVbix0aGlzLnN0cmluZyk6dGhpcy5vblRva2VuKE5uLHMpLHRoaXMub2Zmc2V0Kz10aGlzLnN0cmluZy5sZW5ndGgtMSx0aGlzLnN0cmluZz12b2lkIDAsci0tfWVsc2UgaWYodGhpcy50U3RhdGU9PT1xbil7aWYoMTE0IT09dFtyXSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLnRTdGF0ZT1Gbn1lbHNlIGlmKHRoaXMudFN0YXRlPT09Rm4pe2lmKDExNyE9PXRbcl0pcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7dGhpcy50U3RhdGU9V259ZWxzZSBpZih0aGlzLnRTdGF0ZT09PVduKXtpZigxMDEhPT10W3JdKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMudFN0YXRlPURuLHRoaXMub25Ub2tlbihMbiwhMCksdGhpcy5vZmZzZXQrPTN9ZWxzZSBpZih0aGlzLnRTdGF0ZT09PXpuKXtpZig5NyE9PXRbcl0pcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7dGhpcy50U3RhdGU9WW59ZWxzZSBpZih0aGlzLnRTdGF0ZT09PVluKXtpZigxMDghPT10W3JdKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMudFN0YXRlPSRufWVsc2UgaWYodGhpcy50U3RhdGU9PT0kbil7aWYoMTE1IT09dFtyXSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLnRTdGF0ZT1Ibn1lbHNlIGlmKHRoaXMudFN0YXRlPT09SG4pe2lmKDEwMSE9PXRbcl0pcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7dGhpcy50U3RhdGU9RG4sdGhpcy5vblRva2VuKEJuLCExKSx0aGlzLm9mZnNldCs9NH1lbHNlIGlmKHRoaXMudFN0YXRlPT09Sm4pe2lmKDExNyE9PXRbcl0pcmV0dXJuIHRoaXMuY2hhckVycm9yKHQscik7dGhpcy50U3RhdGU9R259ZWxzZSBpZih0aGlzLnRTdGF0ZT09PUduKXtpZigxMDghPT10W3JdKXJldHVybiB0aGlzLmNoYXJFcnJvcih0LHIpO3RoaXMudFN0YXRlPVZufWVsc2UgaWYodGhpcy50U3RhdGU9PT1Wbil7aWYoMTA4IT09dFtyXSlyZXR1cm4gdGhpcy5jaGFyRXJyb3IodCxyKTt0aGlzLnRTdGF0ZT1Ebix0aGlzLm9uVG9rZW4oUG4sbnVsbCksdGhpcy5vZmZzZXQrPTN9fSx5aS5vblRva2VuPWZ1bmN0aW9uKHQsZSl7fSx5aS5wYXJzZUVycm9yPWZ1bmN0aW9uKHQsZSl7dGhpcy50U3RhdGU9SW4sdGhpcy5vbkVycm9yKG5ldyBFcnJvcigiVW5leHBlY3RlZCAiK2dpLnRva25hbSh0KSsoZT8iKCIrSlNPTi5zdHJpbmdpZnkoZSkrIikiOiIiKSsiIGluIHN0YXRlICIrZ2kudG9rbmFtKHRoaXMuc3RhdGUpKSl9LHlpLnB1c2g9ZnVuY3Rpb24oKXt0aGlzLnN0YWNrLnB1c2goe3ZhbHVlOnRoaXMudmFsdWUsa2V5OnRoaXMua2V5LG1vZGU6dGhpcy5tb2RlfSl9LHlpLnBvcD1mdW5jdGlvbigpe3ZhciB0PXRoaXMudmFsdWUsZT10aGlzLnN0YWNrLnBvcCgpO3RoaXMudmFsdWU9ZS52YWx1ZSx0aGlzLmtleT1lLmtleSx0aGlzLm1vZGU9ZS5tb2RlLHRoaXMuZW1pdCh0KSx0aGlzLm1vZGV8fCh0aGlzLnN0YXRlPWlpKX0seWkuZW1pdD1mdW5jdGlvbih0KXt0aGlzLm1vZGUmJih0aGlzLnN0YXRlPXhuKSx0aGlzLm9uVmFsdWUodCl9LHlpLm9uVmFsdWU9ZnVuY3Rpb24odCl7fSx5aS5vblRva2VuPWZ1bmN0aW9uKHQsZSl7aWYodGhpcy5zdGF0ZT09PWlpKWlmKHQ9PT1Vbnx8dD09PU5ufHx0PT09TG58fHQ9PT1Cbnx8dD09PVBuKXRoaXMudmFsdWUmJih0aGlzLnZhbHVlW3RoaXMua2V5XT1lKSx0aGlzLmVtaXQoZSk7ZWxzZSBpZih0PT09VG4pdGhpcy5wdXNoKCksdGhpcy52YWx1ZT90aGlzLnZhbHVlPXRoaXMudmFsdWVbdGhpcy5rZXldPXt9OnRoaXMudmFsdWU9e30sdGhpcy5rZXk9dm9pZCAwLHRoaXMuc3RhdGU9b2ksdGhpcy5tb2RlPWFpO2Vsc2UgaWYodD09PUFuKXRoaXMucHVzaCgpLHRoaXMudmFsdWU/dGhpcy52YWx1ZT10aGlzLnZhbHVlW3RoaXMua2V5XT1bXTp0aGlzLnZhbHVlPVtdLHRoaXMua2V5PTAsdGhpcy5tb2RlPXNpLHRoaXMuc3RhdGU9aWk7ZWxzZSBpZih0PT09T24pe2lmKHRoaXMubW9kZSE9PWFpKXJldHVybiB0aGlzLnBhcnNlRXJyb3IodCxlKTt0aGlzLnBvcCgpfWVsc2V7aWYodCE9PUNuKXJldHVybiB0aGlzLnBhcnNlRXJyb3IodCxlKTtpZih0aGlzLm1vZGUhPT1zaSlyZXR1cm4gdGhpcy5wYXJzZUVycm9yKHQsZSk7dGhpcy5wb3AoKX1lbHNlIGlmKHRoaXMuc3RhdGU9PT1vaSlpZih0PT09VW4pdGhpcy5rZXk9ZSx0aGlzLnN0YXRlPU1uO2Vsc2V7aWYodCE9PU9uKXJldHVybiB0aGlzLnBhcnNlRXJyb3IodCxlKTt0aGlzLnBvcCgpfWVsc2UgaWYodGhpcy5zdGF0ZT09PU1uKXtpZih0IT09TW4pcmV0dXJuIHRoaXMucGFyc2VFcnJvcih0LGUpO3RoaXMuc3RhdGU9aWl9ZWxzZXtpZih0aGlzLnN0YXRlIT09eG4pcmV0dXJuIHRoaXMucGFyc2VFcnJvcih0LGUpO2lmKHQ9PT14bil0aGlzLm1vZGU9PT1zaT8odGhpcy5rZXkrKyx0aGlzLnN0YXRlPWlpKTp0aGlzLm1vZGU9PT1haSYmKHRoaXMuc3RhdGU9b2kpO2Vsc2V7aWYoISh0PT09Q24mJnRoaXMubW9kZT09PXNpfHx0PT09T24mJnRoaXMubW9kZT09PWFpKSlyZXR1cm4gdGhpcy5wYXJzZUVycm9yKHQsZSk7dGhpcy5wb3AoKX19fSxnaS5DPWpuO3ZhciBiaT1naTtmdW5jdGlvbiB2aSgpe3RoaXMuaGVhZD1udWxsLHRoaXMudGFpbD1udWxsLHRoaXMubGVuZ3RoPTB9dmkucHJvdG90eXBlLnB1c2g9ZnVuY3Rpb24odCl7dmFyIGU9e2RhdGE6dCxuZXh0Om51bGx9O3RoaXMubGVuZ3RoPjA/dGhpcy50YWlsLm5leHQ9ZTp0aGlzLmhlYWQ9ZSx0aGlzLnRhaWw9ZSwrK3RoaXMubGVuZ3RofSx2aS5wcm90b3R5cGUudW5zaGlmdD1mdW5jdGlvbih0KXt2YXIgZT17ZGF0YTp0LG5leHQ6dGhpcy5oZWFkfTswPT09dGhpcy5sZW5ndGgmJih0aGlzLnRhaWw9ZSksdGhpcy5oZWFkPWUsKyt0aGlzLmxlbmd0aH0sdmkucHJvdG90eXBlLnNoaWZ0PWZ1bmN0aW9uKCl7aWYoMCE9PXRoaXMubGVuZ3RoKXt2YXIgdD10aGlzLmhlYWQuZGF0YTtyZXR1cm4gMT09PXRoaXMubGVuZ3RoP3RoaXMuaGVhZD10aGlzLnRhaWw9bnVsbDp0aGlzLmhlYWQ9dGhpcy5oZWFkLm5leHQsLS10aGlzLmxlbmd0aCx0fX0sdmkucHJvdG90eXBlLmNsZWFyPWZ1bmN0aW9uKCl7dGhpcy5oZWFkPXRoaXMudGFpbD1udWxsLHRoaXMubGVuZ3RoPTB9LHZpLnByb3RvdHlwZS5qb2luPWZ1bmN0aW9uKHQpe2lmKDA9PT10aGlzLmxlbmd0aClyZXR1cm4iIjtmb3IodmFyIGU9dGhpcy5oZWFkLHI9IiIrZS5kYXRhO2U9ZS5uZXh0OylyKz10K2UuZGF0YTtyZXR1cm4gcn0sdmkucHJvdG90eXBlLmNvbmNhdD1mdW5jdGlvbih0KXtpZigwPT09dGhpcy5sZW5ndGgpcmV0dXJuIGF0LmFsbG9jKDApO2lmKDE9PT10aGlzLmxlbmd0aClyZXR1cm4gdGhpcy5oZWFkLmRhdGE7Zm9yKHZhciBlPWF0LmFsbG9jVW5zYWZlKHQ+Pj4wKSxyPXRoaXMuaGVhZCxuPTA7cjspci5kYXRhLmNvcHkoZSxuKSxuKz1yLmRhdGEubGVuZ3RoLHI9ci5uZXh0O3JldHVybiBlfTt2YXIgd2k9YXQuaXNFbmNvZGluZ3x8ZnVuY3Rpb24odCl7c3dpdGNoKHQmJnQudG9Mb3dlckNhc2UoKSl7Y2FzZSJoZXgiOmNhc2UidXRmOCI6Y2FzZSJ1dGYtOCI6Y2FzZSJhc2NpaSI6Y2FzZSJiaW5hcnkiOmNhc2UiYmFzZTY0IjpjYXNlInVjczIiOmNhc2UidWNzLTIiOmNhc2UidXRmMTZsZSI6Y2FzZSJ1dGYtMTZsZSI6Y2FzZSJyYXciOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fTtmdW5jdGlvbiBtaSh0KXtzd2l0Y2godGhpcy5lbmNvZGluZz0odHx8InV0ZjgiKS50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoL1stX10vLCIiKSxmdW5jdGlvbih0KXtpZih0JiYhd2kodCkpdGhyb3cgbmV3IEVycm9yKCJVbmtub3duIGVuY29kaW5nOiAiK3QpfSh0KSx0aGlzLmVuY29kaW5nKXtjYXNlInV0ZjgiOnRoaXMuc3Vycm9nYXRlU2l6ZT0zO2JyZWFrO2Nhc2UidWNzMiI6Y2FzZSJ1dGYxNmxlIjp0aGlzLnN1cnJvZ2F0ZVNpemU9Mix0aGlzLmRldGVjdEluY29tcGxldGVDaGFyPVNpO2JyZWFrO2Nhc2UiYmFzZTY0Ijp0aGlzLnN1cnJvZ2F0ZVNpemU9Myx0aGlzLmRldGVjdEluY29tcGxldGVDaGFyPUVpO2JyZWFrO2RlZmF1bHQ6cmV0dXJuIHZvaWQodGhpcy53cml0ZT1faSl9dGhpcy5jaGFyQnVmZmVyPW5ldyBhdCg2KSx0aGlzLmNoYXJSZWNlaXZlZD0wLHRoaXMuY2hhckxlbmd0aD0wfWZ1bmN0aW9uIF9pKHQpe3JldHVybiB0LnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpfWZ1bmN0aW9uIFNpKHQpe3RoaXMuY2hhclJlY2VpdmVkPXQubGVuZ3RoJTIsdGhpcy5jaGFyTGVuZ3RoPXRoaXMuY2hhclJlY2VpdmVkPzI6MH1mdW5jdGlvbiBFaSh0KXt0aGlzLmNoYXJSZWNlaXZlZD10Lmxlbmd0aCUzLHRoaXMuY2hhckxlbmd0aD10aGlzLmNoYXJSZWNlaXZlZD8zOjB9bWkucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT0iIjt0aGlzLmNoYXJMZW5ndGg7KXt2YXIgcj10Lmxlbmd0aD49dGhpcy5jaGFyTGVuZ3RoLXRoaXMuY2hhclJlY2VpdmVkP3RoaXMuY2hhckxlbmd0aC10aGlzLmNoYXJSZWNlaXZlZDp0Lmxlbmd0aDtpZih0LmNvcHkodGhpcy5jaGFyQnVmZmVyLHRoaXMuY2hhclJlY2VpdmVkLDAsciksdGhpcy5jaGFyUmVjZWl2ZWQrPXIsdGhpcy5jaGFyUmVjZWl2ZWQ8dGhpcy5jaGFyTGVuZ3RoKXJldHVybiIiO2lmKHQ9dC5zbGljZShyLHQubGVuZ3RoKSwhKChpPShlPXRoaXMuY2hhckJ1ZmZlci5zbGljZSgwLHRoaXMuY2hhckxlbmd0aCkudG9TdHJpbmcodGhpcy5lbmNvZGluZykpLmNoYXJDb2RlQXQoZS5sZW5ndGgtMSkpPj01NTI5NiYmaTw9NTYzMTkpKXtpZih0aGlzLmNoYXJSZWNlaXZlZD10aGlzLmNoYXJMZW5ndGg9MCwwPT09dC5sZW5ndGgpcmV0dXJuIGU7YnJlYWt9dGhpcy5jaGFyTGVuZ3RoKz10aGlzLnN1cnJvZ2F0ZVNpemUsZT0iIn10aGlzLmRldGVjdEluY29tcGxldGVDaGFyKHQpO3ZhciBuPXQubGVuZ3RoO3RoaXMuY2hhckxlbmd0aCYmKHQuY29weSh0aGlzLmNoYXJCdWZmZXIsMCx0Lmxlbmd0aC10aGlzLmNoYXJSZWNlaXZlZCxuKSxuLT10aGlzLmNoYXJSZWNlaXZlZCk7dmFyIGk7bj0oZSs9dC50b1N0cmluZyh0aGlzLmVuY29kaW5nLDAsbikpLmxlbmd0aC0xO2lmKChpPWUuY2hhckNvZGVBdChuKSk+PTU1Mjk2JiZpPD01NjMxOSl7dmFyIG89dGhpcy5zdXJyb2dhdGVTaXplO3JldHVybiB0aGlzLmNoYXJMZW5ndGgrPW8sdGhpcy5jaGFyUmVjZWl2ZWQrPW8sdGhpcy5jaGFyQnVmZmVyLmNvcHkodGhpcy5jaGFyQnVmZmVyLG8sMCxvKSx0LmNvcHkodGhpcy5jaGFyQnVmZmVyLDAsMCxvKSxlLnN1YnN0cmluZygwLG4pfXJldHVybiBlfSxtaS5wcm90b3R5cGUuZGV0ZWN0SW5jb21wbGV0ZUNoYXI9ZnVuY3Rpb24odCl7Zm9yKHZhciBlPXQubGVuZ3RoPj0zPzM6dC5sZW5ndGg7ZT4wO2UtLSl7dmFyIHI9dFt0Lmxlbmd0aC1lXTtpZigxPT1lJiZyPj41PT02KXt0aGlzLmNoYXJMZW5ndGg9MjticmVha31pZihlPD0yJiZyPj40PT0xNCl7dGhpcy5jaGFyTGVuZ3RoPTM7YnJlYWt9aWYoZTw9MyYmcj4+Mz09MzApe3RoaXMuY2hhckxlbmd0aD00O2JyZWFrfX10aGlzLmNoYXJSZWNlaXZlZD1lfSxtaS5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHQpe3ZhciBlPSIiO2lmKHQmJnQubGVuZ3RoJiYoZT10aGlzLndyaXRlKHQpKSx0aGlzLmNoYXJSZWNlaXZlZCl7dmFyIHI9dGhpcy5jaGFyUmVjZWl2ZWQsbj10aGlzLmNoYXJCdWZmZXIsaT10aGlzLmVuY29kaW5nO2UrPW4uc2xpY2UoMCxyKS50b1N0cmluZyhpKX1yZXR1cm4gZX0samkuUmVhZGFibGVTdGF0ZT1SaTt2YXIga2k9ZWUoInN0cmVhbSIpO2Z1bmN0aW9uIFJpKHQsZSl7dD10fHx7fSx0aGlzLm9iamVjdE1vZGU9ISF0Lm9iamVjdE1vZGUsZSBpbnN0YW5jZW9mIFFpJiYodGhpcy5vYmplY3RNb2RlPXRoaXMub2JqZWN0TW9kZXx8ISF0LnJlYWRhYmxlT2JqZWN0TW9kZSk7dmFyIHI9dC5oaWdoV2F0ZXJNYXJrLG49dGhpcy5vYmplY3RNb2RlPzE2OjE2Mzg0O3RoaXMuaGlnaFdhdGVyTWFyaz1yfHwwPT09cj9yOm4sdGhpcy5oaWdoV2F0ZXJNYXJrPX5+dGhpcy5oaWdoV2F0ZXJNYXJrLHRoaXMuYnVmZmVyPW5ldyB2aSx0aGlzLmxlbmd0aD0wLHRoaXMucGlwZXM9bnVsbCx0aGlzLnBpcGVzQ291bnQ9MCx0aGlzLmZsb3dpbmc9bnVsbCx0aGlzLmVuZGVkPSExLHRoaXMuZW5kRW1pdHRlZD0hMSx0aGlzLnJlYWRpbmc9ITEsdGhpcy5zeW5jPSEwLHRoaXMubmVlZFJlYWRhYmxlPSExLHRoaXMuZW1pdHRlZFJlYWRhYmxlPSExLHRoaXMucmVhZGFibGVMaXN0ZW5pbmc9ITEsdGhpcy5yZXN1bWVTY2hlZHVsZWQ9ITEsdGhpcy5kZWZhdWx0RW5jb2Rpbmc9dC5kZWZhdWx0RW5jb2Rpbmd8fCJ1dGY4Iix0aGlzLnJhbk91dD0hMSx0aGlzLmF3YWl0RHJhaW49MCx0aGlzLnJlYWRpbmdNb3JlPSExLHRoaXMuZGVjb2Rlcj1udWxsLHRoaXMuZW5jb2Rpbmc9bnVsbCx0LmVuY29kaW5nJiYodGhpcy5kZWNvZGVyPW5ldyBtaSh0LmVuY29kaW5nKSx0aGlzLmVuY29kaW5nPXQuZW5jb2RpbmcpfWZ1bmN0aW9uIGppKHQpe2lmKCEodGhpcyBpbnN0YW5jZW9mIGppKSlyZXR1cm4gbmV3IGppKHQpO3RoaXMuX3JlYWRhYmxlU3RhdGU9bmV3IFJpKHQsdGhpcyksdGhpcy5yZWFkYWJsZT0hMCx0JiYiZnVuY3Rpb24iPT10eXBlb2YgdC5yZWFkJiYodGhpcy5fcmVhZD10LnJlYWQpLEwuY2FsbCh0aGlzKX1mdW5jdGlvbiBUaSh0LGUscixuLGkpe3ZhciBvPWZ1bmN0aW9uKHQsZSl7dmFyIHI9bnVsbDthdC5pc0J1ZmZlcihlKXx8InN0cmluZyI9PXR5cGVvZiBlfHxudWxsPT1lfHx0Lm9iamVjdE1vZGV8fChyPW5ldyBUeXBlRXJyb3IoIkludmFsaWQgbm9uLXN0cmluZy9idWZmZXIgY2h1bmsiKSk7cmV0dXJuIHJ9KGUscik7aWYobyl0LmVtaXQoImVycm9yIixvKTtlbHNlIGlmKG51bGw9PT1yKWUucmVhZGluZz0hMSxmdW5jdGlvbih0LGUpe2lmKGUuZW5kZWQpcmV0dXJuO2lmKGUuZGVjb2Rlcil7dmFyIHI9ZS5kZWNvZGVyLmVuZCgpO3ImJnIubGVuZ3RoJiYoZS5idWZmZXIucHVzaChyKSxlLmxlbmd0aCs9ZS5vYmplY3RNb2RlPzE6ci5sZW5ndGgpfWUuZW5kZWQ9ITAsQWkodCl9KHQsZSk7ZWxzZSBpZihlLm9iamVjdE1vZGV8fHImJnIubGVuZ3RoPjApaWYoZS5lbmRlZCYmIWkpe3ZhciBhPW5ldyBFcnJvcigic3RyZWFtLnB1c2goKSBhZnRlciBFT0YiKTt0LmVtaXQoImVycm9yIixhKX1lbHNlIGlmKGUuZW5kRW1pdHRlZCYmaSl7dmFyIHM9bmV3IEVycm9yKCJzdHJlYW0udW5zaGlmdCgpIGFmdGVyIGVuZCBldmVudCIpO3QuZW1pdCgiZXJyb3IiLHMpfWVsc2V7dmFyIHU7IWUuZGVjb2Rlcnx8aXx8bnx8KHI9ZS5kZWNvZGVyLndyaXRlKHIpLHU9IWUub2JqZWN0TW9kZSYmMD09PXIubGVuZ3RoKSxpfHwoZS5yZWFkaW5nPSExKSx1fHwoZS5mbG93aW5nJiYwPT09ZS5sZW5ndGgmJiFlLnN5bmM/KHQuZW1pdCgiZGF0YSIsciksdC5yZWFkKDApKTooZS5sZW5ndGgrPWUub2JqZWN0TW9kZT8xOnIubGVuZ3RoLGk/ZS5idWZmZXIudW5zaGlmdChyKTplLmJ1ZmZlci5wdXNoKHIpLGUubmVlZFJlYWRhYmxlJiZBaSh0KSkpLGZ1bmN0aW9uKHQsZSl7ZS5yZWFkaW5nTW9yZXx8KGUucmVhZGluZ01vcmU9ITAsYyhNaSx0LGUpKX0odCxlKX1lbHNlIGl8fChlLnJlYWRpbmc9ITEpO3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4hdC5lbmRlZCYmKHQubmVlZFJlYWRhYmxlfHx0Lmxlbmd0aDx0LmhpZ2hXYXRlck1hcmt8fDA9PT10Lmxlbmd0aCl9KGUpfVZ0KGppLEwpLGppLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcy5fcmVhZGFibGVTdGF0ZTtyZXR1cm4gci5vYmplY3RNb2RlfHwic3RyaW5nIiE9dHlwZW9mIHR8fChlPWV8fHIuZGVmYXVsdEVuY29kaW5nKSE9PXIuZW5jb2RpbmcmJih0PWF0LmZyb20odCxlKSxlPSIiKSxUaSh0aGlzLHIsdCxlLCExKX0samkucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24odCl7cmV0dXJuIFRpKHRoaXMsdGhpcy5fcmVhZGFibGVTdGF0ZSx0LCIiLCEwKX0samkucHJvdG90eXBlLmlzUGF1c2VkPWZ1bmN0aW9uKCl7cmV0dXJuITE9PT10aGlzLl9yZWFkYWJsZVN0YXRlLmZsb3dpbmd9LGppLnByb3RvdHlwZS5zZXRFbmNvZGluZz1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fcmVhZGFibGVTdGF0ZS5kZWNvZGVyPW5ldyBtaSh0KSx0aGlzLl9yZWFkYWJsZVN0YXRlLmVuY29kaW5nPXQsdGhpc307ZnVuY3Rpb24gT2kodCxlKXtyZXR1cm4gdDw9MHx8MD09PWUubGVuZ3RoJiZlLmVuZGVkPzA6ZS5vYmplY3RNb2RlPzE6dCE9dD9lLmZsb3dpbmcmJmUubGVuZ3RoP2UuYnVmZmVyLmhlYWQuZGF0YS5sZW5ndGg6ZS5sZW5ndGg6KHQ+ZS5oaWdoV2F0ZXJNYXJrJiYoZS5oaWdoV2F0ZXJNYXJrPWZ1bmN0aW9uKHQpe3JldHVybiB0Pj04Mzg4NjA4P3Q9ODM4ODYwODoodC0tLHR8PXQ+Pj4xLHR8PXQ+Pj4yLHR8PXQ+Pj40LHR8PXQ+Pj44LHR8PXQ+Pj4xNix0KyspLHR9KHQpKSx0PD1lLmxlbmd0aD90OmUuZW5kZWQ/ZS5sZW5ndGg6KGUubmVlZFJlYWRhYmxlPSEwLDApKX1mdW5jdGlvbiBBaSh0KXt2YXIgZT10Ll9yZWFkYWJsZVN0YXRlO2UubmVlZFJlYWRhYmxlPSExLGUuZW1pdHRlZFJlYWRhYmxlfHwoa2koImVtaXRSZWFkYWJsZSIsZS5mbG93aW5nKSxlLmVtaXR0ZWRSZWFkYWJsZT0hMCxlLnN5bmM/YyhDaSx0KTpDaSh0KSl9ZnVuY3Rpb24gQ2kodCl7a2koImVtaXQgcmVhZGFibGUiKSx0LmVtaXQoInJlYWRhYmxlIiksQmkodCl9ZnVuY3Rpb24gTWkodCxlKXtmb3IodmFyIHI9ZS5sZW5ndGg7IWUucmVhZGluZyYmIWUuZmxvd2luZyYmIWUuZW5kZWQmJmUubGVuZ3RoPGUuaGlnaFdhdGVyTWFyayYmKGtpKCJtYXliZVJlYWRNb3JlIHJlYWQgMCIpLHQucmVhZCgwKSxyIT09ZS5sZW5ndGgpOylyPWUubGVuZ3RoO2UucmVhZGluZ01vcmU9ITF9ZnVuY3Rpb24geGkodCl7a2koInJlYWRhYmxlIG5leHR0aWNrIHJlYWQgMCIpLHQucmVhZCgwKX1mdW5jdGlvbiBMaSh0LGUpe2UucmVhZGluZ3x8KGtpKCJyZXN1bWUgcmVhZCAwIiksdC5yZWFkKDApKSxlLnJlc3VtZVNjaGVkdWxlZD0hMSxlLmF3YWl0RHJhaW49MCx0LmVtaXQoInJlc3VtZSIpLEJpKHQpLGUuZmxvd2luZyYmIWUucmVhZGluZyYmdC5yZWFkKDApfWZ1bmN0aW9uIEJpKHQpe3ZhciBlPXQuX3JlYWRhYmxlU3RhdGU7Zm9yKGtpKCJmbG93IixlLmZsb3dpbmcpO2UuZmxvd2luZyYmbnVsbCE9PXQucmVhZCgpOyk7fWZ1bmN0aW9uIFBpKHQsZSl7cmV0dXJuIDA9PT1lLmxlbmd0aD9udWxsOihlLm9iamVjdE1vZGU/cj1lLmJ1ZmZlci5zaGlmdCgpOiF0fHx0Pj1lLmxlbmd0aD8ocj1lLmRlY29kZXI/ZS5idWZmZXIuam9pbigiIik6MT09PWUuYnVmZmVyLmxlbmd0aD9lLmJ1ZmZlci5oZWFkLmRhdGE6ZS5idWZmZXIuY29uY2F0KGUubGVuZ3RoKSxlLmJ1ZmZlci5jbGVhcigpKTpyPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbjt0PGUuaGVhZC5kYXRhLmxlbmd0aD8obj1lLmhlYWQuZGF0YS5zbGljZSgwLHQpLGUuaGVhZC5kYXRhPWUuaGVhZC5kYXRhLnNsaWNlKHQpKTpuPXQ9PT1lLmhlYWQuZGF0YS5sZW5ndGg/ZS5zaGlmdCgpOnI/ZnVuY3Rpb24odCxlKXt2YXIgcj1lLmhlYWQsbj0xLGk9ci5kYXRhO3QtPWkubGVuZ3RoO2Zvcig7cj1yLm5leHQ7KXt2YXIgbz1yLmRhdGEsYT10Pm8ubGVuZ3RoP28ubGVuZ3RoOnQ7aWYoYT09PW8ubGVuZ3RoP2krPW86aSs9by5zbGljZSgwLHQpLDA9PT0odC09YSkpe2E9PT1vLmxlbmd0aD8oKytuLHIubmV4dD9lLmhlYWQ9ci5uZXh0OmUuaGVhZD1lLnRhaWw9bnVsbCk6KGUuaGVhZD1yLHIuZGF0YT1vLnNsaWNlKGEpKTticmVha30rK259cmV0dXJuIGUubGVuZ3RoLT1uLGl9KHQsZSk6ZnVuY3Rpb24odCxlKXt2YXIgcj1hdC5hbGxvY1Vuc2FmZSh0KSxuPWUuaGVhZCxpPTE7bi5kYXRhLmNvcHkociksdC09bi5kYXRhLmxlbmd0aDtmb3IoO249bi5uZXh0Oyl7dmFyIG89bi5kYXRhLGE9dD5vLmxlbmd0aD9vLmxlbmd0aDp0O2lmKG8uY29weShyLHIubGVuZ3RoLXQsMCxhKSwwPT09KHQtPWEpKXthPT09by5sZW5ndGg/KCsraSxuLm5leHQ/ZS5oZWFkPW4ubmV4dDplLmhlYWQ9ZS50YWlsPW51bGwpOihlLmhlYWQ9bixuLmRhdGE9by5zbGljZShhKSk7YnJlYWt9KytpfXJldHVybiBlLmxlbmd0aC09aSxyfSh0LGUpO3JldHVybiBufSh0LGUuYnVmZmVyLGUuZGVjb2Rlcikscik7dmFyIHJ9ZnVuY3Rpb24gVWkodCl7dmFyIGU9dC5fcmVhZGFibGVTdGF0ZTtpZihlLmxlbmd0aD4wKXRocm93IG5ldyBFcnJvcignImVuZFJlYWRhYmxlKCkiIGNhbGxlZCBvbiBub24tZW1wdHkgc3RyZWFtJyk7ZS5lbmRFbWl0dGVkfHwoZS5lbmRlZD0hMCxjKE5pLGUsdCkpfWZ1bmN0aW9uIE5pKHQsZSl7dC5lbmRFbWl0dGVkfHwwIT09dC5sZW5ndGh8fCh0LmVuZEVtaXR0ZWQ9ITAsZS5yZWFkYWJsZT0hMSxlLmVtaXQoImVuZCIpKX1mdW5jdGlvbiBEaSh0LGUpe2Zvcih2YXIgcj0wLG49dC5sZW5ndGg7cjxuO3IrKylpZih0W3JdPT09ZSlyZXR1cm4gcjtyZXR1cm4tMX1mdW5jdGlvbiBJaSgpe31mdW5jdGlvbiBxaSh0LGUscil7dGhpcy5jaHVuaz10LHRoaXMuZW5jb2Rpbmc9ZSx0aGlzLmNhbGxiYWNrPXIsdGhpcy5uZXh0PW51bGx9ZnVuY3Rpb24gRmkodCxlKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywiYnVmZmVyIix7Z2V0Olh0KChmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldEJ1ZmZlcigpfSksIl93cml0YWJsZVN0YXRlLmJ1ZmZlciBpcyBkZXByZWNhdGVkLiBVc2UgX3dyaXRhYmxlU3RhdGUuZ2V0QnVmZmVyIGluc3RlYWQuIil9KSx0PXR8fHt9LHRoaXMub2JqZWN0TW9kZT0hIXQub2JqZWN0TW9kZSxlIGluc3RhbmNlb2YgUWkmJih0aGlzLm9iamVjdE1vZGU9dGhpcy5vYmplY3RNb2RlfHwhIXQud3JpdGFibGVPYmplY3RNb2RlKTt2YXIgcj10LmhpZ2hXYXRlck1hcmssbj10aGlzLm9iamVjdE1vZGU/MTY6MTYzODQ7dGhpcy5oaWdoV2F0ZXJNYXJrPXJ8fDA9PT1yP3I6bix0aGlzLmhpZ2hXYXRlck1hcms9fn50aGlzLmhpZ2hXYXRlck1hcmssdGhpcy5uZWVkRHJhaW49ITEsdGhpcy5lbmRpbmc9ITEsdGhpcy5lbmRlZD0hMSx0aGlzLmZpbmlzaGVkPSExO3ZhciBpPSExPT09dC5kZWNvZGVTdHJpbmdzO3RoaXMuZGVjb2RlU3RyaW5ncz0haSx0aGlzLmRlZmF1bHRFbmNvZGluZz10LmRlZmF1bHRFbmNvZGluZ3x8InV0ZjgiLHRoaXMubGVuZ3RoPTAsdGhpcy53cml0aW5nPSExLHRoaXMuY29ya2VkPTAsdGhpcy5zeW5jPSEwLHRoaXMuYnVmZmVyUHJvY2Vzc2luZz0hMSx0aGlzLm9ud3JpdGU9ZnVuY3Rpb24odCl7IWZ1bmN0aW9uKHQsZSl7dmFyIHI9dC5fd3JpdGFibGVTdGF0ZSxuPXIuc3luYyxpPXIud3JpdGVjYjtpZihmdW5jdGlvbih0KXt0LndyaXRpbmc9ITEsdC53cml0ZWNiPW51bGwsdC5sZW5ndGgtPXQud3JpdGVsZW4sdC53cml0ZWxlbj0wfShyKSxlKSFmdW5jdGlvbih0LGUscixuLGkpey0tZS5wZW5kaW5nY2Iscj9jKGksbik6aShuKTt0Ll93cml0YWJsZVN0YXRlLmVycm9yRW1pdHRlZD0hMCx0LmVtaXQoImVycm9yIixuKX0odCxyLG4sZSxpKTtlbHNle3ZhciBvPUhpKHIpO298fHIuY29ya2VkfHxyLmJ1ZmZlclByb2Nlc3Npbmd8fCFyLmJ1ZmZlcmVkUmVxdWVzdHx8JGkodCxyKSxuP2MoWWksdCxyLG8saSk6WWkodCxyLG8saSl9fShlLHQpfSx0aGlzLndyaXRlY2I9bnVsbCx0aGlzLndyaXRlbGVuPTAsdGhpcy5idWZmZXJlZFJlcXVlc3Q9bnVsbCx0aGlzLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bnVsbCx0aGlzLnBlbmRpbmdjYj0wLHRoaXMucHJlZmluaXNoZWQ9ITEsdGhpcy5lcnJvckVtaXR0ZWQ9ITEsdGhpcy5idWZmZXJlZFJlcXVlc3RDb3VudD0wLHRoaXMuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyBWaSh0aGlzKX1mdW5jdGlvbiBXaSh0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBXaXx8dGhpcyBpbnN0YW5jZW9mIFFpKSlyZXR1cm4gbmV3IFdpKHQpO3RoaXMuX3dyaXRhYmxlU3RhdGU9bmV3IEZpKHQsdGhpcyksdGhpcy53cml0YWJsZT0hMCx0JiYoImZ1bmN0aW9uIj09dHlwZW9mIHQud3JpdGUmJih0aGlzLl93cml0ZT10LndyaXRlKSwiZnVuY3Rpb24iPT10eXBlb2YgdC53cml0ZXYmJih0aGlzLl93cml0ZXY9dC53cml0ZXYpKSxMLmNhbGwodGhpcyl9ZnVuY3Rpb24gemkodCxlLHIsbixpLG8sYSl7ZS53cml0ZWxlbj1uLGUud3JpdGVjYj1hLGUud3JpdGluZz0hMCxlLnN5bmM9ITAscj90Ll93cml0ZXYoaSxlLm9ud3JpdGUpOnQuX3dyaXRlKGksbyxlLm9ud3JpdGUpLGUuc3luYz0hMX1mdW5jdGlvbiBZaSh0LGUscixuKXtyfHxmdW5jdGlvbih0LGUpezA9PT1lLmxlbmd0aCYmZS5uZWVkRHJhaW4mJihlLm5lZWREcmFpbj0hMSx0LmVtaXQoImRyYWluIikpfSh0LGUpLGUucGVuZGluZ2NiLS0sbigpLEdpKHQsZSl9ZnVuY3Rpb24gJGkodCxlKXtlLmJ1ZmZlclByb2Nlc3Npbmc9ITA7dmFyIHI9ZS5idWZmZXJlZFJlcXVlc3Q7aWYodC5fd3JpdGV2JiZyJiZyLm5leHQpe3ZhciBuPWUuYnVmZmVyZWRSZXF1ZXN0Q291bnQsaT1uZXcgQXJyYXkobiksbz1lLmNvcmtlZFJlcXVlc3RzRnJlZTtvLmVudHJ5PXI7Zm9yKHZhciBhPTA7cjspaVthXT1yLHI9ci5uZXh0LGErPTE7emkodCxlLCEwLGUubGVuZ3RoLGksIiIsby5maW5pc2gpLGUucGVuZGluZ2NiKyssZS5sYXN0QnVmZmVyZWRSZXF1ZXN0PW51bGwsby5uZXh0PyhlLmNvcmtlZFJlcXVlc3RzRnJlZT1vLm5leHQsby5uZXh0PW51bGwpOmUuY29ya2VkUmVxdWVzdHNGcmVlPW5ldyBWaShlKX1lbHNle2Zvcig7cjspe3ZhciBzPXIuY2h1bmssdT1yLmVuY29kaW5nLGY9ci5jYWxsYmFjaztpZih6aSh0LGUsITEsZS5vYmplY3RNb2RlPzE6cy5sZW5ndGgscyx1LGYpLHI9ci5uZXh0LGUud3JpdGluZylicmVha31udWxsPT09ciYmKGUubGFzdEJ1ZmZlcmVkUmVxdWVzdD1udWxsKX1lLmJ1ZmZlcmVkUmVxdWVzdENvdW50PTAsZS5idWZmZXJlZFJlcXVlc3Q9cixlLmJ1ZmZlclByb2Nlc3Npbmc9ITF9ZnVuY3Rpb24gSGkodCl7cmV0dXJuIHQuZW5kaW5nJiYwPT09dC5sZW5ndGgmJm51bGw9PT10LmJ1ZmZlcmVkUmVxdWVzdCYmIXQuZmluaXNoZWQmJiF0LndyaXRpbmd9ZnVuY3Rpb24gSmkodCxlKXtlLnByZWZpbmlzaGVkfHwoZS5wcmVmaW5pc2hlZD0hMCx0LmVtaXQoInByZWZpbmlzaCIpKX1mdW5jdGlvbiBHaSh0LGUpe3ZhciByPUhpKGUpO3JldHVybiByJiYoMD09PWUucGVuZGluZ2NiPyhKaSh0LGUpLGUuZmluaXNoZWQ9ITAsdC5lbWl0KCJmaW5pc2giKSk6SmkodCxlKSkscn1mdW5jdGlvbiBWaSh0KXt2YXIgZT10aGlzO3RoaXMubmV4dD1udWxsLHRoaXMuZW50cnk9bnVsbCx0aGlzLmZpbmlzaD1mdW5jdGlvbihyKXt2YXIgbj1lLmVudHJ5O2ZvcihlLmVudHJ5PW51bGw7bjspe3ZhciBpPW4uY2FsbGJhY2s7dC5wZW5kaW5nY2ItLSxpKHIpLG49bi5uZXh0fXQuY29ya2VkUmVxdWVzdHNGcmVlP3QuY29ya2VkUmVxdWVzdHNGcmVlLm5leHQ9ZTp0LmNvcmtlZFJlcXVlc3RzRnJlZT1lfX1qaS5wcm90b3R5cGUucmVhZD1mdW5jdGlvbih0KXtraSgicmVhZCIsdCksdD1wYXJzZUludCh0LDEwKTt2YXIgZT10aGlzLl9yZWFkYWJsZVN0YXRlLHI9dDtpZigwIT09dCYmKGUuZW1pdHRlZFJlYWRhYmxlPSExKSwwPT09dCYmZS5uZWVkUmVhZGFibGUmJihlLmxlbmd0aD49ZS5oaWdoV2F0ZXJNYXJrfHxlLmVuZGVkKSlyZXR1cm4ga2koInJlYWQ6IGVtaXRSZWFkYWJsZSIsZS5sZW5ndGgsZS5lbmRlZCksMD09PWUubGVuZ3RoJiZlLmVuZGVkP1VpKHRoaXMpOkFpKHRoaXMpLG51bGw7aWYoMD09PSh0PU9pKHQsZSkpJiZlLmVuZGVkKXJldHVybiAwPT09ZS5sZW5ndGgmJlVpKHRoaXMpLG51bGw7dmFyIG4saT1lLm5lZWRSZWFkYWJsZTtyZXR1cm4ga2koIm5lZWQgcmVhZGFibGUiLGkpLCgwPT09ZS5sZW5ndGh8fGUubGVuZ3RoLXQ8ZS5oaWdoV2F0ZXJNYXJrKSYma2koImxlbmd0aCBsZXNzIHRoYW4gd2F0ZXJtYXJrIixpPSEwKSxlLmVuZGVkfHxlLnJlYWRpbmc/a2koInJlYWRpbmcgb3IgZW5kZWQiLGk9ITEpOmkmJihraSgiZG8gcmVhZCIpLGUucmVhZGluZz0hMCxlLnN5bmM9ITAsMD09PWUubGVuZ3RoJiYoZS5uZWVkUmVhZGFibGU9ITApLHRoaXMuX3JlYWQoZS5oaWdoV2F0ZXJNYXJrKSxlLnN5bmM9ITEsZS5yZWFkaW5nfHwodD1PaShyLGUpKSksbnVsbD09PShuPXQ+MD9QaSh0LGUpOm51bGwpPyhlLm5lZWRSZWFkYWJsZT0hMCx0PTApOmUubGVuZ3RoLT10LDA9PT1lLmxlbmd0aCYmKGUuZW5kZWR8fChlLm5lZWRSZWFkYWJsZT0hMCksciE9PXQmJmUuZW5kZWQmJlVpKHRoaXMpKSxudWxsIT09biYmdGhpcy5lbWl0KCJkYXRhIixuKSxufSxqaS5wcm90b3R5cGUuX3JlYWQ9ZnVuY3Rpb24odCl7dGhpcy5lbWl0KCJlcnJvciIsbmV3IEVycm9yKCJub3QgaW1wbGVtZW50ZWQiKSl9LGppLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcyxuPXRoaXMuX3JlYWRhYmxlU3RhdGU7c3dpdGNoKG4ucGlwZXNDb3VudCl7Y2FzZSAwOm4ucGlwZXM9dDticmVhaztjYXNlIDE6bi5waXBlcz1bbi5waXBlcyx0XTticmVhaztkZWZhdWx0Om4ucGlwZXMucHVzaCh0KX1uLnBpcGVzQ291bnQrPTEsa2koInBpcGUgY291bnQ9JWQgb3B0cz0laiIsbi5waXBlc0NvdW50LGUpO3ZhciBpPSFlfHwhMSE9PWUuZW5kP2E6ZjtmdW5jdGlvbiBvKHQpe2tpKCJvbnVucGlwZSIpLHQ9PT1yJiZmKCl9ZnVuY3Rpb24gYSgpe2tpKCJvbmVuZCIpLHQuZW5kKCl9bi5lbmRFbWl0dGVkP2MoaSk6ci5vbmNlKCJlbmQiLGkpLHQub24oInVucGlwZSIsbyk7dmFyIHM9ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKCl7dmFyIGU9dC5fcmVhZGFibGVTdGF0ZTtraSgicGlwZU9uRHJhaW4iLGUuYXdhaXREcmFpbiksZS5hd2FpdERyYWluJiZlLmF3YWl0RHJhaW4tLSwwPT09ZS5hd2FpdERyYWluJiZ0Lmxpc3RlbmVycygiZGF0YSIpLmxlbmd0aCYmKGUuZmxvd2luZz0hMCxCaSh0KSl9fShyKTt0Lm9uKCJkcmFpbiIscyk7dmFyIHU9ITE7ZnVuY3Rpb24gZigpe2tpKCJjbGVhbnVwIiksdC5yZW1vdmVMaXN0ZW5lcigiY2xvc2UiLHApLHQucmVtb3ZlTGlzdGVuZXIoImZpbmlzaCIsZyksdC5yZW1vdmVMaXN0ZW5lcigiZHJhaW4iLHMpLHQucmVtb3ZlTGlzdGVuZXIoImVycm9yIixkKSx0LnJlbW92ZUxpc3RlbmVyKCJ1bnBpcGUiLG8pLHIucmVtb3ZlTGlzdGVuZXIoImVuZCIsYSksci5yZW1vdmVMaXN0ZW5lcigiZW5kIixmKSxyLnJlbW92ZUxpc3RlbmVyKCJkYXRhIixsKSx1PSEwLCFuLmF3YWl0RHJhaW58fHQuX3dyaXRhYmxlU3RhdGUmJiF0Ll93cml0YWJsZVN0YXRlLm5lZWREcmFpbnx8cygpfXZhciBoPSExO2Z1bmN0aW9uIGwoZSl7a2koIm9uZGF0YSIpLGg9ITEsITEhPT10LndyaXRlKGUpfHxofHwoKDE9PT1uLnBpcGVzQ291bnQmJm4ucGlwZXM9PT10fHxuLnBpcGVzQ291bnQ+MSYmLTEhPT1EaShuLnBpcGVzLHQpKSYmIXUmJihraSgiZmFsc2Ugd3JpdGUgcmVzcG9uc2UsIHBhdXNlIixyLl9yZWFkYWJsZVN0YXRlLmF3YWl0RHJhaW4pLHIuX3JlYWRhYmxlU3RhdGUuYXdhaXREcmFpbisrLGg9ITApLHIucGF1c2UoKSl9ZnVuY3Rpb24gZChlKXt2YXIgcjtraSgib25lcnJvciIsZSkseSgpLHQucmVtb3ZlTGlzdGVuZXIoImVycm9yIixkKSwwPT09KHI9ImVycm9yIix0Lmxpc3RlbmVycyhyKS5sZW5ndGgpJiZ0LmVtaXQoImVycm9yIixlKX1mdW5jdGlvbiBwKCl7dC5yZW1vdmVMaXN0ZW5lcigiZmluaXNoIixnKSx5KCl9ZnVuY3Rpb24gZygpe2tpKCJvbmZpbmlzaCIpLHQucmVtb3ZlTGlzdGVuZXIoImNsb3NlIixwKSx5KCl9ZnVuY3Rpb24geSgpe2tpKCJ1bnBpcGUiKSxyLnVucGlwZSh0KX1yZXR1cm4gci5vbigiZGF0YSIsbCksZnVuY3Rpb24odCxlLHIpe2lmKCJmdW5jdGlvbiI9PXR5cGVvZiB0LnByZXBlbmRMaXN0ZW5lcilyZXR1cm4gdC5wcmVwZW5kTGlzdGVuZXIoZSxyKTt0Ll9ldmVudHMmJnQuX2V2ZW50c1tlXT9BcnJheS5pc0FycmF5KHQuX2V2ZW50c1tlXSk/dC5fZXZlbnRzW2VdLnVuc2hpZnQocik6dC5fZXZlbnRzW2VdPVtyLHQuX2V2ZW50c1tlXV06dC5vbihlLHIpfSh0LCJlcnJvciIsZCksdC5vbmNlKCJjbG9zZSIscCksdC5vbmNlKCJmaW5pc2giLGcpLHQuZW1pdCgicGlwZSIsciksbi5mbG93aW5nfHwoa2koInBpcGUgcmVzdW1lIiksci5yZXN1bWUoKSksdH0samkucHJvdG90eXBlLnVucGlwZT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9yZWFkYWJsZVN0YXRlO2lmKDA9PT1lLnBpcGVzQ291bnQpcmV0dXJuIHRoaXM7aWYoMT09PWUucGlwZXNDb3VudClyZXR1cm4gdCYmdCE9PWUucGlwZXN8fCh0fHwodD1lLnBpcGVzKSxlLnBpcGVzPW51bGwsZS5waXBlc0NvdW50PTAsZS5mbG93aW5nPSExLHQmJnQuZW1pdCgidW5waXBlIix0aGlzKSksdGhpcztpZighdCl7dmFyIHI9ZS5waXBlcyxuPWUucGlwZXNDb3VudDtlLnBpcGVzPW51bGwsZS5waXBlc0NvdW50PTAsZS5mbG93aW5nPSExO2Zvcih2YXIgaT0wO2k8bjtpKyspcltpXS5lbWl0KCJ1bnBpcGUiLHRoaXMpO3JldHVybiB0aGlzfXZhciBvPURpKGUucGlwZXMsdCk7cmV0dXJuLTE9PT1vfHwoZS5waXBlcy5zcGxpY2UobywxKSxlLnBpcGVzQ291bnQtPTEsMT09PWUucGlwZXNDb3VudCYmKGUucGlwZXM9ZS5waXBlc1swXSksdC5lbWl0KCJ1bnBpcGUiLHRoaXMpKSx0aGlzfSxqaS5wcm90b3R5cGUub249ZnVuY3Rpb24odCxlKXt2YXIgcj1MLnByb3RvdHlwZS5vbi5jYWxsKHRoaXMsdCxlKTtpZigiZGF0YSI9PT10KSExIT09dGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nJiZ0aGlzLnJlc3VtZSgpO2Vsc2UgaWYoInJlYWRhYmxlIj09PXQpe3ZhciBuPXRoaXMuX3JlYWRhYmxlU3RhdGU7bi5lbmRFbWl0dGVkfHxuLnJlYWRhYmxlTGlzdGVuaW5nfHwobi5yZWFkYWJsZUxpc3RlbmluZz1uLm5lZWRSZWFkYWJsZT0hMCxuLmVtaXR0ZWRSZWFkYWJsZT0hMSxuLnJlYWRpbmc/bi5sZW5ndGgmJkFpKHRoaXMpOmMoeGksdGhpcykpfXJldHVybiByfSxqaS5wcm90b3R5cGUuYWRkTGlzdGVuZXI9amkucHJvdG90eXBlLm9uLGppLnByb3RvdHlwZS5yZXN1bWU9ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9yZWFkYWJsZVN0YXRlO3JldHVybiB0LmZsb3dpbmd8fChraSgicmVzdW1lIiksdC5mbG93aW5nPSEwLGZ1bmN0aW9uKHQsZSl7ZS5yZXN1bWVTY2hlZHVsZWR8fChlLnJlc3VtZVNjaGVkdWxlZD0hMCxjKExpLHQsZSkpfSh0aGlzLHQpKSx0aGlzfSxqaS5wcm90b3R5cGUucGF1c2U9ZnVuY3Rpb24oKXtyZXR1cm4ga2koImNhbGwgcGF1c2UgZmxvd2luZz0laiIsdGhpcy5fcmVhZGFibGVTdGF0ZS5mbG93aW5nKSwhMSE9PXRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZyYmKGtpKCJwYXVzZSIpLHRoaXMuX3JlYWRhYmxlU3RhdGUuZmxvd2luZz0hMSx0aGlzLmVtaXQoInBhdXNlIikpLHRoaXN9LGppLnByb3RvdHlwZS53cmFwPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3JlYWRhYmxlU3RhdGUscj0hMSxuPXRoaXM7Zm9yKHZhciBpIGluIHQub24oImVuZCIsKGZ1bmN0aW9uKCl7aWYoa2koIndyYXBwZWQgZW5kIiksZS5kZWNvZGVyJiYhZS5lbmRlZCl7dmFyIHQ9ZS5kZWNvZGVyLmVuZCgpO3QmJnQubGVuZ3RoJiZuLnB1c2godCl9bi5wdXNoKG51bGwpfSkpLHQub24oImRhdGEiLChmdW5jdGlvbihpKXsoa2koIndyYXBwZWQgZGF0YSIpLGUuZGVjb2RlciYmKGk9ZS5kZWNvZGVyLndyaXRlKGkpKSxlLm9iamVjdE1vZGUmJm51bGw9PWkpfHwoZS5vYmplY3RNb2RlfHxpJiZpLmxlbmd0aCkmJihuLnB1c2goaSl8fChyPSEwLHQucGF1c2UoKSkpfSkpLHQpdm9pZCAwPT09dGhpc1tpXSYmImZ1bmN0aW9uIj09dHlwZW9mIHRbaV0mJih0aGlzW2ldPWZ1bmN0aW9uKGUpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiB0W2VdLmFwcGx5KHQsYXJndW1lbnRzKX19KGkpKTtyZXR1cm4gZnVuY3Rpb24odCxlKXtmb3IodmFyIHI9MCxuPXQubGVuZ3RoO3I8bjtyKyspZSh0W3JdLHIpfShbImVycm9yIiwiY2xvc2UiLCJkZXN0cm95IiwicGF1c2UiLCJyZXN1bWUiXSwoZnVuY3Rpb24oZSl7dC5vbihlLG4uZW1pdC5iaW5kKG4sZSkpfSkpLG4uX3JlYWQ9ZnVuY3Rpb24oZSl7a2koIndyYXBwZWQgX3JlYWQiLGUpLHImJihyPSExLHQucmVzdW1lKCkpfSxufSxqaS5fZnJvbUxpc3Q9UGksV2kuV3JpdGFibGVTdGF0ZT1GaSxWdChXaSxMKSxGaS5wcm90b3R5cGUuZ2V0QnVmZmVyPWZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMuYnVmZmVyZWRSZXF1ZXN0LGU9W107dDspZS5wdXNoKHQpLHQ9dC5uZXh0O3JldHVybiBlfSxXaS5wcm90b3R5cGUucGlwZT1mdW5jdGlvbigpe3RoaXMuZW1pdCgiZXJyb3IiLG5ldyBFcnJvcigiQ2Fubm90IHBpcGUsIG5vdCByZWFkYWJsZSIpKX0sV2kucHJvdG90eXBlLndyaXRlPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj10aGlzLl93cml0YWJsZVN0YXRlLGk9ITE7cmV0dXJuImZ1bmN0aW9uIj09dHlwZW9mIGUmJihyPWUsZT1udWxsKSxhdC5pc0J1ZmZlcih0KT9lPSJidWZmZXIiOmV8fChlPW4uZGVmYXVsdEVuY29kaW5nKSwiZnVuY3Rpb24iIT10eXBlb2YgciYmKHI9SWkpLG4uZW5kZWQ/ZnVuY3Rpb24odCxlKXt2YXIgcj1uZXcgRXJyb3IoIndyaXRlIGFmdGVyIGVuZCIpO3QuZW1pdCgiZXJyb3IiLHIpLGMoZSxyKX0odGhpcyxyKTpmdW5jdGlvbih0LGUscixuKXt2YXIgaT0hMCxvPSExO3JldHVybiBudWxsPT09cj9vPW5ldyBUeXBlRXJyb3IoIk1heSBub3Qgd3JpdGUgbnVsbCB2YWx1ZXMgdG8gc3RyZWFtIik6YXQuaXNCdWZmZXIocil8fCJzdHJpbmciPT10eXBlb2Ygcnx8dm9pZCAwPT09cnx8ZS5vYmplY3RNb2RlfHwobz1uZXcgVHlwZUVycm9yKCJJbnZhbGlkIG5vbi1zdHJpbmcvYnVmZmVyIGNodW5rIikpLG8mJih0LmVtaXQoImVycm9yIixvKSxjKG4sbyksaT0hMSksaX0odGhpcyxuLHQscikmJihuLnBlbmRpbmdjYisrLGk9ZnVuY3Rpb24odCxlLHIsbixpKXtyPWZ1bmN0aW9uKHQsZSxyKXt0Lm9iamVjdE1vZGV8fCExPT09dC5kZWNvZGVTdHJpbmdzfHwic3RyaW5nIiE9dHlwZW9mIGV8fChlPWF0LmZyb20oZSxyKSk7cmV0dXJuIGV9KGUscixuKSxhdC5pc0J1ZmZlcihyKSYmKG49ImJ1ZmZlciIpO3ZhciBvPWUub2JqZWN0TW9kZT8xOnIubGVuZ3RoO2UubGVuZ3RoKz1vO3ZhciBhPWUubGVuZ3RoPGUuaGlnaFdhdGVyTWFyazthfHwoZS5uZWVkRHJhaW49ITApO2lmKGUud3JpdGluZ3x8ZS5jb3JrZWQpe3ZhciBzPWUubGFzdEJ1ZmZlcmVkUmVxdWVzdDtlLmxhc3RCdWZmZXJlZFJlcXVlc3Q9bmV3IHFpKHIsbixpKSxzP3MubmV4dD1lLmxhc3RCdWZmZXJlZFJlcXVlc3Q6ZS5idWZmZXJlZFJlcXVlc3Q9ZS5sYXN0QnVmZmVyZWRSZXF1ZXN0LGUuYnVmZmVyZWRSZXF1ZXN0Q291bnQrPTF9ZWxzZSB6aSh0LGUsITEsbyxyLG4saSk7cmV0dXJuIGF9KHRoaXMsbix0LGUscikpLGl9LFdpLnByb3RvdHlwZS5jb3JrPWZ1bmN0aW9uKCl7dGhpcy5fd3JpdGFibGVTdGF0ZS5jb3JrZWQrK30sV2kucHJvdG90eXBlLnVuY29yaz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX3dyaXRhYmxlU3RhdGU7dC5jb3JrZWQmJih0LmNvcmtlZC0tLHQud3JpdGluZ3x8dC5jb3JrZWR8fHQuZmluaXNoZWR8fHQuYnVmZmVyUHJvY2Vzc2luZ3x8IXQuYnVmZmVyZWRSZXF1ZXN0fHwkaSh0aGlzLHQpKX0sV2kucHJvdG90eXBlLnNldERlZmF1bHRFbmNvZGluZz1mdW5jdGlvbih0KXtpZigic3RyaW5nIj09dHlwZW9mIHQmJih0PXQudG9Mb3dlckNhc2UoKSksIShbImhleCIsInV0ZjgiLCJ1dGYtOCIsImFzY2lpIiwiYmluYXJ5IiwiYmFzZTY0IiwidWNzMiIsInVjcy0yIiwidXRmMTZsZSIsInV0Zi0xNmxlIiwicmF3Il0uaW5kZXhPZigodCsiIikudG9Mb3dlckNhc2UoKSk+LTEpKXRocm93IG5ldyBUeXBlRXJyb3IoIlVua25vd24gZW5jb2Rpbmc6ICIrdCk7cmV0dXJuIHRoaXMuX3dyaXRhYmxlU3RhdGUuZGVmYXVsdEVuY29kaW5nPXQsdGhpc30sV2kucHJvdG90eXBlLl93cml0ZT1mdW5jdGlvbih0LGUscil7cihuZXcgRXJyb3IoIm5vdCBpbXBsZW1lbnRlZCIpKX0sV2kucHJvdG90eXBlLl93cml0ZXY9bnVsbCxXaS5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj10aGlzLl93cml0YWJsZVN0YXRlOyJmdW5jdGlvbiI9PXR5cGVvZiB0PyhyPXQsdD1udWxsLGU9bnVsbCk6ImZ1bmN0aW9uIj09dHlwZW9mIGUmJihyPWUsZT1udWxsKSxudWxsIT10JiZ0aGlzLndyaXRlKHQsZSksbi5jb3JrZWQmJihuLmNvcmtlZD0xLHRoaXMudW5jb3JrKCkpLG4uZW5kaW5nfHxuLmZpbmlzaGVkfHxmdW5jdGlvbih0LGUscil7ZS5lbmRpbmc9ITAsR2kodCxlKSxyJiYoZS5maW5pc2hlZD9jKHIpOnQub25jZSgiZmluaXNoIixyKSk7ZS5lbmRlZD0hMCx0LndyaXRhYmxlPSExfSh0aGlzLG4scil9LFZ0KFFpLGppKTtmb3IodmFyIEtpPU9iamVjdC5rZXlzKFdpLnByb3RvdHlwZSksWmk9MDtaaTxLaS5sZW5ndGg7WmkrKyl7dmFyIFhpPUtpW1ppXTtRaS5wcm90b3R5cGVbWGldfHwoUWkucHJvdG90eXBlW1hpXT1XaS5wcm90b3R5cGVbWGldKX1mdW5jdGlvbiBRaSh0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBRaSkpcmV0dXJuIG5ldyBRaSh0KTtqaS5jYWxsKHRoaXMsdCksV2kuY2FsbCh0aGlzLHQpLHQmJiExPT09dC5yZWFkYWJsZSYmKHRoaXMucmVhZGFibGU9ITEpLHQmJiExPT09dC53cml0YWJsZSYmKHRoaXMud3JpdGFibGU9ITEpLHRoaXMuYWxsb3dIYWxmT3Blbj0hMCx0JiYhMT09PXQuYWxsb3dIYWxmT3BlbiYmKHRoaXMuYWxsb3dIYWxmT3Blbj0hMSksdGhpcy5vbmNlKCJlbmQiLHRvKX1mdW5jdGlvbiB0bygpe3RoaXMuYWxsb3dIYWxmT3Blbnx8dGhpcy5fd3JpdGFibGVTdGF0ZS5lbmRlZHx8Yyhlbyx0aGlzKX1mdW5jdGlvbiBlbyh0KXt0LmVuZCgpfWZ1bmN0aW9uIHJvKHQpe3RoaXMuYWZ0ZXJUcmFuc2Zvcm09ZnVuY3Rpb24oZSxyKXtyZXR1cm4gZnVuY3Rpb24odCxlLHIpe3ZhciBuPXQuX3RyYW5zZm9ybVN0YXRlO24udHJhbnNmb3JtaW5nPSExO3ZhciBpPW4ud3JpdGVjYjtpZighaSlyZXR1cm4gdC5lbWl0KCJlcnJvciIsbmV3IEVycm9yKCJubyB3cml0ZWNiIGluIFRyYW5zZm9ybSBjbGFzcyIpKTtuLndyaXRlY2h1bms9bnVsbCxuLndyaXRlY2I9bnVsbCxudWxsIT1yJiZ0LnB1c2gocik7aShlKTt2YXIgbz10Ll9yZWFkYWJsZVN0YXRlO28ucmVhZGluZz0hMSwoby5uZWVkUmVhZGFibGV8fG8ubGVuZ3RoPG8uaGlnaFdhdGVyTWFyaykmJnQuX3JlYWQoby5oaWdoV2F0ZXJNYXJrKX0odCxlLHIpfSx0aGlzLm5lZWRUcmFuc2Zvcm09ITEsdGhpcy50cmFuc2Zvcm1pbmc9ITEsdGhpcy53cml0ZWNiPW51bGwsdGhpcy53cml0ZWNodW5rPW51bGwsdGhpcy53cml0ZWVuY29kaW5nPW51bGx9ZnVuY3Rpb24gbm8odCl7aWYoISh0aGlzIGluc3RhbmNlb2Ygbm8pKXJldHVybiBuZXcgbm8odCk7UWkuY2FsbCh0aGlzLHQpLHRoaXMuX3RyYW5zZm9ybVN0YXRlPW5ldyBybyh0aGlzKTt2YXIgZT10aGlzO3RoaXMuX3JlYWRhYmxlU3RhdGUubmVlZFJlYWRhYmxlPSEwLHRoaXMuX3JlYWRhYmxlU3RhdGUuc3luYz0hMSx0JiYoImZ1bmN0aW9uIj09dHlwZW9mIHQudHJhbnNmb3JtJiYodGhpcy5fdHJhbnNmb3JtPXQudHJhbnNmb3JtKSwiZnVuY3Rpb24iPT10eXBlb2YgdC5mbHVzaCYmKHRoaXMuX2ZsdXNoPXQuZmx1c2gpKSx0aGlzLm9uY2UoInByZWZpbmlzaCIsKGZ1bmN0aW9uKCl7ImZ1bmN0aW9uIj09dHlwZW9mIHRoaXMuX2ZsdXNoP3RoaXMuX2ZsdXNoKChmdW5jdGlvbih0KXtpbyhlLHQpfSkpOmlvKGUpfSkpfWZ1bmN0aW9uIGlvKHQsZSl7aWYoZSlyZXR1cm4gdC5lbWl0KCJlcnJvciIsZSk7dmFyIHI9dC5fd3JpdGFibGVTdGF0ZSxuPXQuX3RyYW5zZm9ybVN0YXRlO2lmKHIubGVuZ3RoKXRocm93IG5ldyBFcnJvcigiQ2FsbGluZyB0cmFuc2Zvcm0gZG9uZSB3aGVuIHdzLmxlbmd0aCAhPSAwIik7aWYobi50cmFuc2Zvcm1pbmcpdGhyb3cgbmV3IEVycm9yKCJDYWxsaW5nIHRyYW5zZm9ybSBkb25lIHdoZW4gc3RpbGwgdHJhbnNmb3JtaW5nIik7cmV0dXJuIHQucHVzaChudWxsKX1mdW5jdGlvbiBvbyh0KXtpZighKHRoaXMgaW5zdGFuY2VvZiBvbykpcmV0dXJuIG5ldyBvbyh0KTtuby5jYWxsKHRoaXMsdCl9ZnVuY3Rpb24gYW8oKXtMLmNhbGwodGhpcyl9ZnVuY3Rpb24gc28odCxlLHIpe3Q9dHx8ZnVuY3Rpb24odCl7dGhpcy5xdWV1ZSh0KX0sZT1lfHxmdW5jdGlvbigpe3RoaXMucXVldWUobnVsbCl9O2xldCBuPSExLGk9ITEsbz1bXSxhPSExLHM9bmV3IGFvO2Z1bmN0aW9uIHUoKXtmb3IoO28ubGVuZ3RoJiYhcy5wYXVzZWQ7KXtsZXQgdD1vLnNoaWZ0KCk7aWYobnVsbD09PXQpcmV0dXJuIHMuZW1pdCgiZW5kIik7cy5lbWl0KCJkYXRhIix0KX19ZnVuY3Rpb24gZigpe3Mud3JpdGFibGU9ITEsZS5jYWxsKHMpLCFzLnJlYWRhYmxlJiZzLmF1dG9EZXN0cm95JiZzLmRlc3Ryb3koKX1yZXR1cm4gcy5yZWFkYWJsZT1zLndyaXRhYmxlPSEwLHMucGF1c2VkPSExLHMuYXV0b0Rlc3Ryb3k9IShyJiYhMT09PXIuYXV0b0Rlc3Ryb3kpLHMud3JpdGU9ZnVuY3Rpb24oZSl7cmV0dXJuIHQuY2FsbCh0aGlzLGUpLCFzLnBhdXNlZH0scy5xdWV1ZT1zLnB1c2g9ZnVuY3Rpb24odCl7cmV0dXJuIGF8fChudWxsPT09dCYmKGE9ITApLG8ucHVzaCh0KSx1KCkpLHN9LHMub24oImVuZCIsKGZ1bmN0aW9uKCl7cy5yZWFkYWJsZT0hMSwhcy53cml0YWJsZSYmcy5hdXRvRGVzdHJveSYmUi5uZXh0VGljaygoZnVuY3Rpb24oKXtzLmRlc3Ryb3koKX0pKX0pKSxzLmVuZD1mdW5jdGlvbih0KXtpZighbilyZXR1cm4gbj0hMCxhcmd1bWVudHMubGVuZ3RoJiZzLndyaXRlKHQpLGYoKSxzfSxzLmRlc3Ryb3k9ZnVuY3Rpb24oKXtpZighaSlyZXR1cm4gaT0hMCxuPSEwLG8ubGVuZ3RoPTAscy53cml0YWJsZT1zLnJlYWRhYmxlPSExLHMuZW1pdCgiY2xvc2UiKSxzfSxzLnBhdXNlPWZ1bmN0aW9uKCl7aWYoIXMucGF1c2VkKXJldHVybiBzLnBhdXNlZD0hMCxzfSxzLnJlc3VtZT1mdW5jdGlvbigpe3JldHVybiBzLnBhdXNlZCYmKHMucGF1c2VkPSExLHMuZW1pdCgicmVzdW1lIikpLHUoKSxzLnBhdXNlZHx8cy5lbWl0KCJkcmFpbiIpLHN9LHN9VnQobm8sUWkpLG5vLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuX3RyYW5zZm9ybVN0YXRlLm5lZWRUcmFuc2Zvcm09ITEsUWkucHJvdG90eXBlLnB1c2guY2FsbCh0aGlzLHQsZSl9LG5vLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKHQsZSxyKXt0aHJvdyBuZXcgRXJyb3IoIk5vdCBpbXBsZW1lbnRlZCIpfSxuby5wcm90b3R5cGUuX3dyaXRlPWZ1bmN0aW9uKHQsZSxyKXt2YXIgbj10aGlzLl90cmFuc2Zvcm1TdGF0ZTtpZihuLndyaXRlY2I9cixuLndyaXRlY2h1bms9dCxuLndyaXRlZW5jb2Rpbmc9ZSwhbi50cmFuc2Zvcm1pbmcpe3ZhciBpPXRoaXMuX3JlYWRhYmxlU3RhdGU7KG4ubmVlZFRyYW5zZm9ybXx8aS5uZWVkUmVhZGFibGV8fGkubGVuZ3RoPGkuaGlnaFdhdGVyTWFyaykmJnRoaXMuX3JlYWQoaS5oaWdoV2F0ZXJNYXJrKX19LG5vLnByb3RvdHlwZS5fcmVhZD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl90cmFuc2Zvcm1TdGF0ZTtudWxsIT09ZS53cml0ZWNodW5rJiZlLndyaXRlY2ImJiFlLnRyYW5zZm9ybWluZz8oZS50cmFuc2Zvcm1pbmc9ITAsdGhpcy5fdHJhbnNmb3JtKGUud3JpdGVjaHVuayxlLndyaXRlZW5jb2RpbmcsZS5hZnRlclRyYW5zZm9ybSkpOmUubmVlZFRyYW5zZm9ybT0hMH0sVnQob28sbm8pLG9vLnByb3RvdHlwZS5fdHJhbnNmb3JtPWZ1bmN0aW9uKHQsZSxyKXtyKG51bGwsdCl9LFZ0KGFvLEwpLGFvLlJlYWRhYmxlPWppLGFvLldyaXRhYmxlPVdpLGFvLkR1cGxleD1RaSxhby5UcmFuc2Zvcm09bm8sYW8uUGFzc1Rocm91Z2g9b28sYW8uU3RyZWFtPWFvLGFvLnByb3RvdHlwZS5waXBlPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcztmdW5jdGlvbiBuKGUpe3Qud3JpdGFibGUmJiExPT09dC53cml0ZShlKSYmci5wYXVzZSYmci5wYXVzZSgpfWZ1bmN0aW9uIGkoKXtyLnJlYWRhYmxlJiZyLnJlc3VtZSYmci5yZXN1bWUoKX1yLm9uKCJkYXRhIixuKSx0Lm9uKCJkcmFpbiIsaSksdC5faXNTdGRpb3x8ZSYmITE9PT1lLmVuZHx8KHIub24oImVuZCIsYSksci5vbigiY2xvc2UiLHMpKTt2YXIgbz0hMTtmdW5jdGlvbiBhKCl7b3x8KG89ITAsdC5lbmQoKSl9ZnVuY3Rpb24gcygpe298fChvPSEwLCJmdW5jdGlvbiI9PXR5cGVvZiB0LmRlc3Ryb3kmJnQuZGVzdHJveSgpKX1mdW5jdGlvbiB1KHQpe2lmKGYoKSwwPT09TC5saXN0ZW5lckNvdW50KHRoaXMsImVycm9yIikpdGhyb3cgdH1mdW5jdGlvbiBmKCl7ci5yZW1vdmVMaXN0ZW5lcigiZGF0YSIsbiksdC5yZW1vdmVMaXN0ZW5lcigiZHJhaW4iLGkpLHIucmVtb3ZlTGlzdGVuZXIoImVuZCIsYSksci5yZW1vdmVMaXN0ZW5lcigiY2xvc2UiLHMpLHIucmVtb3ZlTGlzdGVuZXIoImVycm9yIix1KSx0LnJlbW92ZUxpc3RlbmVyKCJlcnJvciIsdSksci5yZW1vdmVMaXN0ZW5lcigiZW5kIixmKSxyLnJlbW92ZUxpc3RlbmVyKCJjbG9zZSIsZiksdC5yZW1vdmVMaXN0ZW5lcigiY2xvc2UiLGYpfXJldHVybiByLm9uKCJlcnJvciIsdSksdC5vbigiZXJyb3IiLHUpLHIub24oImVuZCIsZiksci5vbigiY2xvc2UiLGYpLHQub24oImNsb3NlIixmKSx0LmVtaXQoInBpcGUiLHIpLHR9LHNvLnRocm91Z2g9c287bGV0IHVvPXtwYXJzZTpmdW5jdGlvbih0LGUpe2xldCByLG47ZnVuY3Rpb24gaSh0LGUpe3JldHVybiJzdHJpbmciPT10eXBlb2YgdD9lPT09dDp0JiYiZnVuY3Rpb24iPT10eXBlb2YgdC5leGVjP3QuZXhlYyhlKToiYm9vbGVhbiI9PXR5cGVvZiB0fHwib2JqZWN0Ij09dHlwZW9mIHQ/dDoiZnVuY3Rpb24iPT10eXBlb2YgdCYmdChlKX1sZXQgbz1uZXcgYmksYT1zbygoZnVuY3Rpb24odCl7InN0cmluZyI9PXR5cGVvZiB0JiYodD1hdC5mcm9tKHQpKSxvLndyaXRlKHQpfSksKGZ1bmN0aW9uKHQpe3QmJmEud3JpdGUodCksciYmYS5lbWl0KCJoZWFkZXIiLHIpLG4mJmEuZW1pdCgiZm9vdGVyIixuKSxhLnF1ZXVlKG51bGwpfSkpO2Z1bmN0aW9uIHModCxlKXshMSE9PXImJihyPXJ8fHt9LHJbdF09ZSksITEhPT1uJiYhMT09PXImJihuPW58fHt9LG5bdF09ZSl9cmV0dXJuInN0cmluZyI9PXR5cGVvZiB0JiYodD10LnNwbGl0KCIuIikubWFwKChmdW5jdGlvbih0KXtyZXR1cm4iJCoiPT09dD97ZW1pdEtleTohMH06IioiPT09dHx8KCIiPT09dD97cmVjdXJzZTohMH06dCl9KSkpLHQmJnQubGVuZ3RofHwodD1udWxsKSxvLm9uVmFsdWU9ZnVuY3Rpb24obil7aWYodGhpcy5yb290fHwoYS5yb290PW4pLCF0KXJldHVybjtsZXQgbz0wLHU9MCxmPSExLGg9ITE7Zm9yKDtvPHQubGVuZ3RoOyl7bGV0IGUscj10W29dO2lmKHUrKyxyJiYhci5yZWN1cnNlKXtpZihlPXU9PT10aGlzLnN0YWNrLmxlbmd0aD90aGlzOnRoaXMuc3RhY2tbdV0sIWUpcmV0dXJuO2lmKCFpKHIsZS5rZXkpKXJldHVybiB2b2lkIHMoZS5rZXksbik7Zj0hIXIuZW1pdEtleSxoPSEhci5lbWl0UGF0aCxvKyt9ZWxzZXtvKys7bGV0IHI9dFtvXTtpZighcilyZXR1cm47Zm9yKDs7KXtpZihlPXU9PT10aGlzLnN0YWNrLmxlbmd0aD90aGlzOnRoaXMuc3RhY2tbdV0sIWUpcmV0dXJuO2lmKGkocixlLmtleSkpe28rKyxPYmplY3QuaXNGcm96ZW4odGhpcy5zdGFja1t1XSl8fCh0aGlzLnN0YWNrW3VdLnZhbHVlPW51bGwpO2JyZWFrfXMoZS5rZXksbiksdSsrfX19aWYociYmKGEuZW1pdCgiaGVhZGVyIixyKSxyPSExKSx1IT09dGhpcy5zdGFjay5sZW5ndGgpcmV0dXJuO2xldCBsPXRoaXMuc3RhY2suc2xpY2UoMSkubWFwKChmdW5jdGlvbih0KXtyZXR1cm4gdC5rZXl9KSkuY29uY2F0KFt0aGlzLmtleV0pLGM9bjtudWxsIT1jJiZudWxsIT0oYz1lP2UoYyxsKTpjKSYmKChmfHxoKSYmKGM9e3ZhbHVlOmN9LGYmJihjLmtleT10aGlzLmtleSksaCYmKGMucGF0aD1sKSksYS5xdWV1ZShjKSksdGhpcy52YWx1ZSYmZGVsZXRlIHRoaXMudmFsdWVbdGhpcy5rZXldO2ZvcihsZXQgdCBpbiB0aGlzLnN0YWNrKU9iamVjdC5pc0Zyb3plbih0aGlzLnN0YWNrW3RdKXx8KHRoaXMuc3RhY2tbdF0udmFsdWU9bnVsbCl9LG8uX29uVG9rZW49by5vblRva2VuLG8ub25Ub2tlbj1mdW5jdGlvbihlLHIpe28uX29uVG9rZW4oZSxyKSwwPT09dGhpcy5zdGFjay5sZW5ndGgmJmEucm9vdCYmKHR8fGEucXVldWUoYS5yb290KSxhLnJvb3Q9bnVsbCl9LG8ub25FcnJvcj1mdW5jdGlvbih0KXt0Lm1lc3NhZ2UuaW5kZXhPZigiYXQgcG9zaXRpb24iKT4tMSYmKHQubWVzc2FnZT0iSW52YWxpZCBKU09OICgiK3QubWVzc2FnZSsiKSIpLGEuZW1pdCgiZXJyb3IiLHQpfSxhfX0sZm89ZnVuY3Rpb24odCxlKXtyZXR1cm4gZm89T2JqZWN0LnNldFByb3RvdHlwZU9mfHx7X19wcm90b19fOltdfWluc3RhbmNlb2YgQXJyYXkmJmZ1bmN0aW9uKHQsZSl7dC5fX3Byb3RvX189ZX18fGZ1bmN0aW9uKHQsZSl7Zm9yKGxldCByIGluIGUpZS5oYXNPd25Qcm9wZXJ0eShyKSYmKHRbcl09ZVtyXSl9LGZvKHQsZSl9O2xldCBobyxsbz0vW1xcIlx1MDAwMC1cdTAwMWZcdTAwN2YtXHUwMDlmXHUwMGFkXHUwNjAwLVx1MDYwNFx1MDcwZlx1MTdiNFx1MTdiNVx1MjAwYy1cdTIwMGZcdTIwMjgtXHUyMDJmXHUyMDYwLVx1MjA2Zlx1ZmVmZlx1ZmZmMC1cdWZmZmZdL2csY289eyJcYiI6IlxcYiIsIlx0IjoiXFx0IiwiXG4iOiJcXG4iLCJcZiI6IlxcZiIsIlxyIjoiXFxyIiwnIic6J1xcIicsIlxcIjoiXFxcXCJ9O2Z1bmN0aW9uIHBvKHQpe3JldHVybiB0PyJmdW5jdGlvbiI9PXR5cGVvZiB0LnRoZW4/aG8uUHJvbWlzZTpmdW5jdGlvbih0KXtyZXR1cm4iZnVuY3Rpb24iPT10eXBlb2YgdC5yZWFkJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5wYXVzZSYmImZ1bmN0aW9uIj09dHlwZW9mIHQucmVzdW1lJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5waXBlJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5vbmNlJiYiZnVuY3Rpb24iPT10eXBlb2YgdC5yZW1vdmVMaXN0ZW5lcn0odCk/dC5fcmVhZGFibGVTdGF0ZS5vYmplY3RNb2RlP2hvLlJlYWRhYmxlT2JqZWN0OmhvLlJlYWRhYmxlU3RyaW5nOkFycmF5LmlzQXJyYXkodCk/aG8uQXJyYXk6Im9iamVjdCI9PXR5cGVvZiB0fHx0IGluc3RhbmNlb2YgT2JqZWN0P2hvLk9iamVjdDpoby5QcmltaXRpdmU6aG8uUHJpbWl0aXZlfSFmdW5jdGlvbih0KXt0W3QuQXJyYXk9MF09IkFycmF5Iix0W3QuT2JqZWN0PTFdPSJPYmplY3QiLHRbdC5SZWFkYWJsZVN0cmluZz0yXT0iUmVhZGFibGVTdHJpbmciLHRbdC5SZWFkYWJsZU9iamVjdD0zXT0iUmVhZGFibGVPYmplY3QiLHRbdC5QcmltaXRpdmU9NF09IlByaW1pdGl2ZSIsdFt0LlByb21pc2U9NV09IlByb21pc2UifShob3x8KGhvPXt9KSk7bGV0IGdvPVtdO2dvW2hvLkFycmF5XT0iWyIsZ29baG8uT2JqZWN0XT0ieyIsZ29baG8uUmVhZGFibGVTdHJpbmddPSciJyxnb1toby5SZWFkYWJsZU9iamVjdF09IlsiO2xldCB5bz1bXTt5b1toby5BcnJheV09Il0iLHlvW2hvLk9iamVjdF09In0iLHlvW2hvLlJlYWRhYmxlU3RyaW5nXT0nIicseW9baG8uUmVhZGFibGVPYmplY3RdPSJdIjtsZXQgYm89W107Zm9yKGxldCB0PTAsZT1PYmplY3QuZW50cmllcyhobyk7dDxlLmxlbmd0aDt0Kyspe2xldCByPWVbdF0sbj1yWzBdLGk9clsxXTsibnVtYmVyIj09dHlwZW9mIGkmJihib1tpXT0icHJvY2VzcyIrbil9ZnVuY3Rpb24gdm8odCl7cmV0dXJuIHQucmVwbGFjZShsbywoZnVuY3Rpb24odCl7bGV0IGU9Y29bdF07cmV0dXJuInN0cmluZyI9PXR5cGVvZiBlP2U6IlxcdSIrdC5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS5wYWRTdGFydCg0LCIwIil9KSl9ZnVuY3Rpb24gd28odCl7cmV0dXJuJyInK3ZvKHQpKyciJ31mdW5jdGlvbiBtbyh0LGUpe2xldCByPXQucmVhZChlKTtyZXR1cm4gbnVsbD09PXI/bmV3IFByb21pc2UoKGZ1bmN0aW9uKGUscil7bGV0IG49ZnVuY3Rpb24oKXtyZXR1cm4gZShudWxsKX07dC5vbmNlKCJlbmQiLG4pLHQub25jZSgiZXJyb3IiLHIpLHQub25jZSgicmVhZGFibGUiLChmdW5jdGlvbigpe3QucmVtb3ZlTGlzdGVuZXIoImVuZCIsbiksdC5yZW1vdmVMaXN0ZW5lcigiZXJyb3IiLHIpLGUodC5yZWFkKCkpfSkpfSkpOlByb21pc2UucmVzb2x2ZShyKX1mdW5jdGlvbiBfbyh0KXtyZXR1cm4gdC50aGVuKChmdW5jdGlvbih0KXtyZXR1cm4gcG8odCk9PT1oby5Qcm9taXNlP19vKHQpOnR9KSl9bGV0IFNvPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGUoZSxyLG4saSl7dm9pZCAwPT09aSYmKGk9ITEpO2xldCBvPXQuY2FsbCh0aGlzKXx8dGhpcztvLmN5Y2xlPWksby5zdGFjaz1bXSxvLmRlcHRoPTAsby5wdXNoQ2FsbGVkPSExLG8uZW5kPSExLG8uaXNSZWFkaW5nPSExLG8ucmVhZE1vcmU9ITE7bGV0IGE9dHlwZW9mIG47cmV0dXJuInN0cmluZyIhPT1hJiYibnVtYmVyIiE9PWF8fChvLmdhcD1OdW1iZXIuaXNGaW5pdGUobik/IiAiLnJlcGVhdChuKTpuKSxPYmplY3QuYXNzaWduKG8se3Zpc2l0ZWQ6aT9uZXcgV2Vha01hcDpuZXcgV2Vha1NldCxyZXBsYWNlckZ1bmN0aW9uOnIgaW5zdGFuY2VvZiBGdW5jdGlvbiYmcixyZXBsYWNlckFycmF5OkFycmF5LmlzQXJyYXkocikmJnJ9KSxyIGluc3RhbmNlb2YgRnVuY3Rpb24mJihvLnJlcGxhY2VyRnVuY3Rpb249ciksQXJyYXkuaXNBcnJheShyKSYmKG8ucmVwbGFjZXJBcnJheT1yKSxvLmFkZFRvU3RhY2soZSksb31yZXR1cm4gZnVuY3Rpb24odCxlKXtmdW5jdGlvbiByKCl7dGhpcy5jb25zdHJ1Y3Rvcj10fWZvKHQsZSksdC5wcm90b3R5cGU9bnVsbD09PWU/T2JqZWN0LmNyZWF0ZShlKTooci5wcm90b3R5cGU9ZS5wcm90b3R5cGUsbmV3IHIpfShlLHQpLGUucHJvdG90eXBlLmN5Y2xlcj1mdW5jdGlvbih0LGUpe2xldCByPXRoaXMudmlzaXRlZC5nZXQoZSk7aWYocilyZXR1cm57JHJlZjpyfTtsZXQgbj10aGlzLnBhdGgoKTtyZXR1cm4gdm9pZCAwIT09dCYmbi5wdXNoKHQpLG49bi5tYXAoKGZ1bmN0aW9uKHQpe3JldHVybiJbIisoTnVtYmVyLmlzSW50ZWdlcih0KT90OndvKHQpKSsiXSJ9KSksdGhpcy52aXNpdGVkLnNldChlLG4ubGVuZ3RoPyIkIituLmpvaW4oIiIpOiIkIiksZX0sZS5wcm90b3R5cGUuYWRkVG9TdGFjaz1mdW5jdGlvbih0LGUscixuKXtsZXQgaSxvLGE9dGhpcyxzPXQ7dGhpcy5yZXBsYWNlckZ1bmN0aW9uJiYocz10aGlzLnJlcGxhY2VyRnVuY3Rpb24oZXx8cixzLHRoaXMpKSxzJiZzLnRvSlNPTiBpbnN0YW5jZW9mIEZ1bmN0aW9uJiYocz1zLnRvSlNPTigpKSwocyBpbnN0YW5jZW9mIEZ1bmN0aW9ufHwic3ltYm9sIj09dHlwZW9mIHQpJiYocz12b2lkIDApLHZvaWQgMCE9PWUmJnRoaXMucmVwbGFjZXJBcnJheSYmKHRoaXMucmVwbGFjZXJBcnJheS5pbmNsdWRlcyhlKXx8KHM9dm9pZCAwKSk7bGV0IHU9cG8ocyk7aWYoKG4mJm4udHlwZT09PWhvLkFycmF5fHx2b2lkIDAhPT1zKSYmdSE9PWhvLlByb21pc2UmJihuJiYhbi5maXJzdCYmdGhpcy5fcHVzaCgiLCIpLG4mJihuLmZpcnN0PSExKSksdm9pZCAwIT09cyYmdSE9PWhvLlByb21pc2UmJmUmJih0aGlzLmdhcD90aGlzLl9wdXNoKCJcbiIrdGhpcy5nYXAucmVwZWF0KHRoaXMuZGVwdGgpKyciJyt2byhlKSsnIjogJyk6dGhpcy5fcHVzaCgnIicrdm8oZSkrJyI6JykpLHUhPT1oby5QcmltaXRpdmUpaWYodGhpcy5jeWNsZSlzPXRoaXMuY3ljbGVyKGV8fHIscyksdT1wbyhzKTtlbHNle2lmKHRoaXMudmlzaXRlZC5oYXMocykpdGhyb3cgT2JqZWN0LmFzc2lnbihuZXcgRXJyb3IoIkNvbnZlcnRpbmcgY2lyY3VsYXIgc3RydWN0dXJlIHRvIEpTT04iKSx7cmVhbFZhbHVlOnMsa2V5OmV8fHJ9KTt0aGlzLnZpc2l0ZWQuYWRkKHMpfSFlJiZyPi0xJiZ0aGlzLmRlcHRoJiZ0aGlzLmdhcCYmdGhpcy5fcHVzaCgiXG4iK3RoaXMuZ2FwLnJlcGVhdCh0aGlzLmRlcHRoKSk7bGV0IGY9Z29bdV07ZiYmdGhpcy5fcHVzaChmKTtsZXQgaD17a2V5OmUsaW5kZXg6cix0eXBlOnUscGFyZW50Om4sdmFsdWU6cyxmaXJzdDohMH07cmV0dXJuIHU9PT1oby5PYmplY3Q/KHRoaXMuZGVwdGgrPTEsaC51bnJlYWQ9T2JqZWN0LmtleXMocyksaC5pc0VtcHR5PSFoLnVucmVhZC5sZW5ndGgpOnU9PT1oby5BcnJheT8odGhpcy5kZXB0aCs9MSxoLnVucmVhZD1zLmxlbmd0aCxoLmFycmF5TGVuZ3RoPWgudW5yZWFkLGguaXNFbXB0eT0haC51bnJlYWQpOnUhPT1oby5SZWFkYWJsZVN0cmluZyYmdSE9PWhvLlJlYWRhYmxlT2JqZWN0fHwodGhpcy5kZXB0aCs9MSxzLnJlYWRhYmxlRW5kZWR8fChudWxsPT09KGk9cy5fcmVhZGFibGVTdGF0ZSl8fHZvaWQgMD09PWk/dm9pZCAwOmkuZW5kRW1pdHRlZCk/dGhpcy5lbWl0KCJlcnJvciIsbmV3IEVycm9yKCJSZWFkYWJsZSBTdHJlYW0gaGFzIGVuZGVkIGJlZm9yZSBpdCB3YXMgc2VyaWFsaXplZC4gQWxsIHN0cmVhbSBkYXRhIGhhdmUgYmVlbiBsb3N0IikscyxlfHxyKToocy5yZWFkYWJsZUZsb3dpbmd8fChudWxsPT09KG89cy5fcmVhZGFibGVTdGF0ZSl8fHZvaWQgMD09PW8/dm9pZCAwOm8uZmxvd2luZykpJiYocy5wYXVzZSgpLHRoaXMuZW1pdCgiZXJyb3IiLG5ldyBFcnJvcigiUmVhZGFibGUgU3RyZWFtIGlzIGluIGZsb3dpbmcgbW9kZSwgZGF0YSBtYXkgaGF2ZSBiZWVuIGxvc3QuIFRyeWluZyB0byBwYXVzZSBzdHJlYW0uIikscyxlfHxyKSksaC5yZWFkQ291bnQ9MCxzLm9uY2UoImVuZCIsKGZ1bmN0aW9uKCl7aC5lbmQ9ITAsYS5fX3JlYWQoKX0pKSxzLm9uY2UoImVycm9yIiwoZnVuY3Rpb24odCl7YS5lcnJvcj0hMCxhLmVtaXQoImVycm9yIix0KX0pKSksdGhpcy5zdGFjay51bnNoaWZ0KGgpLGh9LGUucHJvdG90eXBlLnJlbW92ZUZyb21TdGFjaz1mdW5jdGlvbih0KXtsZXQgZT10LnR5cGUscj1lPT09aG8uT2JqZWN0fHxlPT09aG8uQXJyYXl8fGU9PT1oby5SZWFkYWJsZVN0cmluZ3x8ZT09PWhvLlJlYWRhYmxlT2JqZWN0O2UhPT1oby5QcmltaXRpdmUmJih0aGlzLmN5Y2xlfHx0aGlzLnZpc2l0ZWQuZGVsZXRlKHQudmFsdWUpLHImJih0aGlzLmRlcHRoLT0xKSk7bGV0IG49eW9bZV07ciYmIXQuaXNFbXB0eSYmdGhpcy5nYXAmJnRoaXMuX3B1c2goIlxuIit0aGlzLmdhcC5yZXBlYXQodGhpcy5kZXB0aCkpLG4mJnRoaXMuX3B1c2gobik7bGV0IGk9dGhpcy5zdGFjay5pbmRleE9mKHQpO3RoaXMuc3RhY2suc3BsaWNlKGksMSl9LGUucHJvdG90eXBlLl9wdXNoPWZ1bmN0aW9uKHQpe3RoaXMucHVzaENhbGxlZD0hMCx0aGlzLnB1c2godCl9LGUucHJvdG90eXBlLnByb2Nlc3NSZWFkYWJsZU9iamVjdD1mdW5jdGlvbih0LGUpe2xldCByPXRoaXM7aWYoIXQuZW5kKXJldHVybiBtbyh0LnZhbHVlLGUpLnRoZW4oKGZ1bmN0aW9uKGUpe251bGwhPT1lJiYodC5maXJzdHx8ci5fcHVzaCgiLCIpLHQuZmlyc3Q9ITEsci5hZGRUb1N0YWNrKGUsdm9pZCAwLHQucmVhZENvdW50KSx0LnJlYWRDb3VudCs9MSl9KSk7dGhpcy5yZW1vdmVGcm9tU3RhY2sodCl9LGUucHJvdG90eXBlLnByb2Nlc3NPYmplY3Q9ZnVuY3Rpb24odCl7aWYoIXQudW5yZWFkLmxlbmd0aClyZXR1cm4gdm9pZCB0aGlzLnJlbW92ZUZyb21TdGFjayh0KTtsZXQgZT10LnVucmVhZC5zaGlmdCgpLHI9dC52YWx1ZVtlXTt0aGlzLmFkZFRvU3RhY2socixlLHZvaWQgMCx0KX0sZS5wcm90b3R5cGUucHJvY2Vzc0FycmF5PWZ1bmN0aW9uKHQpe2xldCBlPXQudW5yZWFkO2lmKCFlKXJldHVybiB2b2lkIHRoaXMucmVtb3ZlRnJvbVN0YWNrKHQpO2xldCByPXQuYXJyYXlMZW5ndGgtZSxuPXQudmFsdWVbcl07dC51bnJlYWQtPTEsdGhpcy5hZGRUb1N0YWNrKG4sdm9pZCAwLHIsdCl9LGUucHJvdG90eXBlLnByb2Nlc3NQcmltaXRpdmU9ZnVuY3Rpb24odCl7aWYodm9pZCAwIT09dC52YWx1ZSl7bGV0IGUscj10eXBlb2YgdC52YWx1ZTtzd2l0Y2gocil7Y2FzZSJzdHJpbmciOmU9d28odC52YWx1ZSk7YnJlYWs7Y2FzZSJudW1iZXIiOmU9TnVtYmVyLmlzRmluaXRlKHQudmFsdWUpP1N0cmluZyh0LnZhbHVlKToibnVsbCI7YnJlYWs7Y2FzZSJib29sZWFuIjplPVN0cmluZyh0LnZhbHVlKTticmVhaztjYXNlIm9iamVjdCI6dC52YWx1ZXx8KGU9Im51bGwiKTticmVhaztkZWZhdWx0OnRocm93IE9iamVjdC5hc3NpZ24obmV3IEVycm9yKCdVbmtub3duIHR5cGUgIicrcisnIi4gUGxlYXNlIGZpbGUgYW4gaXNzdWUhJykse3ZhbHVlOnQudmFsdWV9KX10aGlzLl9wdXNoKGUpfWVsc2UhdGhpcy5zdGFja1sxXXx8dGhpcy5zdGFja1sxXS50eXBlIT09aG8uQXJyYXkmJnRoaXMuc3RhY2tbMV0udHlwZSE9PWhvLlJlYWRhYmxlT2JqZWN0P3QuYWRkU2VwYXJhdG9yQWZ0ZXJFbmQ9ITE6dGhpcy5fcHVzaCgibnVsbCIpO3RoaXMucmVtb3ZlRnJvbVN0YWNrKHQpfSxlLnByb3RvdHlwZS5wcm9jZXNzUmVhZGFibGVTdHJpbmc9ZnVuY3Rpb24odCxlKXtsZXQgcj10aGlzO2lmKCF0LmVuZClyZXR1cm4gbW8odC52YWx1ZSxlKS50aGVuKChmdW5jdGlvbih0KXt0JiZyLl9wdXNoKHZvKHQudG9TdHJpbmcoKSkpfSkpO3RoaXMucmVtb3ZlRnJvbVN0YWNrKHQpfSxlLnByb3RvdHlwZS5wcm9jZXNzUHJvbWlzZT1mdW5jdGlvbih0KXtsZXQgZT10aGlzO3JldHVybiBfbyh0LnZhbHVlKS50aGVuKChmdW5jdGlvbihyKXtlLnJlbW92ZUZyb21TdGFjayh0KSxlLmFkZFRvU3RhY2socix0LmtleSx0LmluZGV4LHQucGFyZW50KX0pKX0sZS5wcm90b3R5cGUucHJvY2Vzc1N0YWNrVG9wSXRlbT1mdW5jdGlvbih0KXtsZXQgZSxyPXRoaXMsbj10aGlzLnN0YWNrWzBdO2lmKCFufHx0aGlzLmVycm9yKXJldHVybiBQcm9taXNlLnJlc29sdmUoKTt0cnl7ZT10aGlzW2JvW24udHlwZV1dKG4sdCl9Y2F0Y2godCl7cmV0dXJuIFByb21pc2UucmVqZWN0KHQpfXJldHVybiBQcm9taXNlLnJlc29sdmUoZSkudGhlbigoZnVuY3Rpb24oKXswPT09ci5zdGFjay5sZW5ndGgmJihyLmVuZD0hMCxyLl9wdXNoKG51bGwpKX0pKX0sZS5wcm90b3R5cGUuX19yZWFkPWZ1bmN0aW9uKHQpe2xldCBlPXRoaXM7aWYoIXRoaXMuaXNSZWFkaW5nJiYhdGhpcy5lcnJvcilyZXR1cm4gdGhpcy5pc1JlYWRpbmc9ITAsdGhpcy5yZWFkTW9yZT0hMSx0aGlzLnByb2Nlc3NTdGFja1RvcEl0ZW0odCkudGhlbigoZnVuY3Rpb24oKXshZS5lbmQmJiFlLmVycm9yJiYoZS5yZWFkTW9yZXx8IWUucHVzaENhbGxlZCk/Ym4oKGZ1bmN0aW9uKCl7ZS5pc1JlYWRpbmc9ITEsZS5fX3JlYWQoKX0pKTplLmlzUmVhZGluZz0hMX0pKS5jYXRjaCgoZnVuY3Rpb24odCl7ZS5lcnJvcj0hMCxlLmVtaXQoImVycm9yIix0KX0pKTt0aGlzLnJlYWRNb3JlPSEwfSxlLnByb3RvdHlwZS5fcmVhZD1mdW5jdGlvbih0KXt0aGlzLnB1c2hDYWxsZWQ9ITEsdGhpcy5fX3JlYWQodCl9LGUucHJvdG90eXBlLnBhdGg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zdGFjay5tYXAoKGZ1bmN0aW9uKHQpe2xldCBlPXQua2V5LHI9dC5pbmRleDtyZXR1cm4gZXx8cn0pKS5maWx0ZXIoKGZ1bmN0aW9uKHQpe3JldHVybiB0fHx0Pi0xfSkpLnJldmVyc2UoKX0sZX0oamkpO3ZhciBFbz1BcnJheS5pc0FycmF5LGtvPSJvYmplY3QiPT10eXBlb2YgaiYmaiYmai5PYmplY3Q9PT1PYmplY3QmJmosUm89Im9iamVjdCI9PXR5cGVvZiBzZWxmJiZzZWxmJiZzZWxmLk9iamVjdD09PU9iamVjdCYmc2VsZixqbz1rb3x8Um98fEZ1bmN0aW9uKCJyZXR1cm4gdGhpcyIpKCksVG89am8uU3ltYm9sLE9vPU9iamVjdC5wcm90b3R5cGUsQW89T28uaGFzT3duUHJvcGVydHksQ289T28udG9TdHJpbmcsTW89VG8/VG8udG9TdHJpbmdUYWc6dm9pZCAwO3ZhciB4bz1mdW5jdGlvbih0KXt2YXIgZT1Bby5jYWxsKHQsTW8pLHI9dFtNb107dHJ5e3RbTW9dPXZvaWQgMDt2YXIgbj0hMH1jYXRjaCh0KXt9dmFyIGk9Q28uY2FsbCh0KTtyZXR1cm4gbiYmKGU/dFtNb109cjpkZWxldGUgdFtNb10pLGl9LExvPU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmc7dmFyIEJvPWZ1bmN0aW9uKHQpe3JldHVybiBMby5jYWxsKHQpfSxQbz1Ubz9Uby50b1N0cmluZ1RhZzp2b2lkIDA7dmFyIFVvPWZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10P3ZvaWQgMD09PXQ/IltvYmplY3QgVW5kZWZpbmVkXSI6IltvYmplY3QgTnVsbF0iOlBvJiZQbyBpbiBPYmplY3QodCk/eG8odCk6Qm8odCl9O3ZhciBObz1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dCYmIm9iamVjdCI9PXR5cGVvZiB0fTt2YXIgRG89ZnVuY3Rpb24odCl7cmV0dXJuInN5bWJvbCI9PXR5cGVvZiB0fHxObyh0KSYmIltvYmplY3QgU3ltYm9sXSI9PVVvKHQpfSxJbz0vXC58XFsoPzpbXltcXV0qfChbIiddKSg/Oig/IVwxKVteXFxdfFxcLikqP1wxKVxdLyxxbz0vXlx3KiQvO3ZhciBGbz1mdW5jdGlvbih0LGUpe2lmKEVvKHQpKXJldHVybiExO3ZhciByPXR5cGVvZiB0O3JldHVybiEoIm51bWJlciIhPXImJiJzeW1ib2wiIT1yJiYiYm9vbGVhbiIhPXImJm51bGwhPXQmJiFEbyh0KSl8fChxby50ZXN0KHQpfHwhSW8udGVzdCh0KXx8bnVsbCE9ZSYmdCBpbiBPYmplY3QoZSkpfTt2YXIgV289ZnVuY3Rpb24odCl7dmFyIGU9dHlwZW9mIHQ7cmV0dXJuIG51bGwhPXQmJigib2JqZWN0Ij09ZXx8ImZ1bmN0aW9uIj09ZSl9O3ZhciB6byxZbz1mdW5jdGlvbih0KXtpZighV28odCkpcmV0dXJuITE7dmFyIGU9VW8odCk7cmV0dXJuIltvYmplY3QgRnVuY3Rpb25dIj09ZXx8IltvYmplY3QgR2VuZXJhdG9yRnVuY3Rpb25dIj09ZXx8IltvYmplY3QgQXN5bmNGdW5jdGlvbl0iPT1lfHwiW29iamVjdCBQcm94eV0iPT1lfSwkbz1qb1siX19jb3JlLWpzX3NoYXJlZF9fIl0sSG89KHpvPS9bXi5dKyQvLmV4ZWMoJG8mJiRvLmtleXMmJiRvLmtleXMuSUVfUFJPVE98fCIiKSk/IlN5bWJvbChzcmMpXzEuIit6bzoiIjt2YXIgSm89ZnVuY3Rpb24odCl7cmV0dXJuISFIbyYmSG8gaW4gdH0sR289RnVuY3Rpb24ucHJvdG90eXBlLnRvU3RyaW5nO3ZhciBWbz1mdW5jdGlvbih0KXtpZihudWxsIT10KXt0cnl7cmV0dXJuIEdvLmNhbGwodCl9Y2F0Y2godCl7fXRyeXtyZXR1cm4gdCsiIn1jYXRjaCh0KXt9fXJldHVybiIifSxLbz0vXlxbb2JqZWN0IC4rP0NvbnN0cnVjdG9yXF0kLyxabz1GdW5jdGlvbi5wcm90b3R5cGUsWG89T2JqZWN0LnByb3RvdHlwZSxRbz1aby50b1N0cmluZyx0YT1Yby5oYXNPd25Qcm9wZXJ0eSxlYT1SZWdFeHAoIl4iK1FvLmNhbGwodGEpLnJlcGxhY2UoL1tcXF4kLiorPygpW1xde318XS9nLCJcXCQmIikucmVwbGFjZSgvaGFzT3duUHJvcGVydHl8KGZ1bmN0aW9uKS4qPyg/PVxcXCgpfCBmb3IgLis/KD89XFxcXSkvZywiJDEuKj8iKSsiJCIpO3ZhciByYT1mdW5jdGlvbih0KXtyZXR1cm4hKCFXbyh0KXx8Sm8odCkpJiYoWW8odCk/ZWE6S28pLnRlc3QoVm8odCkpfTt2YXIgbmE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gbnVsbD09dD92b2lkIDA6dFtlXX07dmFyIGlhPWZ1bmN0aW9uKHQsZSl7dmFyIHI9bmEodCxlKTtyZXR1cm4gcmEocik/cjp2b2lkIDB9LG9hPWlhKE9iamVjdCwiY3JlYXRlIik7dmFyIGFhPWZ1bmN0aW9uKCl7dGhpcy5fX2RhdGFfXz1vYT9vYShudWxsKTp7fSx0aGlzLnNpemU9MH07dmFyIHNhPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuaGFzKHQpJiZkZWxldGUgdGhpcy5fX2RhdGFfX1t0XTtyZXR1cm4gdGhpcy5zaXplLT1lPzE6MCxlfSx1YT1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3ZhciBmYT1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9fZGF0YV9fO2lmKG9hKXt2YXIgcj1lW3RdO3JldHVybiJfX2xvZGFzaF9oYXNoX3VuZGVmaW5lZF9fIj09PXI/dm9pZCAwOnJ9cmV0dXJuIHVhLmNhbGwoZSx0KT9lW3RdOnZvaWQgMH0saGE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTt2YXIgbGE9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fX2RhdGFfXztyZXR1cm4gb2E/dm9pZCAwIT09ZVt0XTpoYS5jYWxsKGUsdCl9O3ZhciBjYT1mdW5jdGlvbih0LGUpe3ZhciByPXRoaXMuX19kYXRhX187cmV0dXJuIHRoaXMuc2l6ZSs9dGhpcy5oYXModCk/MDoxLHJbdF09b2EmJnZvaWQgMD09PWU/Il9fbG9kYXNoX2hhc2hfdW5kZWZpbmVkX18iOmUsdGhpc307ZnVuY3Rpb24gZGEodCl7dmFyIGU9LTEscj1udWxsPT10PzA6dC5sZW5ndGg7Zm9yKHRoaXMuY2xlYXIoKTsrK2U8cjspe3ZhciBuPXRbZV07dGhpcy5zZXQoblswXSxuWzFdKX19ZGEucHJvdG90eXBlLmNsZWFyPWFhLGRhLnByb3RvdHlwZS5kZWxldGU9c2EsZGEucHJvdG90eXBlLmdldD1mYSxkYS5wcm90b3R5cGUuaGFzPWxhLGRhLnByb3RvdHlwZS5zZXQ9Y2E7dmFyIHBhPWRhO3ZhciBnYT1mdW5jdGlvbigpe3RoaXMuX19kYXRhX189W10sdGhpcy5zaXplPTB9O3ZhciB5YT1mdW5jdGlvbih0LGUpe3JldHVybiB0PT09ZXx8dCE9dCYmZSE9ZX07dmFyIGJhPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPXQubGVuZ3RoO3ItLTspaWYoeWEodFtyXVswXSxlKSlyZXR1cm4gcjtyZXR1cm4tMX0sdmE9QXJyYXkucHJvdG90eXBlLnNwbGljZTt2YXIgd2E9ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fX2RhdGFfXyxyPWJhKGUsdCk7cmV0dXJuIShyPDApJiYocj09ZS5sZW5ndGgtMT9lLnBvcCgpOnZhLmNhbGwoZSxyLDEpLC0tdGhpcy5zaXplLCEwKX07dmFyIG1hPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX19kYXRhX18scj1iYShlLHQpO3JldHVybiByPDA/dm9pZCAwOmVbcl1bMV19O3ZhciBfYT1mdW5jdGlvbih0KXtyZXR1cm4gYmEodGhpcy5fX2RhdGFfXyx0KT4tMX07dmFyIFNhPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dGhpcy5fX2RhdGFfXyxuPWJhKHIsdCk7cmV0dXJuIG48MD8oKyt0aGlzLnNpemUsci5wdXNoKFt0LGVdKSk6cltuXVsxXT1lLHRoaXN9O2Z1bmN0aW9uIEVhKHQpe3ZhciBlPS0xLHI9bnVsbD09dD8wOnQubGVuZ3RoO2Zvcih0aGlzLmNsZWFyKCk7KytlPHI7KXt2YXIgbj10W2VdO3RoaXMuc2V0KG5bMF0sblsxXSl9fUVhLnByb3RvdHlwZS5jbGVhcj1nYSxFYS5wcm90b3R5cGUuZGVsZXRlPXdhLEVhLnByb3RvdHlwZS5nZXQ9bWEsRWEucHJvdG90eXBlLmhhcz1fYSxFYS5wcm90b3R5cGUuc2V0PVNhO3ZhciBrYT1FYSxSYT1pYShqbywiTWFwIik7dmFyIGphPWZ1bmN0aW9uKCl7dGhpcy5zaXplPTAsdGhpcy5fX2RhdGFfXz17aGFzaDpuZXcgcGEsbWFwOm5ldyhSYXx8a2EpLHN0cmluZzpuZXcgcGF9fTt2YXIgVGE9ZnVuY3Rpb24odCl7dmFyIGU9dHlwZW9mIHQ7cmV0dXJuInN0cmluZyI9PWV8fCJudW1iZXIiPT1lfHwic3ltYm9sIj09ZXx8ImJvb2xlYW4iPT1lPyJfX3Byb3RvX18iIT09dDpudWxsPT09dH07dmFyIE9hPWZ1bmN0aW9uKHQsZSl7dmFyIHI9dC5fX2RhdGFfXztyZXR1cm4gVGEoZSk/clsic3RyaW5nIj09dHlwZW9mIGU/InN0cmluZyI6Imhhc2giXTpyLm1hcH07dmFyIEFhPWZ1bmN0aW9uKHQpe3ZhciBlPU9hKHRoaXMsdCkuZGVsZXRlKHQpO3JldHVybiB0aGlzLnNpemUtPWU/MTowLGV9O3ZhciBDYT1mdW5jdGlvbih0KXtyZXR1cm4gT2EodGhpcyx0KS5nZXQodCl9O3ZhciBNYT1mdW5jdGlvbih0KXtyZXR1cm4gT2EodGhpcyx0KS5oYXModCl9O3ZhciB4YT1mdW5jdGlvbih0LGUpe3ZhciByPU9hKHRoaXMsdCksbj1yLnNpemU7cmV0dXJuIHIuc2V0KHQsZSksdGhpcy5zaXplKz1yLnNpemU9PW4/MDoxLHRoaXN9O2Z1bmN0aW9uIExhKHQpe3ZhciBlPS0xLHI9bnVsbD09dD8wOnQubGVuZ3RoO2Zvcih0aGlzLmNsZWFyKCk7KytlPHI7KXt2YXIgbj10W2VdO3RoaXMuc2V0KG5bMF0sblsxXSl9fUxhLnByb3RvdHlwZS5jbGVhcj1qYSxMYS5wcm90b3R5cGUuZGVsZXRlPUFhLExhLnByb3RvdHlwZS5nZXQ9Q2EsTGEucHJvdG90eXBlLmhhcz1NYSxMYS5wcm90b3R5cGUuc2V0PXhhO3ZhciBCYT1MYTtmdW5jdGlvbiBQYSh0LGUpe2lmKCJmdW5jdGlvbiIhPXR5cGVvZiB0fHxudWxsIT1lJiYiZnVuY3Rpb24iIT10eXBlb2YgZSl0aHJvdyBuZXcgVHlwZUVycm9yKCJFeHBlY3RlZCBhIGZ1bmN0aW9uIik7dmFyIHI9ZnVuY3Rpb24oKXt2YXIgbj1hcmd1bWVudHMsaT1lP2UuYXBwbHkodGhpcyxuKTpuWzBdLG89ci5jYWNoZTtpZihvLmhhcyhpKSlyZXR1cm4gby5nZXQoaSk7dmFyIGE9dC5hcHBseSh0aGlzLG4pO3JldHVybiByLmNhY2hlPW8uc2V0KGksYSl8fG8sYX07cmV0dXJuIHIuY2FjaGU9bmV3KFBhLkNhY2hlfHxCYSkscn1QYS5DYWNoZT1CYTt2YXIgVWE9UGE7dmFyIE5hPS9bXi5bXF1dK3xcWyg/OigtP1xkKyg/OlwuXGQrKT8pfChbIiddKSgoPzooPyFcMilbXlxcXXxcXC4pKj8pXDIpXF18KD89KD86XC58XFtcXSkoPzpcLnxcW1xdfCQpKS9nLERhPS9cXChcXCk/L2csSWE9ZnVuY3Rpb24odCl7dmFyIGU9VWEodCwoZnVuY3Rpb24odCl7cmV0dXJuIDUwMD09PXIuc2l6ZSYmci5jbGVhcigpLHR9KSkscj1lLmNhY2hlO3JldHVybiBlfSgoZnVuY3Rpb24odCl7dmFyIGU9W107cmV0dXJuIDQ2PT09dC5jaGFyQ29kZUF0KDApJiZlLnB1c2goIiIpLHQucmVwbGFjZShOYSwoZnVuY3Rpb24odCxyLG4saSl7ZS5wdXNoKG4/aS5yZXBsYWNlKERhLCIkMSIpOnJ8fHQpfSkpLGV9KSk7dmFyIHFhPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPS0xLG49bnVsbD09dD8wOnQubGVuZ3RoLGk9QXJyYXkobik7KytyPG47KWlbcl09ZSh0W3JdLHIsdCk7cmV0dXJuIGl9LEZhPVRvP1RvLnByb3RvdHlwZTp2b2lkIDAsV2E9RmE/RmEudG9TdHJpbmc6dm9pZCAwO3ZhciB6YT1mdW5jdGlvbiB0KGUpe2lmKCJzdHJpbmciPT10eXBlb2YgZSlyZXR1cm4gZTtpZihFbyhlKSlyZXR1cm4gcWEoZSx0KSsiIjtpZihEbyhlKSlyZXR1cm4gV2E/V2EuY2FsbChlKToiIjt2YXIgcj1lKyIiO3JldHVybiIwIj09ciYmMS9lPT0tSW5maW5pdHk/Ii0wIjpyfTt2YXIgWWE9ZnVuY3Rpb24odCl7cmV0dXJuIG51bGw9PXQ/IiI6emEodCl9O3ZhciAkYT1mdW5jdGlvbih0LGUpe3JldHVybiBFbyh0KT90OkZvKHQsZSk/W3RdOklhKFlhKHQpKX07dmFyIEhhPWZ1bmN0aW9uKHQpe2lmKCJzdHJpbmciPT10eXBlb2YgdHx8RG8odCkpcmV0dXJuIHQ7dmFyIGU9dCsiIjtyZXR1cm4iMCI9PWUmJjEvdD09LUluZmluaXR5PyItMCI6ZX07dmFyIEphPWZ1bmN0aW9uKHQsZSl7Zm9yKHZhciByPTAsbj0oZT0kYShlLHQpKS5sZW5ndGg7bnVsbCE9dCYmcjxuOyl0PXRbSGEoZVtyKytdKV07cmV0dXJuIHImJnI9PW4/dDp2b2lkIDB9O3ZhciBHYT1mdW5jdGlvbih0LGUscil7dmFyIG49bnVsbD09dD92b2lkIDA6SmEodCxlKTtyZXR1cm4gdm9pZCAwPT09bj9yOm59O3ZhciBWYT1mdW5jdGlvbih0KXtyZXR1cm4ibnVtYmVyIj09dHlwZW9mIHR8fE5vKHQpJiYiW29iamVjdCBOdW1iZXJdIj09VW8odCl9O2Z1bmN0aW9uIEthKHQpe3JldHVybiJbb2JqZWN0IFN0cmluZ10iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfWZ1bmN0aW9uIFphKHQpe3JldHVybiEoIUthKHQpfHwiIj09PXQpfWZ1bmN0aW9uIFhhKHQpe3JldHVybiJbb2JqZWN0IEFycmF5XSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9ZnVuY3Rpb24gUWEodCl7cmV0dXJuIltvYmplY3QgVW5kZWZpbmVkXSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9ZnVuY3Rpb24gdHModCl7cmV0dXJuIltvYmplY3QgT2JqZWN0XSI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9ZnVuY3Rpb24gZXModCl7cmV0dXJuISghS2EodCl8fCIiIT09dCl9ZnVuY3Rpb24gcnModCl7cmV0dXJuISFRYSh0KXx8KCEhZnVuY3Rpb24odCl7cmV0dXJuIltvYmplY3QgTnVsbF0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfSh0KXx8KCEhZnVuY3Rpb24odCl7aWYodHModCkpe2ZvcihsZXQgZSBpbiB0KXJldHVybiExO3JldHVybiEwfXJldHVybiExfSh0KXx8KCEhZXModCl8fCEhZnVuY3Rpb24odCl7cmV0dXJuISFYYSh0KSYmMD09PXQubGVuZ3RofSh0KSkpKX1mdW5jdGlvbiBucygpe2xldCB0LGUscj1uZXcgUHJvbWlzZSgoZnVuY3Rpb24oKXt0PWFyZ3VtZW50c1swXSxlPWFyZ3VtZW50c1sxXX0pKTtyZXR1cm4gci5yZXNvbHZlPXQsci5yZWplY3Q9ZSxyfWxldCBXSnNvblN0cmVhbT17cGFyc2U6YXN5bmMgZnVuY3Rpb24odCl7aWYoIVphKHQpKXJldHVybnt9O2xldCBlPXt9O3RyeXtlPUpTT04ucGFyc2UodCl9Y2F0Y2godCl7ZT17fX1yZXR1cm4gZX0scGFyc2VCeVN0cmVhbTpmdW5jdGlvbih0KXtsZXQgZT17fTtpZigibnVsbCI9PT10KXJldHVybiBudWxsO2lmKCIiPT09dClyZXR1cm57fTtsZXQgcj0iX19zeXN0ZW1fXyIsbj1geyJfX3N5c3RlbV9fIjoke3R9fWAsaT1ucygpLG89Um4obiksYT11by5wYXJzZSgiJCoiKTtyZXR1cm4gYS5vbigiZGF0YSIsKGZ1bmN0aW9uKHQpe2VbdC5rZXldPXQudmFsdWV9KSksYS5vbigiZW5kIiwoZnVuY3Rpb24oKXtsZXQgdD1HYShlLHIpO2kucmVzb2x2ZSh0KX0pKSxhLm9uKCJlcnJvciIsKGZ1bmN0aW9uKHQpe2kucmVqZWN0KHQpfSkpLG8ucGlwZShhKSxpfSxjcmVhdGVQYXJzZVN0cmVhbTpmdW5jdGlvbih0KXtyZXR1cm4gWmEodCl8fGZ1bmN0aW9uKHQpe3JldHVybiEoIVhhKHQpfHwwPT09dC5sZW5ndGh8fDE9PT10Lmxlbmd0aCYmcnModFswXSkpfSh0KXx8KHQ9IiQqIiksdW8ucGFyc2UodCl9LHN0cmluZ2lmeTphc3luYyBmdW5jdGlvbih0KXtpZihRYSh0KSlyZXR1cm4iIjtsZXQgZT0iIjt0cnl7ZT1KU09OLnN0cmluZ2lmeSh0KX1jYXRjaCh0KXtlPSIifXJldHVybiBlfSxzdHJpbmdpZnlCeVN0cmVhbTpmdW5jdGlvbih0KXtsZXQgZT0iIjtpZihRYSh0KSlyZXR1cm4iIjtpZihudWxsPT09dClyZXR1cm4ibnVsbCI7aWYoZXModCkpcmV0dXJuJyIiJztpZihWYSh0KSlyZXR1cm5gJHt0fWA7aWYoS2EodCkpcmV0dXJuYCIke3R9ImA7bGV0IHI9bnMoKSxuPW5ldyBTbyh0LG51bGwsbnVsbCwhMSk7cmV0dXJuIG4ub24oImRhdGEiLChmdW5jdGlvbih0KXtlKz10fSkpLG4ub24oImVuZCIsKGZ1bmN0aW9uKCl7ci5yZXNvbHZlKGUpfSkpLG4ub24oImVycm9yIiwoZnVuY3Rpb24odCl7ci5yZWplY3QodCl9KSkscn0sY3JlYXRlU3RyaW5naWZ5U3RyZWFtOmZ1bmN0aW9uKHQpe2lmKCF0cyh0KSYmIVhhKHQpKXRocm93IG5ldyBFcnJvcigiZGF0YSBpcyBub3Qgb2JqZWN0IG9yIGFycmF5Iik7cmV0dXJuIG5ldyBTbyh0LG51bGwsbnVsbCwhMSl9fTsKCmxldCBpbnN0YW5jZSA9IG51bGwKZnVuY3Rpb24gaW5pdChpbnB1dCl7CgogICAgLy9pbml0CiAgICBsZXQgcgogICAgCiAgICAgICAgciA9IFdKc29uU3RyZWFtKC4uLmlucHV0KQogICAgICAgIAoKICAgIC8vb24KICAgIAoKICAgIC8vc2F2ZQogICAgaW5zdGFuY2UgPSByCgp9CgpmdW5jdGlvbiBzZW5kTWVzc2FnZShkYXRhKSB7CiAgICAKICAgICAgICBzZWxmLnBvc3RNZXNzYWdlKGRhdGEpCiAgICAgICAgCn0KCmFzeW5jIGZ1bmN0aW9uIHJ1bihkYXRhKSB7CiAgICAvLyBjb25zb2xlLmxvZygnaW5uZXIgd29ya2VyIHJ1bicsZGF0YSkKCiAgICAvL21vZGUKICAgIGxldCBtb2RlID0gZGF0YS5tb2RlCgogICAgLy9jaGVjawogICAgaWYobW9kZSAhPT0gJ2luaXQnICYmIG1vZGUgIT09ICdjYWxsJyl7CiAgICAgICAgcmV0dXJuCiAgICB9CgogICAgLy9pbml0CiAgICBpZihtb2RlID09PSAnaW5pdCcpewogICAgICAgIAogICAgICAgIHRyeXsKCiAgICAgICAgICAgIC8vdHlwZQogICAgICAgICAgICBsZXQgdHlwZSA9IGRhdGEudHlwZQoKICAgICAgICAgICAgLy9pbnB1dAogICAgICAgICAgICBsZXQgaW5wdXQgPSBkYXRhLmlucHV0CiAgICAKICAgICAgICAgICAgLy9pbnN0YW5jZQogICAgICAgICAgICBpZih0eXBlID09PSAnZnVuY3Rpb24nKXsKICAgICAgICAgICAgICAgIGluaXQoLi4uaW5wdXQpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSBpZih0eXBlID09PSAnb2JqZWN0Jyl7CiAgICAgICAgICAgICAgICBpbnN0YW5jZSA9IFdKc29uU3RyZWFtCiAgICAgICAgICAgIH0KCiAgICAgICAgfQogICAgICAgIGNhdGNoKGVycil7CiAgICAgICAgCiAgICAgICAgICAgIC8vc2VuZE1lc3NhZ2UKICAgICAgICAgICAgbGV0IHJlcyA9IHsKICAgICAgICAgICAgICAgIG1vZGU6ICdlbWl0JywKICAgICAgICAgICAgICAgIGV2TmFtZTogJ2Vycm9yJywKICAgICAgICAgICAgICAgIG1zZzogZXJyLAogICAgICAgICAgICB9CiAgICAgICAgICAgIHNlbmRNZXNzYWdlKHJlcykKCiAgICAgICAgfQogICAgICAgICAgICAKICAgIH0KCiAgICAvL2NoZWNrCiAgICBpZihtb2RlID09PSAnY2FsbCcpewogICAgICAgIGxldCBzdGF0ZSA9ICcnCiAgICAgICAgbGV0IG1zZyA9IG51bGwKCiAgICAgICAgdHJ5ewoKICAgICAgICAgICAgLy9mdW4KICAgICAgICAgICAgbGV0IGZ1biA9IGluc3RhbmNlW2RhdGEuZnVuXQoKICAgICAgICAgICAgLy9pbnB1dAogICAgICAgICAgICBsZXQgaW5wdXQgPSBkYXRhLmlucHV0CgogICAgICAgICAgICAvL2V4ZWMKICAgICAgICAgICAgYXdhaXQgZnVuKC4uLmlucHV0KQogICAgICAgICAgICAgICAgLnRoZW4oKHN1YykgPT4gewogICAgICAgICAgICAgICAgICAgIHN0YXRlPSdzdWNjZXNzJwogICAgICAgICAgICAgICAgICAgIG1zZz1zdWMKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4gewogICAgICAgICAgICAgICAgICAgIHN0YXRlPSdlcnJvcicKICAgICAgICAgICAgICAgICAgICBtc2c9ZXJyCiAgICAgICAgICAgICAgICB9KQoKICAgICAgICB9CiAgICAgICAgY2F0Y2goZXJyKXsKICAgICAgICAgICAgc3RhdGUgPSAnZXJyb3InCiAgICAgICAgICAgIG1zZyA9IGVycgogICAgICAgIH0KICAgICAgICAKICAgICAgICAvL3NlbmRNZXNzYWdlCiAgICAgICAgbGV0IHJlcyA9IHsKICAgICAgICAgICAgbW9kZTogJ3JldHVybicsCiAgICAgICAgICAgIGlkOiBkYXRhLmlkLAogICAgICAgICAgICBmdW46IGRhdGEuZnVuLAogICAgICAgICAgICBzdGF0ZSwKICAgICAgICAgICAgbXNnLAogICAgICAgIH0KICAgICAgICBzZW5kTWVzc2FnZShyZXMpCgogICAgfQoKfQoKZnVuY3Rpb24gcmVjdk1lc3NhZ2UoZGF0YSkgewogICAgLy8gY29uc29sZS5sb2coJ2lubmVyIHdvcmtlciByZWN2OicsIGRhdGEpCgogICAgLy9kYXRhUmVjdgogICAgbGV0IGRhdGFSZWN2ID0gZGF0YQoKICAgIC8vcnVuCiAgICBydW4oZGF0YVJlY3YpCgp9CgoKICAgICAgICBzZWxmLm9ubWVzc2FnZSA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIHJlY3ZNZXNzYWdlKGUuZGF0YSkKICAgICAgICB9CiAgICAgICAgCgo=",window.atob(c));function u(){var Z=l();function b(l){try{var Z=new Blob([l]),d=window.URL||window.webkitURL;return new Worker(d.createObjectURL(Z))}catch(l){y(l)}}var c=b(G);if(!c)return y("invalid worker"),null;function X(){c?(c.terminate(),c=void 0):y("worker has been terminated")}function W(){var l={mode:"init",type:"object",input:Array.prototype.slice.call(arguments)};c.postMessage(l)}function i(){var l=d(),b=m(),G={mode:"call",id:b,fun:"stringify",input:Array.prototype.slice.call(arguments)};return c.postMessage(G),Z.once(b,(function(Z){"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l}function u(){var l=d(),b=m(),G={mode:"call",id:b,fun:"parse",input:Array.prototype.slice.call(arguments)};return c.postMessage(G),Z.once(b,(function(Z){"success"===Z.state?l.resolve(Z.msg):l.reject(Z.msg)})),l}function p(l){var d=l,m=d.mode;"emit"!==m&&"return"!==m||("emit"===m&&Z.emit(d.evName,d.msg),"return"===m&&Z.emit(d.id,d))}function y(l){Z.emit("error",l)}return c.onmessage=function(l){p(l.data)},c.onerror=y,W(Array.prototype.slice.call(arguments)),Z.stringify=i,Z.parse=u,Z.terminate=X,Z}var p,y,V={stringify:(y=b(W.mark((function l(){var d,m,b,c=arguments;return W.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return d=Array.prototype.slice.call(c),m=u(),l.next=4,m.stringify.apply(m,Z(d)).finally((function(){m.terminate()}));case 4:return b=l.sent,l.abrupt("return",b);case 6:case"end":return l.stop()}}),l)}))),function(){return y.apply(this,arguments)}),parse:(p=b(W.mark((function l(){var d,m,b,c=arguments;return W.wrap((function(l){for(;;)switch(l.prev=l.next){case 0:return d=Array.prototype.slice.call(c),m=u(),l.next=4,m.parse.apply(m,Z(d)).finally((function(){m.terminate()}));case 4:return b=l.sent,l.abrupt("return",b);case 6:case"end":return l.stop()}}),l)}))),function(){return p.apply(this,arguments)})};for(var I in X=l(),V){var h=V[I];X[I]=h}}(),X}()}));return"undefined"!=typeof window&&void 0!==window.document?G:c}));
